{"version":3,"file":"webglutenfree.js","sources":["../build/types.js","../build/util/env.js","../build/util/assert.js","../build/state.js","../build/command.js","../build/target.js","../build/vertex-buffer.js","../build/util/array.js","../build/element-buffer.js","../build/attributes.js","../build/texture.js","../build/renderbuffer.js","../build/framebuffer.js","../build/device.js"],"sourcesContent":["export var BufferUsage;\r\n(function (BufferUsage) {\r\n    BufferUsage[BufferUsage[\"STATIC_DRAW\"] = 35044] = \"STATIC_DRAW\";\r\n    BufferUsage[BufferUsage[\"DYNAMIC_DRAW\"] = 35048] = \"DYNAMIC_DRAW\";\r\n    BufferUsage[BufferUsage[\"STREAM_DRAW\"] = 35040] = \"STREAM_DRAW\";\r\n    BufferUsage[BufferUsage[\"STATIC_READ\"] = 35045] = \"STATIC_READ\";\r\n    BufferUsage[BufferUsage[\"DYNAMIC_READ\"] = 35049] = \"DYNAMIC_READ\";\r\n    BufferUsage[BufferUsage[\"STREAM_READ\"] = 35041] = \"STREAM_READ\";\r\n    BufferUsage[BufferUsage[\"STATIC_COPY\"] = 35046] = \"STATIC_COPY\";\r\n    BufferUsage[BufferUsage[\"DYNAMIC_COPY\"] = 35050] = \"DYNAMIC_COPY\";\r\n    BufferUsage[BufferUsage[\"STREAM_COPY\"] = 35042] = \"STREAM_COPY\";\r\n})(BufferUsage || (BufferUsage = {}));\r\n//# sourceMappingURL=types.js.map","// This file contains facilities for determining whether we are currently in a\r\n// debug build. Production builds completely dead-code-eliminate its contents\r\n// and all blocks guarded by `IS_DEBUG_BUILD` throughout the project.\r\n// For nonproduction builds `IS_DEBUG_BUILD` is not eliminated and always\r\n// evaluates to `true`, however, consumers can always perform the\r\n// same dead code elimination further down the road by replacing (or envifying)\r\n// `process.env.NODE_ENV` with \"production\".\r\nconst __OPAQUE_TRUE__ = Math.random() > -1;\r\nconst __OPAQUE_ENV__ = __OPAQUE_TRUE__ ? \"development\" : \"production\";\r\nconst process = { env: { NODE_ENV: __OPAQUE_ENV__ } };\r\n/**\r\n * Are we in a debug build?\r\n */\r\nexport const IS_DEBUG_BUILD = process.env.NODE_ENV !== \"production\";\r\n//# sourceMappingURL=env.js.map","import { IS_DEBUG_BUILD } from \"./env\";\r\nexport function is(got, expected, fmt) {\r\n    const valuesEqual = got === expected;\r\n    if (IS_DEBUG_BUILD) {\r\n        if (!valuesEqual) {\r\n            const msg = fmt\r\n                ? fmt(got, expected)\r\n                : `Assertion failed: value ${got} not equal to ${expected}`;\r\n            throw new Error(msg);\r\n        }\r\n    }\r\n    return valuesEqual;\r\n}\r\nexport function isTrue(got, fmt) {\r\n    const valueTrue = got === true;\r\n    if (IS_DEBUG_BUILD) {\r\n        if (!valueTrue) {\r\n            const msg = fmt\r\n                ? typeof fmt === \"string\" ? fmt : fmt(got)\r\n                : `Assertion failed: values ${got} is not true`;\r\n            throw new Error(msg);\r\n        }\r\n    }\r\n    return valueTrue;\r\n}\r\nexport function isBoolean(got, fmt) {\r\n    const valueBoolean = typeof got === \"boolean\";\r\n    if (IS_DEBUG_BUILD) {\r\n        if (!valueBoolean) {\r\n            const msg = fmt\r\n                ? fmt(got)\r\n                : `Assertion failed: value ${got} not a boolean`;\r\n            throw new Error(msg);\r\n        }\r\n    }\r\n    return valueBoolean;\r\n}\r\nexport function isNumber(got, fmt) {\r\n    const valueNumber = typeof got === \"number\";\r\n    if (IS_DEBUG_BUILD) {\r\n        if (!valueNumber) {\r\n            const msg = fmt\r\n                ? fmt(got)\r\n                : `Assertion failed: value ${got} not a number`;\r\n            throw new Error(msg);\r\n        }\r\n    }\r\n    return valueNumber;\r\n}\r\nexport function isArray(got, fmt) {\r\n    const valueArray = Array.isArray(got);\r\n    if (IS_DEBUG_BUILD) {\r\n        if (!valueArray) {\r\n            const msg = fmt\r\n                ? fmt(got)\r\n                : `Assertion failed: value ${got} not an array`;\r\n            throw new Error(msg);\r\n        }\r\n    }\r\n    return valueArray;\r\n}\r\nexport function isString(got, fmt) {\r\n    const valueString = typeof got === \"string\";\r\n    if (IS_DEBUG_BUILD) {\r\n        if (!valueString) {\r\n            const msg = fmt\r\n                ? fmt(got)\r\n                : `Assertion failed: value ${got} not a string`;\r\n            throw new Error(msg);\r\n        }\r\n    }\r\n    return valueString;\r\n}\r\nexport function isNotNullOrUndefined(got, fmt) {\r\n    const valueNotNullOrUndefined = typeof got !== \"undefined\" && got !== null;\r\n    if (IS_DEBUG_BUILD) {\r\n        if (!valueNotNullOrUndefined) {\r\n            const msg = fmt\r\n                ? fmt(got)\r\n                : `Assertion failed: value undefined or null`;\r\n            throw new Error(msg);\r\n        }\r\n    }\r\n    return valueNotNullOrUndefined;\r\n}\r\nexport function isNotEmpty(got, fmt) {\r\n    const valueNotEmpty = !!got.length;\r\n    if (IS_DEBUG_BUILD) {\r\n        if (!valueNotEmpty) {\r\n            const msg = fmt\r\n                ? fmt(got)\r\n                : `Assertion failed: string or array value empty`;\r\n            throw new Error(msg);\r\n        }\r\n    }\r\n    return valueNotEmpty;\r\n}\r\nexport function isGreater(got, low, fmt) {\r\n    const valueGreater = got > low;\r\n    if (IS_DEBUG_BUILD) {\r\n        if (!valueGreater) {\r\n            const msg = fmt\r\n                ? fmt(got, low)\r\n                : `Assertion failed: value ${got} not greater than expected ${low}`;\r\n            throw new Error(msg);\r\n        }\r\n    }\r\n    return valueGreater;\r\n}\r\nexport function isGreaterEqual(got, low, fmt) {\r\n    const valueGreaterEqual = got >= low;\r\n    if (IS_DEBUG_BUILD) {\r\n        if (!valueGreaterEqual) {\r\n            const msg = fmt\r\n                ? fmt(got, low)\r\n                : `Assertion failed: value ${got} not greater-equal than expected ${low}`;\r\n            throw new Error(msg);\r\n        }\r\n    }\r\n    return valueGreaterEqual;\r\n}\r\nexport function isInRangeInclusive(got, low, high, fmt) {\r\n    const valueInRangeInclusive = got >= low && got <= high;\r\n    if (IS_DEBUG_BUILD) {\r\n        if (!valueInRangeInclusive) {\r\n            const msg = fmt\r\n                ? fmt(got, low, high)\r\n                : `Assertion failed: value ${got} not in range [${low},${high}]`;\r\n            throw new Error(msg);\r\n        }\r\n    }\r\n    return valueInRangeInclusive;\r\n}\r\nexport function unreachable(got, fmt) {\r\n    // \"unreachable\" can not be eliminated, as its \"return value\" is\r\n    // captured by the type system at the callsite for control-flow analysis.\r\n    const msg = fmt\r\n        ? fmt(got)\r\n        : `Assertion failed: this branch should be unreachable`;\r\n    throw new Error(msg);\r\n}\r\n//# sourceMappingURL=assert.js.map","/**\r\n * A thin layer on top of WebGL remembering the current state, only\r\n * setting the actual WebGL state when needed.\r\n *\r\n * `State` contains locks and state bits. Locks represent an ongoing\r\n * usage session with a resource. While a resource is locked, all the\r\n * state bits set when locking are expected to still be in place. Any\r\n * attempt to set those state bits while the lock is held is\r\n * considered an error.\r\n */\r\nexport class State {\r\n    constructor(gl) {\r\n        this.lockedTarget = null;\r\n        this.lockedCommand = null;\r\n        // Each bit of state can also be `undefined`, meaning \"we don't\r\n        // know\". This will cause the comparison to fail and we will issue\r\n        // a state transition to ensure the value is what we need it to\r\n        // be. This happens for new `State`s, and after `state.reset()` is\r\n        // called. To preserve some sanity, we disallow calling\r\n        // `state.reset()` if we currently have any resource locked (we\r\n        // are in the middle of a rendering session).\r\n        this.glDrawFramebuffer = undefined;\r\n        this.glDrawBuffers = undefined;\r\n        this.glProgram = undefined;\r\n        this.depthTest = undefined;\r\n        this.stencilTest = undefined;\r\n        this.blend = undefined;\r\n        this.gl = gl;\r\n    }\r\n    /**\r\n     * Set the depth test strategy if it differs from the current one.\r\n     */\r\n    setDepthTest(depthTest) {\r\n        if (!DepthTestDescriptor.equals(this.depthTest, depthTest)) {\r\n            const gl = this.gl;\r\n            if (depthTest) {\r\n                gl.enable(gl.DEPTH_TEST);\r\n                gl.depthFunc(depthTest.func);\r\n                gl.depthMask(depthTest.mask);\r\n                gl.depthRange(depthTest.rangeStart, depthTest.rangeEnd);\r\n            }\r\n            else {\r\n                gl.disable(gl.DEPTH_TEST);\r\n            }\r\n            this.depthTest = depthTest;\r\n        }\r\n    }\r\n    /**\r\n     * Set the stencil test strategy if it differs from the current\r\n     * one.\r\n     */\r\n    setStencilTest(stencilTest) {\r\n        if (!StencilTestDescriptor.equals(this.stencilTest, stencilTest)) {\r\n            const gl = this.gl;\r\n            if (stencilTest) {\r\n                const { frontFunc, backFunc, frontFuncRef, backFuncRef, frontFuncMask, backFuncMask, frontMask, backMask, frontOpFail, backOpFail, frontOpZFail, backOpZFail, frontOpZPass, backOpZPass, } = stencilTest;\r\n                gl.enable(gl.STENCIL_TEST);\r\n                gl.stencilFuncSeparate(gl.FRONT, frontFunc, frontFuncRef, frontFuncMask);\r\n                gl.stencilFuncSeparate(gl.BACK, backFunc, backFuncRef, backFuncMask);\r\n                gl.stencilMaskSeparate(gl.FRONT, frontMask);\r\n                gl.stencilMaskSeparate(gl.BACK, backMask);\r\n                gl.stencilOpSeparate(gl.FRONT, frontOpFail, frontOpZFail, frontOpZPass);\r\n                gl.stencilOpSeparate(gl.BACK, backOpFail, backOpZFail, backOpZPass);\r\n            }\r\n            else {\r\n                gl.disable(gl.STENCIL_TEST);\r\n            }\r\n            this.stencilTest = stencilTest;\r\n        }\r\n    }\r\n    /**\r\n     * Set the blending strategy if it differs from the current one.\r\n     */\r\n    setBlend(blend) {\r\n        if (!BlendDescriptor.equals(this.blend, blend)) {\r\n            const gl = this.gl;\r\n            if (blend) {\r\n                gl.enable(gl.BLEND);\r\n                gl.blendFuncSeparate(blend.srcRGB, blend.dstRGB, blend.srcAlpha, blend.dstAlpha);\r\n                gl.blendEquationSeparate(blend.eqnRGB, blend.eqnAlpha);\r\n                if (blend.color) {\r\n                    const [r, g, b, a] = blend.color;\r\n                    gl.blendColor(r, g, b, a);\r\n                }\r\n            }\r\n            else {\r\n                gl.disable(gl.BLEND);\r\n            }\r\n            this.blend = blend;\r\n        }\r\n    }\r\n    /**\r\n     * Lock a `Target` for this `State`. Compare the underlying\r\n     * framebuffer and draw buffers and only set them if needed.\r\n     *\r\n     * Each `Device` must have at most one `Target` locked at any\r\n     * time. Nested binding is not supported even though it is not\r\n     * prohibited by the shape of the API:\r\n     *\r\n     * ```typescript\r\n     * // This produces a runtime error\r\n     * fbo.target((fbort) => {\r\n     *     dev.target((rt) => rt.draw(...));\r\n     *     fbort.draw(...);\r\n     * });\r\n     * ```\r\n     */\r\n    lockTarget(target, glDrawFramebuffer, glDrawBuffers) {\r\n        if (this.lockedTarget) {\r\n            throw new Error(\"Cannot lock Target, already locked\");\r\n        }\r\n        const gl = this.gl;\r\n        if (this.glDrawFramebuffer !== glDrawFramebuffer) {\r\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, glDrawFramebuffer);\r\n            this.glDrawFramebuffer = glDrawFramebuffer;\r\n        }\r\n        if (typeof this.glDrawBuffers === \"undefined\"\r\n            || !arrayEquals(this.glDrawBuffers, glDrawBuffers)) {\r\n            gl.drawBuffers(glDrawBuffers);\r\n            this.glDrawBuffers = glDrawBuffers;\r\n        }\r\n        this.lockedTarget = target;\r\n    }\r\n    /**\r\n     * Unlock the currently locked target. Does not unbind the\r\n     * framebuffer nor the draw buffers, expecting they will be\r\n     * conditionally bound in the next call to `State.lockTarget()`.\r\n     *\r\n     * Errors if the target is `null` already, as it indicates a usage\r\n     * bug.\r\n     */\r\n    unlockTarget() {\r\n        if (!this.lockedTarget) {\r\n            throw new Error(\"Cannot unlock Target, not locked\");\r\n        }\r\n        this.lockedTarget = null;\r\n    }\r\n    /**\r\n     * Lock a `Command` for this `State`. Compare the underlying\r\n     * program and only set it if needed.\r\n     *\r\n     * Each `Device` must have at most one `Command` locked at any\r\n     * time. Nested binding is not supported even though it is not\r\n     * prohibited by the shape of the API:\r\n     *\r\n     * ```typescript\r\n     * // This produces a runtime error\r\n     * dev.target((rt) => {\r\n     *     rt.batch(cmd, (draw) => {\r\n     *         rt.draw(cmd, attrs, props);\r\n     *     });\r\n     * });\r\n     * ```\r\n     */\r\n    lockCommand(command, glProgram) {\r\n        if (this.lockedCommand) {\r\n            throw new Error(\"Cannot lock Command, already locked\");\r\n        }\r\n        if (this.glProgram !== glProgram) {\r\n            this.gl.useProgram(glProgram);\r\n            this.glProgram = glProgram;\r\n        }\r\n        this.lockedCommand = command;\r\n    }\r\n    /**\r\n     * Unlock the currently locked command. Does not unbind the\r\n     * program, expecting it will be conditionally bound in the next\r\n     * call to `State.lockCommand()`.\r\n     *\r\n     * Errors if `lockedCommand` is `null` already, as it indicates a\r\n     * usage bug.\r\n     */\r\n    unlockCommand() {\r\n        if (!this.lockedCommand) {\r\n            throw new Error(\"Cannot unlock Command, not locked\");\r\n        }\r\n        this.lockedCommand = null;\r\n    }\r\n    /**\r\n     * Return whether the currently locked Target is the same as the\r\n     * parameter.\r\n     */\r\n    isTargetLocked(target) {\r\n        return this.lockedTarget === target;\r\n    }\r\n    /**\r\n     * Return whether the currently locked Command is the same as the\r\n     * parameter.\r\n     */\r\n    isCommandLocked(command) {\r\n        return this.lockedCommand === command;\r\n    }\r\n    /**\r\n     * Return whether there is no Target currently locked.\r\n     */\r\n    isTargetUnlocked() {\r\n        return this.lockedTarget === null;\r\n    }\r\n    /**\r\n     * Return whether there is no Command currently locked.\r\n     */\r\n    isCommandUnlocked() {\r\n        return this.lockedCommand === null;\r\n    }\r\n    /**\r\n     * Reset all knowledge and assumptions about current state. Can't\r\n     * be used while a resource is locked.\r\n     */\r\n    reset() {\r\n        if (this.lockedTarget) {\r\n            throw new Error(\"Cannot reset when Target is locked\");\r\n        }\r\n        if (this.lockedCommand) {\r\n            throw new Error(\"Cannot reset when Command is locked\");\r\n        }\r\n        this.lockedTarget = null;\r\n        this.lockedCommand = null;\r\n        this.glDrawFramebuffer = undefined;\r\n        this.glDrawBuffers = undefined;\r\n        this.glProgram = undefined;\r\n        this.depthTest = undefined;\r\n        this.stencilTest = undefined;\r\n        this.blend = undefined;\r\n    }\r\n}\r\nexport class DepthTestDescriptor {\r\n    constructor(func, mask, rangeStart, rangeEnd) {\r\n        this.func = func;\r\n        this.mask = mask;\r\n        this.rangeStart = rangeStart;\r\n        this.rangeEnd = rangeEnd;\r\n    }\r\n    static equals(left, right) {\r\n        if (left === right) {\r\n            return true;\r\n        }\r\n        if (!left || !right) {\r\n            return false;\r\n        }\r\n        if (left.func !== right.func) {\r\n            return false;\r\n        }\r\n        if (left.mask !== right.mask) {\r\n            return false;\r\n        }\r\n        if (left.rangeStart !== right.rangeStart) {\r\n            return false;\r\n        }\r\n        if (left.rangeEnd !== right.rangeEnd) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexport class StencilTestDescriptor {\r\n    constructor(frontFunc, backFunc, frontFuncRef, backFuncRef, frontFuncMask, backFuncMask, frontMask, backMask, frontOpFail, backOpFail, frontOpZFail, backOpZFail, frontOpZPass, backOpZPass) {\r\n        this.frontFunc = frontFunc;\r\n        this.backFunc = backFunc;\r\n        this.frontFuncRef = frontFuncRef;\r\n        this.backFuncRef = backFuncRef;\r\n        this.frontFuncMask = frontFuncMask;\r\n        this.backFuncMask = backFuncMask;\r\n        this.frontMask = frontMask;\r\n        this.backMask = backMask;\r\n        this.frontOpFail = frontOpFail;\r\n        this.backOpFail = backOpFail;\r\n        this.frontOpZFail = frontOpZFail;\r\n        this.backOpZFail = backOpZFail;\r\n        this.frontOpZPass = frontOpZPass;\r\n        this.backOpZPass = backOpZPass;\r\n    }\r\n    static equals(left, right) {\r\n        if (left === right) {\r\n            return true;\r\n        }\r\n        if (!left || !right) {\r\n            return false;\r\n        }\r\n        if (left.frontFunc !== right.frontFunc) {\r\n            return false;\r\n        }\r\n        if (left.backFunc !== right.backFunc) {\r\n            return false;\r\n        }\r\n        if (left.frontFuncRef !== right.frontFuncRef) {\r\n            return false;\r\n        }\r\n        if (left.backFuncRef !== right.backFuncRef) {\r\n            return false;\r\n        }\r\n        if (left.frontFuncMask !== right.frontFuncMask) {\r\n            return false;\r\n        }\r\n        if (left.backFuncMask !== right.backFuncMask) {\r\n            return false;\r\n        }\r\n        if (left.frontMask !== right.frontMask) {\r\n            return false;\r\n        }\r\n        if (left.backMask !== right.backMask) {\r\n            return false;\r\n        }\r\n        if (left.frontOpFail !== right.frontOpFail) {\r\n            return false;\r\n        }\r\n        if (left.backOpFail !== right.backOpFail) {\r\n            return false;\r\n        }\r\n        if (left.frontOpZFail !== right.frontOpZFail) {\r\n            return false;\r\n        }\r\n        if (left.backOpZFail !== right.backOpZFail) {\r\n            return false;\r\n        }\r\n        if (left.frontOpZPass !== right.frontOpZPass) {\r\n            return false;\r\n        }\r\n        if (left.backOpZPass !== right.backOpZPass) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexport class BlendDescriptor {\r\n    constructor(srcRGB, srcAlpha, dstRGB, dstAlpha, eqnRGB, eqnAlpha, color) {\r\n        this.srcRGB = srcRGB;\r\n        this.srcAlpha = srcAlpha;\r\n        this.dstRGB = dstRGB;\r\n        this.dstAlpha = dstAlpha;\r\n        this.eqnRGB = eqnRGB;\r\n        this.eqnAlpha = eqnAlpha;\r\n        this.color = color;\r\n    }\r\n    static equals(left, right) {\r\n        if (left === right) {\r\n            return true;\r\n        }\r\n        if (!left || !right) {\r\n            return false;\r\n        }\r\n        if (left.srcRGB !== right.srcRGB) {\r\n            return false;\r\n        }\r\n        if (left.srcAlpha !== right.srcAlpha) {\r\n            return false;\r\n        }\r\n        if (left.dstRGB !== right.dstRGB) {\r\n            return false;\r\n        }\r\n        if (left.dstAlpha !== right.dstAlpha) {\r\n            return false;\r\n        }\r\n        if (left.eqnRGB !== right.eqnRGB) {\r\n            return false;\r\n        }\r\n        if (left.eqnAlpha !== right.eqnAlpha) {\r\n            return false;\r\n        }\r\n        if (left.color === right.color) {\r\n            return true;\r\n        }\r\n        if (!left.color || !right.color) {\r\n            return false;\r\n        }\r\n        if (left.color[0] !== right.color[0]) {\r\n            return false;\r\n        }\r\n        if (left.color[1] !== right.color[1]) {\r\n            return false;\r\n        }\r\n        if (left.color[2] !== right.color[2]) {\r\n            return false;\r\n        }\r\n        if (left.color[3] !== right.color[3]) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction arrayEquals(left, right) {\r\n    if (left.length !== right.length) {\r\n        return false;\r\n    }\r\n    for (let i = 0; i < left.length; ++i) {\r\n        if (left[i] !== right[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n//# sourceMappingURL=state.js.map","import * as assert from \"./util/assert\";\r\nimport { IS_DEBUG_BUILD } from \"./util/env\";\r\nimport { DepthTestDescriptor, StencilTestDescriptor, BlendDescriptor, } from \"./state\";\r\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\r\nconst UNKNOWN_ATTRIB_LOCATION = -1;\r\nexport var UniformType;\r\n(function (UniformType) {\r\n    UniformType[UniformType[\"FLOAT\"] = 5126] = \"FLOAT\";\r\n    UniformType[UniformType[\"FLOAT_VEC2\"] = 35664] = \"FLOAT_VEC2\";\r\n    UniformType[UniformType[\"FLOAT_VEC3\"] = 35665] = \"FLOAT_VEC3\";\r\n    UniformType[UniformType[\"FLOAT_VEC4\"] = 35666] = \"FLOAT_VEC4\";\r\n    UniformType[UniformType[\"INT\"] = 5124] = \"INT\";\r\n    UniformType[UniformType[\"INT_VEC2\"] = 35667] = \"INT_VEC2\";\r\n    UniformType[UniformType[\"INT_VEC3\"] = 35668] = \"INT_VEC3\";\r\n    UniformType[UniformType[\"INT_VEC4\"] = 35669] = \"INT_VEC4\";\r\n    UniformType[UniformType[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\r\n    UniformType[UniformType[\"UNSIGNED_INT_VEC2\"] = 36294] = \"UNSIGNED_INT_VEC2\";\r\n    UniformType[UniformType[\"UNSIGNED_INT_VEC3\"] = 36295] = \"UNSIGNED_INT_VEC3\";\r\n    UniformType[UniformType[\"UNSIGNED_INT_VEC4\"] = 36296] = \"UNSIGNED_INT_VEC4\";\r\n    UniformType[UniformType[\"FLOAT_MAT2\"] = 35674] = \"FLOAT_MAT2\";\r\n    UniformType[UniformType[\"FLOAT_MAT3\"] = 35675] = \"FLOAT_MAT3\";\r\n    UniformType[UniformType[\"FLOAT_MAT4\"] = 35676] = \"FLOAT_MAT4\";\r\n    UniformType[UniformType[\"SAMPLER_2D\"] = 35678] = \"SAMPLER_2D\";\r\n    UniformType[UniformType[\"SAMPLER_CUBE\"] = 35680] = \"SAMPLER_CUBE\";\r\n    // TODO: support all uniform types\r\n    // BOOL\r\n})(UniformType || (UniformType = {}));\r\nexport var DepthFunc;\r\n(function (DepthFunc) {\r\n    DepthFunc[DepthFunc[\"ALWAYS\"] = 519] = \"ALWAYS\";\r\n    DepthFunc[DepthFunc[\"NEVER\"] = 512] = \"NEVER\";\r\n    DepthFunc[DepthFunc[\"EQUAL\"] = 514] = \"EQUAL\";\r\n    DepthFunc[DepthFunc[\"NOTEQUAL\"] = 517] = \"NOTEQUAL\";\r\n    DepthFunc[DepthFunc[\"LESS\"] = 513] = \"LESS\";\r\n    DepthFunc[DepthFunc[\"LEQUAL\"] = 515] = \"LEQUAL\";\r\n    DepthFunc[DepthFunc[\"GREATER\"] = 516] = \"GREATER\";\r\n    DepthFunc[DepthFunc[\"GEQUAL\"] = 518] = \"GEQUAL\";\r\n})(DepthFunc || (DepthFunc = {}));\r\nexport var StencilFunc;\r\n(function (StencilFunc) {\r\n    StencilFunc[StencilFunc[\"ALWAYS\"] = 519] = \"ALWAYS\";\r\n    StencilFunc[StencilFunc[\"NEVER\"] = 512] = \"NEVER\";\r\n    StencilFunc[StencilFunc[\"EQUAL\"] = 514] = \"EQUAL\";\r\n    StencilFunc[StencilFunc[\"NOTEQUAL\"] = 517] = \"NOTEQUAL\";\r\n    StencilFunc[StencilFunc[\"LESS\"] = 513] = \"LESS\";\r\n    StencilFunc[StencilFunc[\"LEQUAL\"] = 515] = \"LEQUAL\";\r\n    StencilFunc[StencilFunc[\"GREATER\"] = 516] = \"GREATER\";\r\n    StencilFunc[StencilFunc[\"GEQUAL\"] = 518] = \"GEQUAL\";\r\n})(StencilFunc || (StencilFunc = {}));\r\nexport var StencilOp;\r\n(function (StencilOp) {\r\n    StencilOp[StencilOp[\"KEEP\"] = 7680] = \"KEEP\";\r\n    StencilOp[StencilOp[\"ZERO\"] = 0] = \"ZERO\";\r\n    StencilOp[StencilOp[\"REPLACE\"] = 7681] = \"REPLACE\";\r\n    StencilOp[StencilOp[\"INCR\"] = 7682] = \"INCR\";\r\n    StencilOp[StencilOp[\"INCR_WRAP\"] = 34055] = \"INCR_WRAP\";\r\n    StencilOp[StencilOp[\"DECR\"] = 7683] = \"DECR\";\r\n    StencilOp[StencilOp[\"DECR_WRAP\"] = 34056] = \"DECR_WRAP\";\r\n    StencilOp[StencilOp[\"INVERT\"] = 5386] = \"INVERT\";\r\n})(StencilOp || (StencilOp = {}));\r\nexport var BlendFunc;\r\n(function (BlendFunc) {\r\n    BlendFunc[BlendFunc[\"ZERO\"] = 0] = \"ZERO\";\r\n    BlendFunc[BlendFunc[\"ONE\"] = 1] = \"ONE\";\r\n    BlendFunc[BlendFunc[\"SRC_COLOR\"] = 768] = \"SRC_COLOR\";\r\n    BlendFunc[BlendFunc[\"SRC_ALPHA\"] = 770] = \"SRC_ALPHA\";\r\n    BlendFunc[BlendFunc[\"ONE_MINUS_SRC_COLOR\"] = 769] = \"ONE_MINUS_SRC_COLOR\";\r\n    BlendFunc[BlendFunc[\"ONE_MINUS_SRC_ALPHA\"] = 771] = \"ONE_MINUS_SRC_ALPHA\";\r\n    BlendFunc[BlendFunc[\"DST_COLOR\"] = 774] = \"DST_COLOR\";\r\n    BlendFunc[BlendFunc[\"DST_ALPHA\"] = 772] = \"DST_ALPHA\";\r\n    BlendFunc[BlendFunc[\"ONE_MINUS_DST_COLOR\"] = 775] = \"ONE_MINUS_DST_COLOR\";\r\n    BlendFunc[BlendFunc[\"ONE_MINUS_DST_ALPHA\"] = 773] = \"ONE_MINUS_DST_ALPHA\";\r\n    BlendFunc[BlendFunc[\"CONSTANT_COLOR\"] = 32769] = \"CONSTANT_COLOR\";\r\n    BlendFunc[BlendFunc[\"CONSTANT_ALPHA\"] = 32771] = \"CONSTANT_ALPHA\";\r\n    BlendFunc[BlendFunc[\"ONE_MINUS_CONSTANT_COLOR\"] = 32770] = \"ONE_MINUS_CONSTANT_COLOR\";\r\n    BlendFunc[BlendFunc[\"ONE_MINUS_CONSTANT_ALPHA\"] = 32772] = \"ONE_MINUS_CONSTANT_ALPHA\";\r\n})(BlendFunc || (BlendFunc = {}));\r\nexport var BlendEquation;\r\n(function (BlendEquation) {\r\n    BlendEquation[BlendEquation[\"FUNC_ADD\"] = 32774] = \"FUNC_ADD\";\r\n    BlendEquation[BlendEquation[\"FUNC_SUBTRACT\"] = 32778] = \"FUNC_SUBTRACT\";\r\n    BlendEquation[BlendEquation[\"FUNC_REVERSE_SUBTRACT\"] = 32779] = \"FUNC_REVERSE_SUBTRACT\";\r\n    BlendEquation[BlendEquation[\"MIN\"] = 32775] = \"MIN\";\r\n    BlendEquation[BlendEquation[\"MAX\"] = 32776] = \"MAX\";\r\n})(BlendEquation || (BlendEquation = {}));\r\nexport function _createCommand(state, vert, frag, { uniforms = {}, depth, stencil, blend, } = {}) {\r\n    assert.isString(vert, fmtParamNonNull(\"vert\"));\r\n    assert.isString(frag, fmtParamNonNull(\"frag\"));\r\n    const depthDescr = parseDepth(depth);\r\n    const stencilDescr = parseStencil(stencil);\r\n    const blendDescr = parseBlend(blend);\r\n    return new Command(state, vert, frag, uniforms, depthDescr, stencilDescr, blendDescr);\r\n}\r\nexport class Command {\r\n    constructor(state, vsSource, fsSource, uniforms, depthDescr, stencilDescr, blendDescr) {\r\n        this.state = state;\r\n        this.vsSource = vsSource;\r\n        this.fsSource = fsSource;\r\n        this.uniforms = uniforms;\r\n        this.depthTestDescr = depthDescr || null;\r\n        this.stencilTestDescr = stencilDescr || null;\r\n        this.blendDescr = blendDescr || null;\r\n        this.init();\r\n    }\r\n    /**\r\n     * Reinitialize invalid buffer, eg. after context is lost.\r\n     */\r\n    restore() {\r\n        const { state: { gl }, glProgram } = this;\r\n        if (!gl.isProgram(glProgram)) {\r\n            this.init();\r\n        }\r\n    }\r\n    /**\r\n     * Transforms names found in the attributes object to numbers representing\r\n     * actual attribute locations for the program in this command.\r\n     */\r\n    locate(attributes) {\r\n        const { state: { gl }, glProgram } = this;\r\n        return Object.entries(attributes)\r\n            .reduce((accum, [identifier, definition]) => {\r\n            if (INT_PATTERN.test(identifier)) {\r\n                accum[identifier] = definition;\r\n            }\r\n            else {\r\n                const location = gl.getAttribLocation(glProgram, identifier);\r\n                if (location === UNKNOWN_ATTRIB_LOCATION) {\r\n                    throw new Error(`No location for attrib: ${identifier}`);\r\n                }\r\n                accum[location] = definition;\r\n            }\r\n            return accum;\r\n        }, {});\r\n    }\r\n    init() {\r\n        const { state, state: { gl }, vsSource, fsSource, uniforms, } = this;\r\n        // `init()` would overwrite and unbind the currently bound\r\n        // `Command`'s program, so assert against it.\r\n        // (`gl.useProgram(null)` is called at the end of `init()`).\r\n        assert.isTrue(state.isCommandUnlocked(), \"Expected Command to be unlocked when performing Program init (would overwrite)\");\r\n        const vs = createShader(gl, gl.VERTEX_SHADER, vsSource);\r\n        const fs = createShader(gl, gl.FRAGMENT_SHADER, fsSource);\r\n        const prog = createProgram(gl, vs, fs);\r\n        gl.deleteShader(vs);\r\n        gl.deleteShader(fs);\r\n        // Validation time! (only for nonproduction envs)\r\n        if (IS_DEBUG_BUILD) {\r\n            if (!prog) {\r\n                // ctx loss or not, we can panic all we want in nonprod env!\r\n                throw new Error(\"Program was not compiled, possible reason: context loss\");\r\n            }\r\n            validateUniformDeclarations(gl, prog, uniforms);\r\n        }\r\n        gl.useProgram(prog);\r\n        // Some uniform declarations can be evaluated right away, so do it at\r\n        // init-time. Create a descriptor for the rest that is evaluated at\r\n        // render-time.\r\n        //\r\n        // Texture declarations are evaluated in two phases:\r\n        // 1) Texture location offsets are sent to the shader in init time.\r\n        //    This is ok because even if the textures themselves can change (via\r\n        //    function accessors), their offsets stay the same,\r\n        // 2) Textures provided by the accessor are activated and bound to their\r\n        //    locations at draw time.\r\n        // Note: Object.entries() provides values in a nondeterministic order,\r\n        // but we store the descriptors in an array, remembering the order.\r\n        const uniformDescrs = [];\r\n        const textureDescrs = [];\r\n        Object.entries(uniforms).forEach(([ident, u]) => {\r\n            const loc = gl.getUniformLocation(prog, ident);\r\n            if (!loc) {\r\n                throw new Error(`No location for uniform: ${ident}`);\r\n            }\r\n            // Handle textures first...\r\n            switch (u.type) {\r\n                case UniformType.SAMPLER_2D:\r\n                case UniformType.SAMPLER_CUBE:\r\n                    // The old lenght is the new index to access the texture\r\n                    // under with gl.activeTexture()\r\n                    gl.uniform1i(loc, textureDescrs.length);\r\n                    textureDescrs.push(new TextureDescriptor(ident, u));\r\n                    return;\r\n            }\r\n            // ... and then handle the rest of the uniforms\r\n            if (typeof u.value !== \"function\") {\r\n                // Eagerly send everything we can process now to GPU\r\n                // TODO: there are additional else if guards as ts inference\r\n                // broke in 3.1 or 3.2, but we are sure that\r\n                // typeof u.value !== \"function\"\r\n                switch (u.type) {\r\n                    case UniformType.FLOAT:\r\n                        if (typeof u.value === \"number\") {\r\n                            gl.uniform1f(loc, u.value);\r\n                        }\r\n                        else if (typeof u.value !== \"function\") {\r\n                            gl.uniform1fv(loc, u.value);\r\n                        }\r\n                        break;\r\n                    case UniformType.INT:\r\n                        if (typeof u.value === \"number\") {\r\n                            gl.uniform1i(loc, u.value);\r\n                        }\r\n                        else if (typeof u.value !== \"function\") {\r\n                            gl.uniform1iv(loc, u.value);\r\n                        }\r\n                        break;\r\n                    case UniformType.UNSIGNED_INT:\r\n                        if (typeof u.value === \"number\") {\r\n                            gl.uniform1ui(loc, u.value);\r\n                        }\r\n                        else if (typeof u.value !== \"function\") {\r\n                            gl.uniform1uiv(loc, u.value);\r\n                        }\r\n                        break;\r\n                    case UniformType.FLOAT_VEC2:\r\n                        if (typeof u.value !== \"function\") {\r\n                            gl.uniform2fv(loc, u.value);\r\n                        }\r\n                        break;\r\n                    case UniformType.INT_VEC2:\r\n                        if (typeof u.value !== \"function\") {\r\n                            gl.uniform2iv(loc, u.value);\r\n                        }\r\n                        break;\r\n                    case UniformType.UNSIGNED_INT_VEC2:\r\n                        if (typeof u.value !== \"function\") {\r\n                            gl.uniform2uiv(loc, u.value);\r\n                        }\r\n                        break;\r\n                    case UniformType.FLOAT_VEC3:\r\n                        if (typeof u.value !== \"function\") {\r\n                            gl.uniform3fv(loc, u.value);\r\n                        }\r\n                        break;\r\n                    case UniformType.INT_VEC3:\r\n                        if (typeof u.value !== \"function\") {\r\n                            gl.uniform3iv(loc, u.value);\r\n                        }\r\n                        break;\r\n                    case UniformType.UNSIGNED_INT_VEC3:\r\n                        if (typeof u.value !== \"function\") {\r\n                            gl.uniform3uiv(loc, u.value);\r\n                        }\r\n                        break;\r\n                    case UniformType.FLOAT_VEC4:\r\n                        if (typeof u.value !== \"function\") {\r\n                            gl.uniform4fv(loc, u.value);\r\n                        }\r\n                        break;\r\n                    case UniformType.INT_VEC4:\r\n                        if (typeof u.value !== \"function\") {\r\n                            gl.uniform4iv(loc, u.value);\r\n                        }\r\n                        break;\r\n                    case UniformType.UNSIGNED_INT_VEC4:\r\n                        if (typeof u.value !== \"function\") {\r\n                            gl.uniform4uiv(loc, u.value);\r\n                        }\r\n                        break;\r\n                    case UniformType.FLOAT_MAT2:\r\n                        if (typeof u.value !== \"function\") {\r\n                            gl.uniformMatrix2fv(loc, false, u.value);\r\n                        }\r\n                        break;\r\n                    case UniformType.FLOAT_MAT3:\r\n                        if (typeof u.value !== \"function\") {\r\n                            gl.uniformMatrix3fv(loc, false, u.value);\r\n                        }\r\n                        break;\r\n                    case UniformType.FLOAT_MAT4:\r\n                        if (typeof u.value !== \"function\") {\r\n                            gl.uniformMatrix4fv(loc, false, u.value);\r\n                        }\r\n                        break;\r\n                    default: assert.unreachable(u);\r\n                }\r\n            }\r\n            else {\r\n                // Store a descriptor for lazy values for later use\r\n                uniformDescrs.push(new UniformDescriptor(ident, loc, u));\r\n            }\r\n        });\r\n        gl.useProgram(null);\r\n        this.glProgram = prog;\r\n        this.uniformDescrs = uniformDescrs;\r\n        this.textureDescrs = textureDescrs;\r\n    }\r\n}\r\nexport class UniformDescriptor {\r\n    constructor(identifier, location, definition) {\r\n        this.identifier = identifier;\r\n        this.location = location;\r\n        this.definition = definition;\r\n    }\r\n}\r\nexport class TextureDescriptor {\r\n    constructor(identifier, definition) {\r\n        this.identifier = identifier;\r\n        this.definition = definition;\r\n    }\r\n}\r\nfunction createProgram(gl, vertex, fragment) {\r\n    const program = gl.createProgram();\r\n    if (!program) {\r\n        throw new Error(\"Could not create WebGL program\");\r\n    }\r\n    gl.attachShader(program, vertex);\r\n    gl.attachShader(program, fragment);\r\n    gl.linkProgram(program);\r\n    const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n    if (gl.isContextLost() || linked) {\r\n        return program;\r\n    }\r\n    const msg = gl.getProgramInfoLog(program);\r\n    gl.deleteProgram(program);\r\n    throw new Error(`Could not link shader program: ${msg}`);\r\n}\r\nfunction createShader(gl, type, source) {\r\n    const shader = gl.createShader(type);\r\n    if (!shader) {\r\n        throw new Error(\"Could not create WebGL shader\");\r\n    }\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n    const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    if (gl.isContextLost() || compiled) {\r\n        return shader;\r\n    }\r\n    const msg = gl.getShaderInfoLog(shader);\r\n    gl.deleteShader(shader);\r\n    const prettySource = source\r\n        .split(\"\\n\")\r\n        .map((l, i) => `${i + 1}: ${l}`)\r\n        .join(\"\\n\");\r\n    throw new Error(`Could not compile shader:\\n${msg}\\n${prettySource}`);\r\n}\r\n/**\r\n * Check whether the uniforms declared in shaders and command strictly match.\r\n * There may be no missing or redundant uniforms on either side and types of\r\n * provided uniforms must match exactly\r\n */\r\nfunction validateUniformDeclarations(gl, prog, uniforms) {\r\n    const nUniforms = gl.getProgramParameter(prog, gl.ACTIVE_UNIFORMS);\r\n    const progUniforms = new Map();\r\n    // Note: gl.getUniformLocation accepts a shorthand for uniform names of\r\n    // basic type arrays (trailing \"[0]\" can be omitted). Because\r\n    // gl.getActiveUniforms always gives us the full name, we need to widen\r\n    // our matching to accept the shorthands and pair them with the introspected\r\n    // WebGLActiveInfos\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getUniformLocation\r\n    const shorthands = new Map();\r\n    for (let i = 0; i < nUniforms; ++i) {\r\n        const info = gl.getActiveUniform(prog, i);\r\n        progUniforms.set(info.name, info);\r\n        if (info.name.endsWith(\"[0]\")) {\r\n            const shorthand = info.name.substring(0, info.name.length - 3);\r\n            shorthands.set(shorthand, info.name);\r\n        }\r\n    }\r\n    // The \"list\" of uniforms left to check from the program's perspective\r\n    const toCheck = new Set(progUniforms.keys());\r\n    Object.entries(uniforms).map(([name, tyObj]) => {\r\n        const shorthand = shorthands.has(name) && shorthands.get(name);\r\n        const progUniform = progUniforms.has(name)\r\n            ? progUniforms.get(name)\r\n            : shorthand && progUniforms.has(shorthand)\r\n                ? progUniforms.get(shorthands.get(name))\r\n                : null;\r\n        if (progUniform) {\r\n            // TODO: validate array lengths?\r\n            assert.is(progUniform.type, tyObj.type, fmtTyMismatch(progUniform.name));\r\n        }\r\n        else {\r\n            throw new Error(`Redundant uniform: ${name}`);\r\n        }\r\n        if (shorthand) {\r\n            toCheck.delete(shorthand);\r\n        }\r\n        else {\r\n            toCheck.delete(name);\r\n        }\r\n    });\r\n    if (toCheck.size) {\r\n        const names = [...toCheck].join(\", \");\r\n        throw new Error(`Missing uniforms: ${names}`);\r\n    }\r\n}\r\nfunction parseDepth(depth) {\r\n    if (!depth) {\r\n        return undefined;\r\n    }\r\n    // TODO: DCE did not kick in here without help\r\n    if (IS_DEBUG_BUILD) {\r\n        assert.isNumber(depth.func, fmtParamNonNull(\"depth.func\"));\r\n    }\r\n    return new DepthTestDescriptor(depth.func || DepthFunc.LESS, typeof depth.mask === \"boolean\" ? depth.mask : true, depth.range ? depth.range[0] : 0, depth.range ? depth.range[1] : 1);\r\n}\r\nfunction parseStencil(stencil) {\r\n    if (!stencil) {\r\n        return undefined;\r\n    }\r\n    // TODO: DCE did not kick in here without help\r\n    if (IS_DEBUG_BUILD) {\r\n        assert.isNotNullOrUndefined(stencil.func, fmtParamNonNull(\"stencil.func\"));\r\n    }\r\n    // TODO: complete stencil validation\r\n    return new StencilTestDescriptor(typeof stencil.func.func === \"object\"\r\n        ? stencil.func.func.front\r\n        : stencil.func.func, typeof stencil.func.func === \"object\"\r\n        ? stencil.func.func.back\r\n        : stencil.func.func, typeof stencil.func.ref !== \"undefined\"\r\n        ? typeof stencil.func.ref === \"object\"\r\n            ? stencil.func.ref.front\r\n            : stencil.func.ref\r\n        : 1, typeof stencil.func.ref !== \"undefined\"\r\n        ? typeof stencil.func.ref === \"object\"\r\n            ? stencil.func.ref.back\r\n            : stencil.func.ref\r\n        : 1, typeof stencil.func.mask !== \"undefined\"\r\n        ? typeof stencil.func.mask === \"object\"\r\n            ? stencil.func.mask.front\r\n            : stencil.func.mask\r\n        : 0xFF, typeof stencil.func.mask !== \"undefined\"\r\n        ? typeof stencil.func.mask === \"object\"\r\n            ? stencil.func.mask.back\r\n            : stencil.func.mask\r\n        : 0xFF, typeof stencil.mask !== \"undefined\"\r\n        ? typeof stencil.mask === \"object\"\r\n            ? stencil.mask.front\r\n            : stencil.mask\r\n        : 0xFF, typeof stencil.mask !== \"undefined\"\r\n        ? typeof stencil.mask === \"object\"\r\n            ? stencil.mask.back\r\n            : stencil.mask\r\n        : 0xFF, stencil.op\r\n        ? typeof stencil.op.fail === \"object\"\r\n            ? stencil.op.fail.front\r\n            : stencil.op.fail\r\n        : StencilOp.KEEP, stencil.op\r\n        ? typeof stencil.op.fail === \"object\"\r\n            ? stencil.op.fail.back\r\n            : stencil.op.fail\r\n        : StencilOp.KEEP, stencil.op\r\n        ? typeof stencil.op.zfail === \"object\"\r\n            ? stencil.op.zfail.front\r\n            : stencil.op.zfail\r\n        : StencilOp.KEEP, stencil.op\r\n        ? typeof stencil.op.zfail === \"object\"\r\n            ? stencil.op.zfail.back\r\n            : stencil.op.zfail\r\n        : StencilOp.KEEP, stencil.op\r\n        ? typeof stencil.op.zpass === \"object\"\r\n            ? stencil.op.zpass.front\r\n            : stencil.op.zpass\r\n        : StencilOp.KEEP, stencil.op\r\n        ? typeof stencil.op.zpass === \"object\"\r\n            ? stencil.op.zpass.back\r\n            : stencil.op.zpass\r\n        : StencilOp.KEEP);\r\n}\r\nfunction parseBlend(blend) {\r\n    if (!blend) {\r\n        return undefined;\r\n    }\r\n    // TODO: DCE did not kick in here without help\r\n    if (IS_DEBUG_BUILD) {\r\n        assert.isNotNullOrUndefined(blend.func, fmtParamNonNull(\"blend.func\"));\r\n        assert.isNotNullOrUndefined(blend.func.src, fmtParamNonNull(\"blend.func.src\"));\r\n        assert.isNotNullOrUndefined(blend.func.dst, fmtParamNonNull(\"blend.func.dst\"));\r\n        if (typeof blend.func.src === \"object\") {\r\n            assert.isNotNullOrUndefined(blend.func.src.rgb, fmtParamNonNull(\"blend.func.src.rgb\"));\r\n            assert.isNotNullOrUndefined(blend.func.src.alpha, fmtParamNonNull(\"blend.func.src.alpha\"));\r\n        }\r\n        if (typeof blend.func.dst === \"object\") {\r\n            assert.isNotNullOrUndefined(blend.func.dst.rgb, fmtParamNonNull(\"blend.func.dst.rgb\"));\r\n            assert.isNotNullOrUndefined(blend.func.dst.alpha, fmtParamNonNull(\"blend.func.dst.alpha\"));\r\n        }\r\n    }\r\n    return new BlendDescriptor(typeof blend.func.src === \"object\"\r\n        ? blend.func.src.rgb\r\n        : blend.func.src, typeof blend.func.src === \"object\"\r\n        ? blend.func.src.alpha\r\n        : blend.func.src, typeof blend.func.dst === \"object\"\r\n        ? blend.func.dst.rgb\r\n        : blend.func.dst, typeof blend.func.dst === \"object\"\r\n        ? blend.func.dst.alpha\r\n        : blend.func.dst, blend.equation\r\n        ? typeof blend.equation === \"object\"\r\n            ? blend.equation.rgb\r\n            : blend.equation\r\n        : BlendEquation.FUNC_ADD, blend.equation\r\n        ? typeof blend.equation === \"object\"\r\n            ? blend.equation.alpha\r\n            : blend.equation\r\n        : BlendEquation.FUNC_ADD, blend.color);\r\n}\r\nfunction fmtParamNonNull(name) {\r\n    return () => `Missing parameter ${name}`;\r\n}\r\nfunction fmtTyMismatch(name) {\r\n    return () => `Type mismatch for uniform field ${name}`;\r\n}\r\n//# sourceMappingURL=command.js.map","import * as assert from \"./util/assert\";\r\nimport { UniformType, } from \"./command\";\r\nexport var TargetBufferBitmask;\r\n(function (TargetBufferBitmask) {\r\n    TargetBufferBitmask[TargetBufferBitmask[\"COLOR\"] = 16384] = \"COLOR\";\r\n    TargetBufferBitmask[TargetBufferBitmask[\"DEPTH\"] = 256] = \"DEPTH\";\r\n    TargetBufferBitmask[TargetBufferBitmask[\"STENCIL\"] = 1024] = \"STENCIL\";\r\n    TargetBufferBitmask[TargetBufferBitmask[\"COLOR_DEPTH\"] = 16640] = \"COLOR_DEPTH\";\r\n    TargetBufferBitmask[TargetBufferBitmask[\"COLOR_STENCIL\"] = 17408] = \"COLOR_STENCIL\";\r\n    TargetBufferBitmask[TargetBufferBitmask[\"DEPTH_STENCIL\"] = 1280] = \"DEPTH_STENCIL\";\r\n    TargetBufferBitmask[TargetBufferBitmask[\"COLOR_DEPTH_STENCIL\"] = 17664] = \"COLOR_DEPTH_STENCIL\";\r\n})(TargetBufferBitmask || (TargetBufferBitmask = {}));\r\nexport var TargetBlitFilter;\r\n(function (TargetBlitFilter) {\r\n    TargetBlitFilter[TargetBlitFilter[\"NEAREST\"] = 9728] = \"NEAREST\";\r\n    TargetBlitFilter[TargetBlitFilter[\"LINEAR\"] = 9729] = \"LINEAR\";\r\n})(TargetBlitFilter || (TargetBlitFilter = {}));\r\n/**\r\n * Target represents a drawable surface. Get hold of targets with\r\n * `device.target()` or `framebuffer.target()`.\r\n */\r\nexport class Target {\r\n    constructor(state, glDrawBuffers, glFramebuffer, surfaceWidth, surfaceHeight) {\r\n        this.state = state;\r\n        this.glDrawBuffers = glDrawBuffers;\r\n        this.glFramebuffer = glFramebuffer;\r\n        this.surfaceWidth = surfaceWidth;\r\n        this.surfaceHeight = surfaceHeight;\r\n    }\r\n    /**\r\n     * Run the callback with the target bound. This is called automatically,\r\n     * when obtaining a target via `device.target()` or `framebuffer.target()`.\r\n     *\r\n     * All writes/drawing to the target MUST be done within the callback.\r\n     */\r\n    with(cb) {\r\n        const { state, glFramebuffer, glDrawBuffers, } = this;\r\n        // We would overwrite the currently bound DRAW_FRAMEBUFFER unless we\r\n        // checked\r\n        state.lockTarget(this, glFramebuffer, glDrawBuffers);\r\n        cb(this);\r\n        state.unlockTarget();\r\n    }\r\n    /**\r\n     * Clear selected buffers to provided values.\r\n     */\r\n    clear(bits, { r = 0, g = 0, b = 0, a = 1, depth = 1, stencil = 0, scissorX = 0, scissorY = 0, scissorWidth = this.surfaceWidth === void 0\r\n        ? this.state.gl.drawingBufferWidth\r\n        : this.surfaceWidth, scissorHeight = this.surfaceHeight === void 0\r\n        ? this.state.gl.drawingBufferHeight\r\n        : this.surfaceHeight, } = {}) {\r\n        const { state, state: { gl } } = this;\r\n        assert.isTrue(state.isTargetLocked(this), \"Expected Target to be locked when performing clear\");\r\n        gl.scissor(scissorX, scissorY, scissorWidth, scissorHeight);\r\n        if (bits & TargetBufferBitmask.COLOR) {\r\n            gl.clearColor(r, g, b, a);\r\n        }\r\n        if (bits & TargetBufferBitmask.DEPTH) {\r\n            gl.clearDepth(depth);\r\n        }\r\n        if (bits & TargetBufferBitmask.STENCIL) {\r\n            gl.clearStencil(stencil);\r\n        }\r\n        gl.clear(bits);\r\n    }\r\n    /**\r\n     * Blit source framebuffer onto this render target. Use buffer bits to\r\n     * choose buffers to blit.\r\n     */\r\n    blit(source, bits, { srcX = 0, srcY = 0, srcWidth = source.width, srcHeight = source.height, dstX = 0, dstY = 0, dstWidth = this.surfaceWidth === void 0\r\n        ? this.state.gl.drawingBufferWidth\r\n        : this.surfaceWidth, dstHeight = this.surfaceHeight === void 0\r\n        ? this.state.gl.drawingBufferHeight\r\n        : this.surfaceHeight, filter = TargetBlitFilter.NEAREST, scissorX = dstX, scissorY = dstY, scissorWidth = dstWidth, scissorHeight = dstHeight, } = {}) {\r\n        const { state, state: { gl } } = this;\r\n        assert.isTrue(state.isTargetLocked(this), \"Expected Target to be locked when performing blit\");\r\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, source.glFramebuffer);\r\n        gl.scissor(scissorX, scissorY, scissorWidth, scissorHeight);\r\n        gl.blitFramebuffer(srcX, srcY, srcWidth, srcHeight, dstX, dstY, dstWidth, dstHeight, bits, filter);\r\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\r\n    }\r\n    /**\r\n     * Draw to this target with a command, attributes, and command properties.\r\n     * The properties are passed to the command's uniform or texture callbacks,\r\n     * if used.\r\n     *\r\n     * This is a unified header to stisfy the typechecker.\r\n     */\r\n    draw(cmd, attrs, props, { viewportX = 0, viewportY = 0, viewportWidth = this.surfaceWidth === void 0\r\n        ? this.state.gl.drawingBufferWidth\r\n        : this.surfaceWidth, viewportHeight = this.surfaceHeight === void 0\r\n        ? this.state.gl.drawingBufferHeight\r\n        : this.surfaceHeight, scissorX = viewportX, scissorY = viewportY, scissorWidth = viewportWidth, scissorHeight = viewportHeight, } = {}) {\r\n        const { state, state: { gl } } = this;\r\n        const { glProgram, depthTestDescr, stencilTestDescr, blendDescr, textureDescrs, uniformDescrs, } = cmd;\r\n        assert.isTrue(state.isTargetLocked(this), \"Expected Target to be locked when performing draw\");\r\n        state.lockCommand(cmd, glProgram);\r\n        state.setDepthTest(depthTestDescr);\r\n        state.setStencilTest(stencilTestDescr);\r\n        state.setBlend(blendDescr);\r\n        this.textures(textureDescrs, props, 0);\r\n        this.uniforms(uniformDescrs, props, 0);\r\n        // TODO: figure out if we can optimize this away\r\n        gl.bindVertexArray(attrs.glVertexArray);\r\n        gl.viewport(viewportX, viewportY, viewportWidth, viewportHeight);\r\n        gl.scissor(scissorX, scissorY, scissorWidth, scissorHeight);\r\n        if (attrs.indexed) {\r\n            this.drawElements(attrs.primitive, attrs.elementCount, attrs.indexType, 0, // offset\r\n            attrs.instanceCount);\r\n        }\r\n        else {\r\n            this.drawArrays(attrs.primitive, attrs.count, 0, // offset\r\n            attrs.instanceCount);\r\n        }\r\n        // TODO: figure out if we can optimize this away\r\n        gl.bindVertexArray(null);\r\n        state.unlockCommand();\r\n    }\r\n    /**\r\n     * Perform multiple draws to this target with the same command, but multiple\r\n     * attributes and command properties. The properties are passed to the\r\n     * command's uniform or texture callbacks, if used.\r\n     *\r\n     * All drawing should be performed within the callback to prevent\r\n     * unnecesasry rebinding.\r\n     */\r\n    batch(cmd, cb, { viewportX = 0, viewportY = 0, viewportWidth = this.surfaceWidth === void 0\r\n        ? this.state.gl.drawingBufferWidth\r\n        : this.surfaceWidth, viewportHeight = this.surfaceHeight === void 0\r\n        ? this.state.gl.drawingBufferHeight\r\n        : this.surfaceHeight, scissorX = viewportX, scissorY = viewportY, scissorWidth = viewportWidth, scissorHeight = viewportHeight, } = {}) {\r\n        const { state, state: { gl } } = this;\r\n        const { glProgram, depthTestDescr, stencilTestDescr, blendDescr, uniformDescrs, textureDescrs, } = cmd;\r\n        // The price for gl.useProgram, enabling depth/stencil tests and\r\n        // blending is paid only once for all draw calls in batch\r\n        assert.isTrue(state.isTargetLocked(this), \"Expected Target to be locked when performing batch draw (pre check)\");\r\n        state.lockCommand(cmd, glProgram);\r\n        state.setDepthTest(depthTestDescr);\r\n        state.setStencilTest(stencilTestDescr);\r\n        state.setBlend(blendDescr);\r\n        let i = 0;\r\n        cb((attrs, props) => {\r\n            // Did the user do anything sneaky?\r\n            assert.isTrue(state.isTargetLocked(this), \"Expected Target to be locked when performing batch draw (inner loop)\");\r\n            assert.isTrue(state.isCommandLocked(cmd), \"Expected Command to be locked when performing batch draw (inner loop)\");\r\n            i++;\r\n            this.uniforms(uniformDescrs, props, i);\r\n            this.textures(textureDescrs, props, i);\r\n            // TODO: figure out if we can optimize this away\r\n            gl.bindVertexArray(attrs.glVertexArray);\r\n            gl.viewport(viewportX, viewportY, viewportWidth, viewportHeight);\r\n            gl.scissor(scissorX, scissorY, scissorWidth, scissorHeight);\r\n            if (attrs.indexed) {\r\n                this.drawElements(attrs.primitive, attrs.elementCount, attrs.indexType, 0, // offset\r\n                attrs.instanceCount);\r\n            }\r\n            else {\r\n                this.drawArrays(attrs.primitive, attrs.count, 0, // offset\r\n                attrs.instanceCount);\r\n            }\r\n            // TODO: figure out if we can optimize this away\r\n            gl.bindVertexArray(null);\r\n        });\r\n        state.unlockCommand();\r\n    }\r\n    drawArrays(primitive, count, offset, instanceCount) {\r\n        if (instanceCount) {\r\n            this.state.gl.drawArraysInstanced(primitive, offset, count, instanceCount);\r\n        }\r\n        else {\r\n            this.state.gl.drawArrays(primitive, offset, count);\r\n        }\r\n    }\r\n    drawElements(primitive, count, type, offset, instCount) {\r\n        if (instCount) {\r\n            this.state.gl.drawElementsInstanced(primitive, count, type, offset, instCount);\r\n        }\r\n        else {\r\n            this.state.gl.drawElements(primitive, count, type, offset);\r\n        }\r\n    }\r\n    uniforms(uniformDescrs, props, index) {\r\n        const gl = this.state.gl;\r\n        uniformDescrs.forEach(({ identifier: ident, location: loc, definition: def, }) => {\r\n            switch (def.type) {\r\n                case UniformType.FLOAT: {\r\n                    const value = def.value(props, index);\r\n                    if (typeof value === \"number\") {\r\n                        gl.uniform1f(loc, value);\r\n                    }\r\n                    else {\r\n                        gl.uniform1fv(loc, value);\r\n                    }\r\n                    break;\r\n                }\r\n                case UniformType.INT: {\r\n                    const value = def.value(props, index);\r\n                    if (typeof value === \"number\") {\r\n                        gl.uniform1i(loc, value);\r\n                    }\r\n                    else {\r\n                        gl.uniform1iv(loc, value);\r\n                    }\r\n                    break;\r\n                }\r\n                case UniformType.UNSIGNED_INT: {\r\n                    const value = def.value(props, index);\r\n                    if (typeof value === \"number\") {\r\n                        gl.uniform1ui(loc, value);\r\n                    }\r\n                    else {\r\n                        gl.uniform1uiv(loc, value);\r\n                    }\r\n                    break;\r\n                }\r\n                case UniformType.FLOAT_VEC2:\r\n                    gl.uniform2fv(loc, def.value(props, index));\r\n                    break;\r\n                case UniformType.INT_VEC2:\r\n                    gl.uniform2iv(loc, def.value(props, index));\r\n                    break;\r\n                case UniformType.UNSIGNED_INT_VEC2:\r\n                    gl.uniform2uiv(loc, def.value(props, index));\r\n                    break;\r\n                case UniformType.FLOAT_VEC3:\r\n                    gl.uniform3fv(loc, def.value(props, index));\r\n                    break;\r\n                case UniformType.INT_VEC3:\r\n                    gl.uniform3iv(loc, def.value(props, index));\r\n                    break;\r\n                case UniformType.UNSIGNED_INT_VEC3:\r\n                    gl.uniform3uiv(loc, def.value(props, index));\r\n                    break;\r\n                case UniformType.FLOAT_VEC4:\r\n                    gl.uniform4fv(loc, def.value(props, index));\r\n                    break;\r\n                case UniformType.INT_VEC4:\r\n                    gl.uniform4iv(loc, def.value(props, index));\r\n                    break;\r\n                case UniformType.UNSIGNED_INT_VEC4:\r\n                    gl.uniform4uiv(loc, def.value(props, index));\r\n                    break;\r\n                case UniformType.FLOAT_MAT2:\r\n                    gl.uniformMatrix2fv(loc, false, def.value(props, index));\r\n                    break;\r\n                case UniformType.FLOAT_MAT3:\r\n                    gl.uniformMatrix3fv(loc, false, def.value(props, index));\r\n                    break;\r\n                case UniformType.FLOAT_MAT4:\r\n                    gl.uniformMatrix4fv(loc, false, def.value(props, index));\r\n                    break;\r\n                default:\r\n                    assert.unreachable(def, () => `Unknown uniform: ${ident}`);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    textures(textureDescrs, props, index) {\r\n        const gl = this.state.gl;\r\n        textureDescrs.forEach(({ identifier, definition }, i) => {\r\n            const tex = typeof definition.value === \"function\"\r\n                ? definition.value(props, index)\r\n                : definition.value;\r\n            gl.activeTexture(gl.TEXTURE0 + i);\r\n            switch (definition.type) {\r\n                case UniformType.SAMPLER_2D:\r\n                    gl.bindTexture(gl.TEXTURE_2D, tex.glTexture);\r\n                    break;\r\n                case UniformType.SAMPLER_CUBE:\r\n                    gl.bindTexture(gl.TEXTURE_CUBE_MAP, tex.glTexture);\r\n                    break;\r\n                default:\r\n                    assert.unreachable(definition, () => `Unknown texture uniform: ${identifier}`);\r\n                    break;\r\n            }\r\n        });\r\n        gl.activeTexture(gl.TEXTURE0);\r\n    }\r\n}\r\n//# sourceMappingURL=target.js.map","import * as assert from \"./util/assert\";\r\nimport { BufferUsage } from \"./types\";\r\nexport var VertexBufferIntegerDataType;\r\n(function (VertexBufferIntegerDataType) {\r\n    VertexBufferIntegerDataType[VertexBufferIntegerDataType[\"BYTE\"] = 5120] = \"BYTE\";\r\n    VertexBufferIntegerDataType[VertexBufferIntegerDataType[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\r\n    VertexBufferIntegerDataType[VertexBufferIntegerDataType[\"SHORT\"] = 5122] = \"SHORT\";\r\n    VertexBufferIntegerDataType[VertexBufferIntegerDataType[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\r\n    VertexBufferIntegerDataType[VertexBufferIntegerDataType[\"INT\"] = 5124] = \"INT\";\r\n    VertexBufferIntegerDataType[VertexBufferIntegerDataType[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\r\n})(VertexBufferIntegerDataType || (VertexBufferIntegerDataType = {}));\r\nexport var VertexBufferFloatDataType;\r\n(function (VertexBufferFloatDataType) {\r\n    VertexBufferFloatDataType[VertexBufferFloatDataType[\"FLOAT\"] = 5126] = \"FLOAT\";\r\n})(VertexBufferFloatDataType || (VertexBufferFloatDataType = {}));\r\nexport function _createVertexBuffer(gl, type, size, { usage = BufferUsage.DYNAMIC_DRAW } = {}) {\r\n    return new VertexBuffer(gl, type, size, size * sizeOf(type), usage);\r\n}\r\nexport function _createVertexBufferWithTypedArray(gl, type, data, { usage = BufferUsage.STATIC_DRAW } = {}) {\r\n    return new VertexBuffer(gl, type, data.length, data.byteLength, usage).store(data);\r\n}\r\n/**\r\n * Vertex buffers contain GPU accessible data. Accessing them is usually done\r\n * via setting up an attribute that reads the buffer.\r\n */\r\nexport class VertexBuffer {\r\n    constructor(gl, type, length, byteLength, usage) {\r\n        this.gl = gl;\r\n        this.type = type;\r\n        this.length = length;\r\n        this.byteLength = byteLength;\r\n        this.usage = usage;\r\n        this.glBuffer = null;\r\n        this.init();\r\n    }\r\n    /**\r\n     * Reinitialize invalid buffer, eg. after context is lost.\r\n     */\r\n    restore() {\r\n        const { gl, glBuffer } = this;\r\n        if (!gl.isBuffer(glBuffer)) {\r\n            this.init();\r\n        }\r\n    }\r\n    /**\r\n     * Upload new data to buffer. Does not take ownership of data.\r\n     */\r\n    store(data, { offset = 0 } = {}) {\r\n        const { gl, glBuffer } = this;\r\n        // WebGL bug causes Uint8ClampedArray to be read incorrectly\r\n        // https://github.com/KhronosGroup/WebGL/issues/1533\r\n        const buffer = data instanceof Uint8ClampedArray\r\n            // Both buffers are u8 -> do not copy, just change lens\r\n            ? new Uint8Array(data.buffer)\r\n            // Other buffer types are fine\r\n            : data;\r\n        const byteOffset = buffer.BYTES_PER_ELEMENT * offset;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, glBuffer);\r\n        gl.bufferSubData(gl.ARRAY_BUFFER, byteOffset, buffer);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n        return this;\r\n    }\r\n    init() {\r\n        const { usage, byteLength, gl } = this;\r\n        const buffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, byteLength, usage);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n        this.glBuffer = buffer;\r\n    }\r\n}\r\nexport function sizeOf(type) {\r\n    switch (type) {\r\n        case VertexBufferIntegerDataType.BYTE:\r\n        case VertexBufferIntegerDataType.UNSIGNED_BYTE:\r\n            return 1;\r\n        case VertexBufferIntegerDataType.SHORT:\r\n        case VertexBufferIntegerDataType.UNSIGNED_SHORT:\r\n            return 2;\r\n        case VertexBufferIntegerDataType.INT:\r\n        case VertexBufferIntegerDataType.UNSIGNED_INT:\r\n        case VertexBufferFloatDataType.FLOAT:\r\n            return 4;\r\n        default: return assert.unreachable(type);\r\n    }\r\n}\r\n//# sourceMappingURL=vertex-buffer.js.map","import * as assert from \"./assert\";\r\nimport { IS_DEBUG_BUILD } from \"./env\";\r\n/**\r\n * Checks whether array has at least two dimensions.\r\n * Asserts array is not jagged. Only checks first two dimensions.\r\n * Returns false if array is degenerate (either dimension is 0), as 0d array\r\n * is not 2d array.\r\n */\r\nexport function is2(array) {\r\n    if (!array.length) {\r\n        return false;\r\n    }\r\n    const length2 = Array.isArray(array[0]) ? array[0].length : -1;\r\n    if (IS_DEBUG_BUILD) {\r\n        array.forEach((sub) => {\r\n            if (length2 !== -1) {\r\n                if (assert.isArray(sub)) {\r\n                    assert.is(sub.length, length2);\r\n                }\r\n            }\r\n            else {\r\n                assert.is(Array.isArray(sub), false);\r\n            }\r\n        });\r\n    }\r\n    // if length2 === 0, array is degenerate\r\n    // if length2 === -1, array is 1d\r\n    return length2 > 0;\r\n}\r\n/**\r\n * Returns first two dimensions of array. Assumes nonjagged array and does no\r\n * checks to prove so. Accepts degenerate arrays.\r\n */\r\nexport function shape2(array) {\r\n    const outer = array.length;\r\n    const inner = outer ? array[0].length : 0;\r\n    return [outer, inner];\r\n}\r\n/**\r\n * Take an unraveled 2d array and a shape. Returns new flat array with all\r\n * elements from the original unraveled array. Assumes unraveled array is not\r\n * jagged and shape matches the unraveled dimensions and makes no checks to\r\n * prove so. Accepts degenerate arrays if shape matches them.\r\n */\r\nexport function ravel2(unraveled, shape) {\r\n    const [outer, inner] = shape;\r\n    const raveled = new Array(inner * outer);\r\n    unraveled.forEach((arr, i) => {\r\n        arr.forEach((elem, j) => {\r\n            raveled[inner * i + j] = elem;\r\n        });\r\n    });\r\n    return raveled;\r\n}\r\n//# sourceMappingURL=array.js.map","import * as assert from \"./util/assert\";\r\nimport * as array from \"./util/array\";\r\nimport { BufferUsage } from \"./types\";\r\nexport var ElementPrimitive;\r\n(function (ElementPrimitive) {\r\n    ElementPrimitive[ElementPrimitive[\"POINT_LIST\"] = 0] = \"POINT_LIST\";\r\n    ElementPrimitive[ElementPrimitive[\"LINE_LIST\"] = 1] = \"LINE_LIST\";\r\n    ElementPrimitive[ElementPrimitive[\"LINE_LOOP\"] = 2] = \"LINE_LOOP\";\r\n    ElementPrimitive[ElementPrimitive[\"LINE_STRIP\"] = 3] = \"LINE_STRIP\";\r\n    ElementPrimitive[ElementPrimitive[\"TRIANGLE_LIST\"] = 4] = \"TRIANGLE_LIST\";\r\n    ElementPrimitive[ElementPrimitive[\"TRIANGLE_STRIP\"] = 5] = \"TRIANGLE_STRIP\";\r\n    ElementPrimitive[ElementPrimitive[\"TRIANGLE_FAN\"] = 6] = \"TRIANGLE_FAN\";\r\n})(ElementPrimitive || (ElementPrimitive = {}));\r\nexport var ElementBufferDataType;\r\n(function (ElementBufferDataType) {\r\n    ElementBufferDataType[ElementBufferDataType[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\r\n    ElementBufferDataType[ElementBufferDataType[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\r\n    ElementBufferDataType[ElementBufferDataType[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\r\n})(ElementBufferDataType || (ElementBufferDataType = {}));\r\nexport function _createElementBuffer(gl, type, primitive, size, { usage = BufferUsage.DYNAMIC_DRAW } = {}) {\r\n    return new ElementBuffer(gl, type, primitive, size, size * sizeOf(type), usage);\r\n}\r\nexport function _createElementBufferWithArray(gl, data, options) {\r\n    if (array.is2(data)) {\r\n        const shape = array.shape2(data);\r\n        assert.isInRangeInclusive(shape[1], 2, 3, (p) => {\r\n            return `Elements must be 2-tuples or 3-tuples, got ${p}-tuple`;\r\n        });\r\n        const ravel = array.ravel2(data, shape);\r\n        const primitive = shape[1] === 3\r\n            ? ElementPrimitive.TRIANGLE_LIST\r\n            : ElementPrimitive.LINE_LIST;\r\n        return _createElementBufferWithTypedArray(gl, ElementBufferDataType.UNSIGNED_INT, primitive, new Uint32Array(ravel), options);\r\n    }\r\n    return _createElementBufferWithTypedArray(gl, ElementBufferDataType.UNSIGNED_INT, ElementPrimitive.POINT_LIST, new Uint32Array(data), options);\r\n}\r\nexport function _createElementBufferWithTypedArray(gl, type, primitive, data, { usage = BufferUsage.STATIC_DRAW } = {}) {\r\n    return new ElementBuffer(gl, type, primitive, data.length, data.length * sizeOf(type), usage).store(data);\r\n}\r\n/**\r\n * Element buffers contain indices for accessing vertex buffer data.\r\n */\r\nexport class ElementBuffer {\r\n    constructor(gl, type, primitive, length, byteLength, usage) {\r\n        this.gl = gl;\r\n        this.type = type;\r\n        this.primitive = primitive;\r\n        this.length = length;\r\n        this.byteLength = byteLength;\r\n        this.usage = usage;\r\n        this.glBuffer = null;\r\n        this.init();\r\n    }\r\n    /**\r\n     * Reinitialize invalid buffer, eg. after context is lost.\r\n     */\r\n    restore() {\r\n        const { gl, glBuffer } = this;\r\n        if (!gl.isBuffer(glBuffer)) {\r\n            this.init();\r\n        }\r\n    }\r\n    /**\r\n     * Upload new data to buffer. Does not take ownership of data.\r\n     */\r\n    store(data, { offset = 0 } = {}) {\r\n        const { gl, glBuffer } = this;\r\n        // WebGL bug causes Uint8ClampedArray to be read incorrectly\r\n        // https://github.com/KhronosGroup/WebGL/issues/1533\r\n        const buffer = data instanceof Uint8ClampedArray\r\n            // Both buffers are u8 -> do not copy, just change lens\r\n            ? new Uint8Array(data.buffer)\r\n            // Other buffer types are fine\r\n            : data;\r\n        const byteOffset = buffer.BYTES_PER_ELEMENT * offset;\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, glBuffer);\r\n        gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, byteOffset, buffer);\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n        return this;\r\n    }\r\n    init() {\r\n        const { usage, byteLength, gl } = this;\r\n        const buffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, byteLength, usage);\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n        this.glBuffer = buffer;\r\n    }\r\n}\r\nexport function sizeOf(type) {\r\n    switch (type) {\r\n        case ElementBufferDataType.UNSIGNED_BYTE:\r\n            return 1;\r\n        case ElementBufferDataType.UNSIGNED_SHORT:\r\n            return 2;\r\n        case ElementBufferDataType.UNSIGNED_INT:\r\n            return 4;\r\n        default: return assert.unreachable(type);\r\n    }\r\n}\r\n//# sourceMappingURL=element-buffer.js.map","import * as assert from \"./util/assert\";\r\nimport * as array from \"./util/array\";\r\nimport { VertexBufferFloatDataType, _createVertexBufferWithTypedArray, } from \"./vertex-buffer\";\r\nimport { ElementBuffer, _createElementBufferWithArray, } from \"./element-buffer\";\r\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\r\n/**\r\n * Attribute type for reading vertex buffers. POINTER provides normalization\r\n * options for converting integer values to floats. IPOINTER always retains\r\n * integers types.\r\n */\r\nexport var AttributeType;\r\n(function (AttributeType) {\r\n    AttributeType[\"POINTER\"] = \"pointer\";\r\n    AttributeType[\"IPOINTER\"] = \"ipointer\";\r\n})(AttributeType || (AttributeType = {}));\r\nexport function _createAttributes(state, elements, attributes, { countLimit } = {}) {\r\n    if (typeof countLimit === \"number\") {\r\n        assert.isGreater(countLimit, 0, (p) => {\r\n            return `Count limit must be greater than 0, got: ${p}`;\r\n        });\r\n    }\r\n    const attrs = Object.entries(attributes)\r\n        .map(([locationStr, definition]) => {\r\n        if (!INT_PATTERN.test(locationStr)) {\r\n            throw new Error(\"Location not a number. Use Command#locate\");\r\n        }\r\n        const location = parseInt(locationStr, 10);\r\n        if (Array.isArray(definition)) {\r\n            if (array.is2(definition)) {\r\n                const s = array.shape2(definition);\r\n                const r = array.ravel2(definition, s);\r\n                return new AttributeDescriptor(location, AttributeType.POINTER, _createVertexBufferWithTypedArray(state.gl, VertexBufferFloatDataType.FLOAT, new Float32Array(r)), s[0], s[1], false, 0);\r\n            }\r\n            return new AttributeDescriptor(location, AttributeType.POINTER, _createVertexBufferWithTypedArray(state.gl, VertexBufferFloatDataType.FLOAT, new Float32Array(definition)), definition.length, 1, false, 0);\r\n        }\r\n        return new AttributeDescriptor(location, definition.type, definition.buffer, definition.count, definition.size, definition.type === AttributeType.POINTER\r\n            ? (definition.normalized || false)\r\n            : false, definition.divisor || 0);\r\n    });\r\n    let primitive;\r\n    let elementBuffer;\r\n    if (typeof elements === \"number\") {\r\n        primitive = elements;\r\n    }\r\n    else {\r\n        elementBuffer = elements instanceof ElementBuffer\r\n            ? elements\r\n            : _createElementBufferWithArray(state.gl, elements);\r\n        primitive = elementBuffer.primitive;\r\n    }\r\n    const inferredCount = elementBuffer\r\n        ? elementBuffer.length\r\n        : attrs.length\r\n            ? attrs\r\n                .map((attr) => attr.count)\r\n                .reduce((min, curr) => Math.min(min, curr))\r\n            : 0;\r\n    const count = typeof countLimit === \"number\"\r\n        ? Math.min(countLimit, inferredCount)\r\n        : inferredCount;\r\n    const instAttrs = attrs.filter((attr) => !!attr.divisor);\r\n    const instanceCount = instAttrs.length\r\n        ? instAttrs\r\n            .map((attr) => attr.count * attr.divisor)\r\n            .reduce((min, curr) => Math.min(min, curr))\r\n        : 0;\r\n    return new Attributes(state, primitive, attrs, count, instanceCount, elementBuffer);\r\n}\r\n/**\r\n * Attributes store vertex buffers, an element buffer, and attributes with the\r\n * vertex format for provided vertex buffers.\r\n */\r\nexport class Attributes {\r\n    constructor(state, primitive, attributes, count, instanceCount, elements) {\r\n        this.state = state;\r\n        this.primitive = primitive;\r\n        this.elementBuffer = elements;\r\n        this.attributes = attributes;\r\n        this.count = count;\r\n        this.elementCount = elements ? elements.length : 0;\r\n        this.instanceCount = instanceCount;\r\n        this.glVertexArray = null;\r\n        this.init();\r\n    }\r\n    get indexed() {\r\n        return !!this.elementBuffer;\r\n    }\r\n    get indexType() {\r\n        return this.elementBuffer && this.elementBuffer.type;\r\n    }\r\n    /**\r\n     * Reinitialize invalid vertex array, eg. after context is lost. Also tries\r\n     * to reinitialize vertex buffer and element buffer dependencies.\r\n     */\r\n    restore() {\r\n        const { state: { gl }, glVertexArray, attributes, elementBuffer } = this;\r\n        if (elementBuffer) {\r\n            elementBuffer.restore();\r\n        }\r\n        attributes.forEach((attr) => attr.buffer.restore());\r\n        // If we have no attributes nor elements, there is no need to restore\r\n        // any GPU state\r\n        if (this.hasAttribs() && !gl.isVertexArray(glVertexArray)) {\r\n            this.init();\r\n        }\r\n    }\r\n    init() {\r\n        // Do not create the gl vao if there are no buffers to bind\r\n        if (!this.hasAttribs()) {\r\n            return;\r\n        }\r\n        const { state: { gl }, attributes, elementBuffer } = this;\r\n        const vao = gl.createVertexArray();\r\n        gl.bindVertexArray(vao);\r\n        attributes.forEach(({ location, type, buffer: { glBuffer, type: glBufferType }, size, normalized = false, divisor, }) => {\r\n            // Enable sending attribute arrays for location\r\n            gl.enableVertexAttribArray(location);\r\n            // Send buffer\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, glBuffer);\r\n            switch (type) {\r\n                case AttributeType.POINTER:\r\n                    gl.vertexAttribPointer(location, size, glBufferType, normalized, 0, 0);\r\n                    break;\r\n                case AttributeType.IPOINTER:\r\n                    gl.vertexAttribIPointer(location, size, glBufferType, 0, 0);\r\n                    break;\r\n                default: assert.unreachable(type);\r\n            }\r\n            if (divisor) {\r\n                gl.vertexAttribDivisor(location, divisor);\r\n            }\r\n        });\r\n        if (elementBuffer) {\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer.glBuffer);\r\n        }\r\n        gl.bindVertexArray(null);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n        if (elementBuffer) {\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n        }\r\n        this.glVertexArray = vao;\r\n    }\r\n    hasAttribs() {\r\n        // IF we have either attributes or elements, this geometry can not\r\n        // longer be considered empty.\r\n        return !!this.elementBuffer || !!this.attributes.length;\r\n    }\r\n}\r\nclass AttributeDescriptor {\r\n    constructor(location, type, buffer, count, size, normalized, divisor) {\r\n        this.location = location;\r\n        this.type = type;\r\n        this.buffer = buffer;\r\n        this.count = count;\r\n        this.size = size;\r\n        this.normalized = normalized;\r\n        this.divisor = divisor;\r\n    }\r\n}\r\n//# sourceMappingURL=attributes.js.map","import * as assert from \"./util/assert\";\r\nexport var TextureColorStorageFormat;\r\n(function (TextureColorStorageFormat) {\r\n    // R\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"R8\"] = 33321] = \"R8\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"R8_SNORM\"] = 36756] = \"R8_SNORM\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"R8UI\"] = 33330] = \"R8UI\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"R8I\"] = 33329] = \"R8I\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"R16UI\"] = 33332] = \"R16UI\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"R16I\"] = 33331] = \"R16I\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"R16F\"] = 33325] = \"R16F\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"R32UI\"] = 33334] = \"R32UI\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"R32I\"] = 33333] = \"R32I\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"R32F\"] = 33326] = \"R32F\";\r\n    // RG\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RG8\"] = 33323] = \"RG8\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RG8_SNORM\"] = 36757] = \"RG8_SNORM\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RG8UI\"] = 33336] = \"RG8UI\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RG8I\"] = 33335] = \"RG8I\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RG16UI\"] = 33338] = \"RG16UI\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RG16I\"] = 33337] = \"RG16I\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RG16F\"] = 33327] = \"RG16F\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RG32UI\"] = 33340] = \"RG32UI\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RG32I\"] = 33339] = \"RG32I\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RG32F\"] = 33328] = \"RG32F\";\r\n    // RGB\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGB8\"] = 32849] = \"RGB8\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGB8_SNORM\"] = 36758] = \"RGB8_SNORM\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGB8UI\"] = 36221] = \"RGB8UI\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGB8I\"] = 36239] = \"RGB8I\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGB16UI\"] = 36215] = \"RGB16UI\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGB16I\"] = 36233] = \"RGB16I\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGB16F\"] = 34843] = \"RGB16F\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGB32UI\"] = 36209] = \"RGB32UI\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGB32I\"] = 36227] = \"RGB32I\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGB32F\"] = 34837] = \"RGB32F\";\r\n    // RGBA\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGBA8\"] = 32856] = \"RGBA8\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGBA8_SNORM\"] = 36759] = \"RGBA8_SNORM\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGBA8UI\"] = 36220] = \"RGBA8UI\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGBA8I\"] = 36238] = \"RGBA8I\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGBA16UI\"] = 36214] = \"RGBA16UI\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGBA16I\"] = 36232] = \"RGBA16I\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGBA16F\"] = 34842] = \"RGBA16F\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGBA32UI\"] = 36208] = \"RGBA32UI\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGBA32I\"] = 36226] = \"RGBA32I\";\r\n    TextureColorStorageFormat[TextureColorStorageFormat[\"RGBA32F\"] = 34836] = \"RGBA32F\";\r\n    // TODO: support exotic formats\r\n    // ~LUMINANCE ALPHA\r\n    // LUMINANCE_ALPHA\r\n    // LUMINANCE\r\n    // ALPHA\r\n})(TextureColorStorageFormat || (TextureColorStorageFormat = {}));\r\nexport var TextureDepthStorageFormat;\r\n(function (TextureDepthStorageFormat) {\r\n    TextureDepthStorageFormat[TextureDepthStorageFormat[\"DEPTH_COMPONENT16\"] = 33189] = \"DEPTH_COMPONENT16\";\r\n    TextureDepthStorageFormat[TextureDepthStorageFormat[\"DEPTH_COMPONENT24\"] = 33190] = \"DEPTH_COMPONENT24\";\r\n    TextureDepthStorageFormat[TextureDepthStorageFormat[\"DEPTH_COMPONENT32F\"] = 36012] = \"DEPTH_COMPONENT32F\";\r\n})(TextureDepthStorageFormat || (TextureDepthStorageFormat = {}));\r\nexport var TextureDepthStencilStorageFormat;\r\n(function (TextureDepthStencilStorageFormat) {\r\n    TextureDepthStencilStorageFormat[TextureDepthStencilStorageFormat[\"DEPTH24_STENCIL8\"] = 35056] = \"DEPTH24_STENCIL8\";\r\n    TextureDepthStencilStorageFormat[TextureDepthStencilStorageFormat[\"DEPTH32F_STENCIL8\"] = 36013] = \"DEPTH32F_STENCIL8\";\r\n})(TextureDepthStencilStorageFormat || (TextureDepthStencilStorageFormat = {}));\r\nexport var TextureFormat;\r\n(function (TextureFormat) {\r\n    TextureFormat[TextureFormat[\"RED\"] = 6403] = \"RED\";\r\n    TextureFormat[TextureFormat[\"RG\"] = 33319] = \"RG\";\r\n    TextureFormat[TextureFormat[\"RGB\"] = 6407] = \"RGB\";\r\n    TextureFormat[TextureFormat[\"RGBA\"] = 6408] = \"RGBA\";\r\n    TextureFormat[TextureFormat[\"RED_INTEGER\"] = 36244] = \"RED_INTEGER\";\r\n    TextureFormat[TextureFormat[\"RG_INTEGER\"] = 33320] = \"RG_INTEGER\";\r\n    TextureFormat[TextureFormat[\"RGB_INTEGER\"] = 36248] = \"RGB_INTEGER\";\r\n    TextureFormat[TextureFormat[\"RGBA_INTEGER\"] = 36249] = \"RGBA_INTEGER\";\r\n    // TODO: support exotic formats\r\n    TextureFormat[TextureFormat[\"DEPTH_COMPONENT\"] = 6402] = \"DEPTH_COMPONENT\";\r\n    TextureFormat[TextureFormat[\"DEPTH_STENCIL\"] = 34041] = \"DEPTH_STENCIL\";\r\n    // LUMINANCE_ALPHA\r\n    // LUMINANCE\r\n    // ALPHA\r\n})(TextureFormat || (TextureFormat = {}));\r\nexport var TextureDataType;\r\n(function (TextureDataType) {\r\n    TextureDataType[TextureDataType[\"BYTE\"] = 5120] = \"BYTE\";\r\n    TextureDataType[TextureDataType[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\r\n    TextureDataType[TextureDataType[\"SHORT\"] = 5122] = \"SHORT\";\r\n    TextureDataType[TextureDataType[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\r\n    TextureDataType[TextureDataType[\"HALF_FLOAT\"] = 5131] = \"HALF_FLOAT\";\r\n    TextureDataType[TextureDataType[\"INT\"] = 5124] = \"INT\";\r\n    TextureDataType[TextureDataType[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\r\n    TextureDataType[TextureDataType[\"FLOAT\"] = 5126] = \"FLOAT\";\r\n    // TODO: support exotic formats\r\n    // UNSIGNED_SHORT_4_4_4_4\r\n    // UNSIGNED_SHORT_5_5_5_1\r\n    // UNSIGNED_SHORT_5_6_5\r\n    TextureDataType[TextureDataType[\"UNSIGNED_INT_24_8\"] = 34042] = \"UNSIGNED_INT_24_8\";\r\n    // UNSIGNED_INT_5_9_9_9_REV\r\n    // UNSIGNED_INT_2_10_10_10_REV\r\n    // UNSIGNED_INT_10F_11F_11F_REV\r\n    TextureDataType[TextureDataType[\"FLOAT_32_UNSIGNED_INT_24_8_REV\"] = 36269] = \"FLOAT_32_UNSIGNED_INT_24_8_REV\";\r\n})(TextureDataType || (TextureDataType = {}));\r\nexport var TextureWrap;\r\n(function (TextureWrap) {\r\n    TextureWrap[TextureWrap[\"CLAMP_TO_EDGE\"] = 33071] = \"CLAMP_TO_EDGE\";\r\n    TextureWrap[TextureWrap[\"REPEAT\"] = 10497] = \"REPEAT\";\r\n    TextureWrap[TextureWrap[\"MIRRORED_REPEAT\"] = 33648] = \"MIRRORED_REPEAT\";\r\n})(TextureWrap || (TextureWrap = {}));\r\nexport var TextureMinFilter;\r\n(function (TextureMinFilter) {\r\n    TextureMinFilter[TextureMinFilter[\"NEAREST\"] = 9728] = \"NEAREST\";\r\n    TextureMinFilter[TextureMinFilter[\"LINEAR\"] = 9729] = \"LINEAR\";\r\n    TextureMinFilter[TextureMinFilter[\"NEAREST_MIPMAP_NEAREST\"] = 9984] = \"NEAREST_MIPMAP_NEAREST\";\r\n    TextureMinFilter[TextureMinFilter[\"LINEAR_MIPMAP_NEAREST\"] = 9985] = \"LINEAR_MIPMAP_NEAREST\";\r\n    TextureMinFilter[TextureMinFilter[\"NEAREST_MIPMAP_LINEAR\"] = 9986] = \"NEAREST_MIPMAP_LINEAR\";\r\n    TextureMinFilter[TextureMinFilter[\"LINEAR_MIPMAP_LINEAR\"] = 9987] = \"LINEAR_MIPMAP_LINEAR\";\r\n})(TextureMinFilter || (TextureMinFilter = {}));\r\nexport var TextureMagFilter;\r\n(function (TextureMagFilter) {\r\n    TextureMagFilter[TextureMagFilter[\"NEAREST\"] = 9728] = \"NEAREST\";\r\n    TextureMagFilter[TextureMagFilter[\"LINEAR\"] = 9729] = \"LINEAR\";\r\n})(TextureMagFilter || (TextureMagFilter = {}));\r\nexport function _createTexture2D(gl, width, height, storageFormat, { min = TextureMinFilter.NEAREST, mag = TextureMagFilter.NEAREST, wrapS = TextureWrap.CLAMP_TO_EDGE, wrapT = TextureWrap.CLAMP_TO_EDGE, } = {}) {\r\n    return new Texture2D(gl, width, height, storageFormat, wrapS, wrapT, min, mag);\r\n}\r\nexport function _createTexture2DWithTypedArray(gl, width, height, storageFormat, data, dataFormat, dataType, options = {}) {\r\n    const { min = TextureMinFilter.NEAREST, mag = TextureMagFilter.NEAREST, wrapS = TextureWrap.CLAMP_TO_EDGE, wrapT = TextureWrap.CLAMP_TO_EDGE, } = options;\r\n    return new Texture2D(gl, width, height, storageFormat, wrapS, wrapT, min, mag).store(data, dataFormat, dataType, options);\r\n}\r\nexport function _createTextureCubeMap(gl, width, height, storageFormat, { min = TextureMinFilter.NEAREST, mag = TextureMagFilter.NEAREST, wrapS = TextureWrap.CLAMP_TO_EDGE, wrapT = TextureWrap.CLAMP_TO_EDGE, wrapR = TextureWrap.CLAMP_TO_EDGE, } = {}) {\r\n    return new TextureCubeMap(gl, width, height, storageFormat, wrapS, wrapT, wrapR, min, mag);\r\n}\r\nexport function _createTextureCubeMapWithTypedArray(gl, width, height, storageFormat, dataPositiveX, dataNegativeX, dataPositiveY, dataNegativeY, dataPositiveZ, dataNegativeZ, dataFormat, dataType, options = {}) {\r\n    const { min = TextureMinFilter.NEAREST, mag = TextureMagFilter.NEAREST, wrapS = TextureWrap.CLAMP_TO_EDGE, wrapT = TextureWrap.CLAMP_TO_EDGE, wrapR = TextureWrap.CLAMP_TO_EDGE, } = options;\r\n    return new TextureCubeMap(gl, width, height, storageFormat, wrapS, wrapT, wrapR, min, mag).store(dataPositiveX, dataNegativeX, dataPositiveY, dataNegativeY, dataPositiveZ, dataNegativeZ, dataFormat, dataType, options);\r\n}\r\n/**\r\n * Textures are images of 2D data, where each texel can contain multiple\r\n * information channels of a certain type. Data can be stored to textures either\r\n * from the CPU, via the `Texture2D.store()`, or they can be rendered to as\r\n * `Framebuffer` attachments. Data from textures can read in shaders via\r\n * sampling.\r\n */\r\nexport class Texture2D {\r\n    constructor(gl, width, height, storageFormat, wrapS, wrapT, minFilter, magFilter) {\r\n        this.gl = gl;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.storageFormat = storageFormat;\r\n        this.wrapS = wrapS;\r\n        this.wrapT = wrapT;\r\n        this.minFilter = minFilter;\r\n        this.magFilter = magFilter;\r\n        this.glTexture = null;\r\n        this.init();\r\n    }\r\n    /**\r\n     * Reinitialize invalid texture, eg. after context is lost.\r\n     */\r\n    restore() {\r\n        const { gl, glTexture } = this;\r\n        if (!gl.isTexture(glTexture)) {\r\n            this.init();\r\n        }\r\n    }\r\n    /**\r\n     * Upload new data to texture. Does not take ownership of data.\r\n     */\r\n    store(data, format, type, { xOffset = 0, yOffset = 0, width = this.width, height = this.height, mipmap = false, } = {}) {\r\n        const { gl, glTexture } = this;\r\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, rowAlignment(this.storageFormat));\r\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, // level\r\n        xOffset, yOffset, width, height, format, type, \r\n        // WebGL bug causes Uint8ClampedArray to be read incorrectly\r\n        // https://github.com/KhronosGroup/WebGL/issues/1533\r\n        data instanceof Uint8ClampedArray\r\n            // Both buffers are u8 -> do not copy, just change lens\r\n            ? new Uint8Array(data.buffer)\r\n            // Other buffer types are fine\r\n            : data);\r\n        if (mipmap) {\r\n            gl.generateMipmap(gl.TEXTURE_2D);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        return this;\r\n    }\r\n    /**\r\n     * Generate mipmap levels for the current data.\r\n     */\r\n    mipmap() {\r\n        const { gl, glTexture } = this;\r\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n        gl.generateMipmap(gl.TEXTURE_2D);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n    }\r\n    init() {\r\n        const { gl, width, height, storageFormat, wrapS, wrapT, minFilter, magFilter, } = this;\r\n        const texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texStorage2D(gl.TEXTURE_2D, 1, storageFormat, width, height);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        this.glTexture = texture;\r\n    }\r\n}\r\n/**\r\n * Cubemaps consist of 6 different textures conceptually layed out as faces of a\r\n * cube around origin [0, 0, 0]. Each of the 6 textures in a cubemap has the\r\n * same dimensions and storage format.\r\n * In shaders, cubemaps can be sampled using a vec3 interpreted as a direction\r\n * from origin. This makes cubemaps ideal to implement skyboxes and environment\r\n * mapping.\r\n */\r\nexport class TextureCubeMap {\r\n    constructor(gl, width, height, storageFormat, wrapS, wrapT, wrapR, minFilter, magFilter) {\r\n        this.gl = gl;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.storageFormat = storageFormat;\r\n        this.wrapS = wrapS;\r\n        this.wrapT = wrapT;\r\n        this.wrapR = wrapR;\r\n        this.minFilter = minFilter;\r\n        this.magFilter = magFilter;\r\n        this.glTexture = null;\r\n        this.init();\r\n    }\r\n    /**\r\n     * Reinitialize invalid cubemap, eg. after context is lost.\r\n     */\r\n    restore() {\r\n        const { gl, glTexture } = this;\r\n        if (!gl.isTexture(glTexture)) {\r\n            this.init();\r\n        }\r\n    }\r\n    /**\r\n     * Upload new data to cubemap. Does not take ownership of data.\r\n     * The 6 typed arrays must be of the same length.\r\n     */\r\n    store(dataPositiveX, dataNegativeX, dataPositiveY, dataNegativeY, dataPositiveZ, dataNegativeZ, format, type, { xOffset = 0, yOffset = 0, width = this.width, height = this.height, mipmap = false, } = {}) {\r\n        assert.is(dataNegativeX.length, dataPositiveX.length);\r\n        assert.is(dataPositiveY.length, dataPositiveX.length);\r\n        assert.is(dataNegativeY.length, dataPositiveX.length);\r\n        assert.is(dataPositiveZ.length, dataPositiveX.length);\r\n        assert.is(dataNegativeZ.length, dataPositiveX.length);\r\n        const { gl, glTexture } = this;\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, glTexture);\r\n        this.storeFace(gl.TEXTURE_CUBE_MAP_POSITIVE_X, dataPositiveX, format, type, xOffset, yOffset, width, height);\r\n        this.storeFace(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, dataNegativeX, format, type, xOffset, yOffset, width, height);\r\n        this.storeFace(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, dataPositiveY, format, type, xOffset, yOffset, width, height);\r\n        this.storeFace(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, dataNegativeY, format, type, xOffset, yOffset, width, height);\r\n        this.storeFace(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, dataPositiveZ, format, type, xOffset, yOffset, width, height);\r\n        this.storeFace(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, dataNegativeZ, format, type, xOffset, yOffset, width, height);\r\n        if (mipmap) {\r\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP_POSITIVE_X);\r\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP_NEGATIVE_X);\r\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP_POSITIVE_Y);\r\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y);\r\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP_POSITIVE_Z);\r\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\r\n        return this;\r\n    }\r\n    /**\r\n     * Upload new data to cubemap's positive X face.\r\n     * Does not take ownership of data.\r\n     */\r\n    storePositiveX(data, format, type, { xOffset = 0, yOffset = 0, width = this.width, height = this.height, mipmap = false, } = {}) {\r\n        const { gl, glTexture } = this;\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, glTexture);\r\n        this.storeFace(gl.TEXTURE_CUBE_MAP_POSITIVE_X, data, format, type, xOffset, yOffset, width, height);\r\n        if (mipmap) {\r\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP_POSITIVE_X);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\r\n        return this;\r\n    }\r\n    /**\r\n     * Upload new data to cubemap's negative X face.\r\n     * Does not take ownership of data.\r\n     */\r\n    storeNegativeX(data, format, type, { xOffset = 0, yOffset = 0, width = this.width, height = this.height, mipmap = false, } = {}) {\r\n        const { gl, glTexture } = this;\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, glTexture);\r\n        this.storeFace(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, data, format, type, xOffset, yOffset, width, height);\r\n        if (mipmap) {\r\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP_NEGATIVE_X);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\r\n        return this;\r\n    }\r\n    /**\r\n     * Upload new data to cubemap's positive Y face.\r\n     * Does not take ownership of data.\r\n     */\r\n    storePositiveY(data, format, type, { xOffset = 0, yOffset = 0, width = this.width, height = this.height, mipmap = false, } = {}) {\r\n        const { gl, glTexture } = this;\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, glTexture);\r\n        this.storeFace(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, data, format, type, xOffset, yOffset, width, height);\r\n        if (mipmap) {\r\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP_POSITIVE_Y);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\r\n        return this;\r\n    }\r\n    /**\r\n     * Upload new data to cubemap's negative Y face.\r\n     * Does not take ownership of data.\r\n     */\r\n    storeNegativeY(data, format, type, { xOffset = 0, yOffset = 0, width = this.width, height = this.height, mipmap = false, } = {}) {\r\n        const { gl, glTexture } = this;\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, glTexture);\r\n        this.storeFace(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, data, format, type, xOffset, yOffset, width, height);\r\n        if (mipmap) {\r\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\r\n        return this;\r\n    }\r\n    /**\r\n     * Upload new data to cubemap's positive Z face.\r\n     * Does not take ownership of data.\r\n     */\r\n    storePositiveZ(data, format, type, { xOffset = 0, yOffset = 0, width = this.width, height = this.height, mipmap = false, } = {}) {\r\n        const { gl, glTexture } = this;\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, glTexture);\r\n        this.storeFace(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, data, format, type, xOffset, yOffset, width, height);\r\n        if (mipmap) {\r\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP_POSITIVE_Z);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\r\n        return this;\r\n    }\r\n    /**\r\n     * Upload new data to cubemap's negative Z face.\r\n     * Does not take ownership of data.\r\n     */\r\n    storeNegativeZ(data, format, type, { xOffset = 0, yOffset = 0, width = this.width, height = this.height, mipmap = false, } = {}) {\r\n        const { gl, glTexture } = this;\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, glTexture);\r\n        this.storeFace(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, data, format, type, xOffset, yOffset, width, height);\r\n        if (mipmap) {\r\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z);\r\n        }\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\r\n        return this;\r\n    }\r\n    /**\r\n     * Generate mipmap levels for the current data.\r\n     */\r\n    mipmap() {\r\n        const { gl, glTexture } = this;\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, glTexture);\r\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP_POSITIVE_X);\r\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP_NEGATIVE_X);\r\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP_POSITIVE_Y);\r\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y);\r\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP_POSITIVE_Z);\r\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z);\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\r\n        return this;\r\n    }\r\n    init() {\r\n        const { gl, width, height, storageFormat, wrapS, wrapT, wrapR, minFilter, magFilter, } = this;\r\n        const texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\r\n        gl.texStorage2D(gl.TEXTURE_CUBE_MAP, 1, // levels\r\n        storageFormat, width, height);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, wrapS);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, wrapT);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_R, wrapR);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, minFilter);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, magFilter);\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\r\n        this.glTexture = texture;\r\n    }\r\n    storeFace(target, data, format, type, xOffset, yOffset, width, height) {\r\n        const gl = this.gl;\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, rowAlignment(this.storageFormat));\r\n        gl.texSubImage2D(target, 0, // level\r\n        xOffset, yOffset, width, height, format, type, \r\n        // WebGL bug causes Uint8ClampedArray to be read incorrectly\r\n        // https://github.com/KhronosGroup/WebGL/issues/1533\r\n        data instanceof Uint8ClampedArray\r\n            // Both buffers are u8 -> do not copy, just change lens\r\n            ? new Uint8Array(data.buffer)\r\n            // Other buffer types are fine\r\n            : data);\r\n    }\r\n}\r\n/**\r\n * OpenGL supports row alignments of 1, 2, 4, or 8. Each storage format consists\r\n * of a data type and number of channels, e.g. RGB16F has data type size of 2\r\n * byte and 3 channels.\r\n * This function finds the greatest possible safe alignment to fit the product\r\n * of the storage format's data type size and number of channels, e.g. for\r\n * RGB16F (2 bytes * 3 channels), the greatest safe row alignment is 2.\r\n */\r\nfunction rowAlignment(storageFormat) {\r\n    switch (storageFormat) {\r\n        // RED\r\n        case TextureColorStorageFormat.R8:\r\n        case TextureColorStorageFormat.R8_SNORM:\r\n        case TextureColorStorageFormat.R8UI:\r\n        case TextureColorStorageFormat.R8I:\r\n            return 1;\r\n        case TextureColorStorageFormat.R16UI:\r\n        case TextureColorStorageFormat.R16I:\r\n        case TextureColorStorageFormat.R16F:\r\n            return 2;\r\n        case TextureColorStorageFormat.R32UI:\r\n        case TextureColorStorageFormat.R32I:\r\n        case TextureColorStorageFormat.R32F:\r\n            return 4;\r\n        // RG\r\n        case TextureColorStorageFormat.RG8:\r\n        case TextureColorStorageFormat.RG8_SNORM:\r\n        case TextureColorStorageFormat.RG8UI:\r\n        case TextureColorStorageFormat.RG8I:\r\n            return 2;\r\n        case TextureColorStorageFormat.RG16UI:\r\n        case TextureColorStorageFormat.RG16I:\r\n        case TextureColorStorageFormat.RG16F:\r\n            return 4;\r\n        case TextureColorStorageFormat.RG32UI:\r\n        case TextureColorStorageFormat.RG32I:\r\n        case TextureColorStorageFormat.RG32F:\r\n            return 8;\r\n        // RGB\r\n        case TextureColorStorageFormat.RGB8:\r\n        case TextureColorStorageFormat.RGB8_SNORM:\r\n        case TextureColorStorageFormat.RGB8UI:\r\n        case TextureColorStorageFormat.RGB8I:\r\n            return 1;\r\n        case TextureColorStorageFormat.RGB16UI:\r\n        case TextureColorStorageFormat.RGB16I:\r\n        case TextureColorStorageFormat.RGB16F:\r\n            return 2;\r\n        case TextureColorStorageFormat.RGB32UI:\r\n        case TextureColorStorageFormat.RGB32I:\r\n        case TextureColorStorageFormat.RGB32F:\r\n            return 4;\r\n        // RGBA\r\n        case TextureColorStorageFormat.RGBA8:\r\n        case TextureColorStorageFormat.RGBA8_SNORM:\r\n        case TextureColorStorageFormat.RGBA8UI:\r\n        case TextureColorStorageFormat.RGBA8I:\r\n            return 4;\r\n        case TextureColorStorageFormat.RGBA16UI:\r\n        case TextureColorStorageFormat.RGBA16I:\r\n        case TextureColorStorageFormat.RGBA16F:\r\n            return 8;\r\n        case TextureColorStorageFormat.RGBA32UI:\r\n        case TextureColorStorageFormat.RGBA32I:\r\n        case TextureColorStorageFormat.RGBA32F:\r\n            return 8;\r\n        // DEPTH\r\n        case TextureDepthStorageFormat.DEPTH_COMPONENT16:\r\n            return 2;\r\n        case TextureDepthStorageFormat.DEPTH_COMPONENT24:\r\n            return 1;\r\n        case TextureDepthStorageFormat.DEPTH_COMPONENT32F:\r\n            return 4;\r\n        // DEPTH STEPNCIL\r\n        case TextureDepthStencilStorageFormat.DEPTH24_STENCIL8:\r\n            return 4;\r\n        case TextureDepthStencilStorageFormat.DEPTH32F_STENCIL8:\r\n            // TODO: how is DEPTH32F_STENCUL8 represented in memory?\r\n            return 1;\r\n        default:\r\n            return assert.unreachable(storageFormat);\r\n    }\r\n}\r\n//# sourceMappingURL=texture.js.map","export var RenderbufferColorStorageFormat;\r\n(function (RenderbufferColorStorageFormat) {\r\n    // R\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"R8\"] = 33321] = \"R8\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"R8_SNORM\"] = 36756] = \"R8_SNORM\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"R8UI\"] = 33330] = \"R8UI\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"R8I\"] = 33329] = \"R8I\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"R16UI\"] = 33332] = \"R16UI\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"R16I\"] = 33331] = \"R16I\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"R16F\"] = 33325] = \"R16F\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"R32UI\"] = 33334] = \"R32UI\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"R32I\"] = 33333] = \"R32I\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"R32F\"] = 33326] = \"R32F\";\r\n    // RG\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RG8\"] = 33323] = \"RG8\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RG8_SNORM\"] = 36757] = \"RG8_SNORM\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RG8UI\"] = 33336] = \"RG8UI\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RG8I\"] = 33335] = \"RG8I\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RG16UI\"] = 33338] = \"RG16UI\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RG16I\"] = 33337] = \"RG16I\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RG16F\"] = 33327] = \"RG16F\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RG32UI\"] = 33340] = \"RG32UI\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RG32I\"] = 33339] = \"RG32I\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RG32F\"] = 33328] = \"RG32F\";\r\n    // RGBA\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RGBA8\"] = 32856] = \"RGBA8\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RGBA8_SNORM\"] = 36759] = \"RGBA8_SNORM\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RGBA8UI\"] = 36220] = \"RGBA8UI\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RGBA8I\"] = 36238] = \"RGBA8I\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RGBA16UI\"] = 36214] = \"RGBA16UI\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RGBA16I\"] = 36232] = \"RGBA16I\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RGBA16F\"] = 34842] = \"RGBA16F\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RGBA32UI\"] = 36208] = \"RGBA32UI\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RGBA32I\"] = 36226] = \"RGBA32I\";\r\n    RenderbufferColorStorageFormat[RenderbufferColorStorageFormat[\"RGBA32F\"] = 34836] = \"RGBA32F\";\r\n})(RenderbufferColorStorageFormat || (RenderbufferColorStorageFormat = {}));\r\nexport var RenderbufferDepthStorageFormat;\r\n(function (RenderbufferDepthStorageFormat) {\r\n    RenderbufferDepthStorageFormat[RenderbufferDepthStorageFormat[\"DEPTH_COMPONENT16\"] = 33189] = \"DEPTH_COMPONENT16\";\r\n    RenderbufferDepthStorageFormat[RenderbufferDepthStorageFormat[\"DEPTH_COMPONENT24\"] = 33190] = \"DEPTH_COMPONENT24\";\r\n    RenderbufferDepthStorageFormat[RenderbufferDepthStorageFormat[\"DEPTH_COMPONENT32F\"] = 36012] = \"DEPTH_COMPONENT32F\";\r\n})(RenderbufferDepthStorageFormat || (RenderbufferDepthStorageFormat = {}));\r\nexport var RenderbufferDepthStencilStorageFormat;\r\n(function (RenderbufferDepthStencilStorageFormat) {\r\n    RenderbufferDepthStencilStorageFormat[RenderbufferDepthStencilStorageFormat[\"DEPTH24_STENCIL8\"] = 35056] = \"DEPTH24_STENCIL8\";\r\n    RenderbufferDepthStencilStorageFormat[RenderbufferDepthStencilStorageFormat[\"DEPTH32F_STENCIL8\"] = 36013] = \"DEPTH32F_STENCIL8\";\r\n})(RenderbufferDepthStencilStorageFormat || (RenderbufferDepthStencilStorageFormat = {}));\r\nexport function _createRenderbuffer(gl, width, height, storageFormat, { samples = 0 } = {}) {\r\n    return new Renderbuffer(gl, width, height, storageFormat, samples);\r\n}\r\n/**\r\n * Renderbuffers are images of 2D data, similar to `Texture2D`. In contrast to\r\n * `Texture2D`, `Renderbuffer`s can only be written to on the GPU via rendering,\r\n * and they can not be sampled in shaders. `Framebuffer`s containing\r\n * `Renderbuffer` attachments can still be blit to other framebuffers.\r\n *\r\n * These limitations and the fact that their storage format is always optimized\r\n * for rendering should result in a performance improvement when rendering to\r\n * `Renderbuffer` attachments instead of `Texture2D`.\r\n *\r\n * One other difference compared to `Texture2D` is that `Renderbuffer`s can be\r\n * multisampled. If you need to combine multisampling with post processing, you\r\n * can first render the scene into a multisampled `Renderbuffer` attachment, and\r\n * afterwards blit it to a `Framebuffer` containing `Texture2D` attachments.\r\n */\r\nexport class Renderbuffer {\r\n    constructor(gl, width, height, storageFormat, samples) {\r\n        this.gl = gl;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.storageFormat = storageFormat;\r\n        this.samples = samples;\r\n        this.glRenderbuffer = null;\r\n        this.init();\r\n    }\r\n    restore() {\r\n        const { gl, glRenderbuffer } = this;\r\n        if (!gl.isRenderbuffer(glRenderbuffer)) {\r\n            this.init();\r\n        }\r\n    }\r\n    init() {\r\n        const { gl, width, height, storageFormat, samples } = this;\r\n        const renderbuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\r\n        if (samples) {\r\n            gl.renderbufferStorageMultisample(gl.RENDERBUFFER, samples, storageFormat, width, height);\r\n        }\r\n        else {\r\n            gl.renderbufferStorage(gl.RENDERBUFFER, storageFormat, width, height);\r\n        }\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n        this.glRenderbuffer = renderbuffer;\r\n    }\r\n}\r\n//# sourceMappingURL=renderbuffer.js.map","import * as assert from \"./util/assert\";\r\nimport { IS_DEBUG_BUILD } from \"./util/env\";\r\nimport { Target } from \"./target\";\r\nimport { TextureDepthStorageFormat, TextureDepthStencilStorageFormat, } from \"./texture\";\r\nimport { Renderbuffer, RenderbufferDepthStorageFormat, RenderbufferDepthStencilStorageFormat, } from \"./renderbuffer\";\r\nexport function _createFramebuffer(state, width, height, color, depthStencil) {\r\n    const colors = (Array.isArray(color) ? color : [color]);\r\n    if (IS_DEBUG_BUILD) {\r\n        assert.isNotEmpty(colors, () => {\r\n            return \"Framebuffer color attachments must not be empty\";\r\n        });\r\n        for (const buffer of colors) {\r\n            assert.is(width, buffer.width, (got, expected) => {\r\n                return `Expected attachment width ${expected}, got ${got}`;\r\n            });\r\n            assert.is(height, buffer.height, (got, expected) => {\r\n                return `Expected attachment height ${expected}, got ${got}`;\r\n            });\r\n        }\r\n        if (depthStencil) {\r\n            assert.is(width, depthStencil.width, (got, expected) => {\r\n                return `Expected attachment width ${expected}, got ${got}`;\r\n            });\r\n            assert.is(height, depthStencil.height, (got, expected) => {\r\n                return `Expected attachment height ${expected}, got ${got}`;\r\n            });\r\n        }\r\n    }\r\n    return new Framebuffer(state, width, height, colors, depthStencil);\r\n}\r\n// TODO: _createFramebufferWithCubeMapFace\r\n/**\r\n * Framebuffers store the list of attachments to write to during a draw\r\n * operation. They can be a draw target via `framebuffer.target()`\r\n */\r\nexport class Framebuffer {\r\n    constructor(state, width, height, colors, depthStencil) {\r\n        this.state = state;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.colors = colors;\r\n        this.depthStencil = depthStencil;\r\n        this.glColorAttachments = new Array(colors.length);\r\n        for (let i = 0; i < colors.length; ++i) {\r\n            this.glColorAttachments[i] = state.gl.COLOR_ATTACHMENT0 + i;\r\n        }\r\n        this.glFramebuffer = null;\r\n        this.framebufferTarget = null;\r\n        this.init();\r\n    }\r\n    /**\r\n     * Reinitialize invalid framebuffer, eg. after context is lost.\r\n     */\r\n    restore() {\r\n        const { state: { gl }, glFramebuffer, colors, depthStencil, } = this;\r\n        for (const buffer of colors) {\r\n            buffer.restore();\r\n        }\r\n        if (depthStencil) {\r\n            depthStencil.restore();\r\n        }\r\n        if (!gl.isFramebuffer(glFramebuffer)) {\r\n            this.init();\r\n        }\r\n    }\r\n    /**\r\n     * Request a render target from this framebuffer to draw into. The target\r\n     * will contain all attached color buffers.\r\n     *\r\n     * Drawing should be done within the callback by\r\n     * calling `ratget.clear()` or `target.draw()` family of methods.\r\n     *\r\n     * Also see `device.target()`.\r\n     */\r\n    target(cb) {\r\n        if (this.framebufferTarget) {\r\n            this.framebufferTarget.with(cb);\r\n        }\r\n    }\r\n    init() {\r\n        const { width, height, state, state: { gl }, glColorAttachments, colors, depthStencil, } = this;\r\n        // `init()` would overwrite and unbind the currently bound\r\n        // `Target`'s FBO, so assert against it.\r\n        // (`gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null)` is called\r\n        // at the end of `init()`).\r\n        assert.isTrue(state.isTargetUnlocked(), \"Expected Target to be unlocked when performing Framebuffer init (would overwrite)\");\r\n        const fbo = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, fbo);\r\n        for (let i = 0; i < colors.length; ++i) {\r\n            const buffer = colors[i];\r\n            if (buffer instanceof Renderbuffer) {\r\n                gl.framebufferRenderbuffer(gl.DRAW_FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.RENDERBUFFER, buffer.glRenderbuffer);\r\n            }\r\n            else {\r\n                gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, buffer.glTexture, 0);\r\n            }\r\n        }\r\n        if (depthStencil) {\r\n            if (depthStencil instanceof Renderbuffer) {\r\n                switch (depthStencil.storageFormat) {\r\n                    case RenderbufferDepthStencilStorageFormat.DEPTH24_STENCIL8:\r\n                    case RenderbufferDepthStencilStorageFormat.DEPTH32F_STENCIL8:\r\n                        gl.framebufferRenderbuffer(gl.DRAW_FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, depthStencil.glRenderbuffer);\r\n                        break;\r\n                    case RenderbufferDepthStorageFormat.DEPTH_COMPONENT16:\r\n                    case RenderbufferDepthStorageFormat.DEPTH_COMPONENT24:\r\n                    case RenderbufferDepthStorageFormat.DEPTH_COMPONENT32F:\r\n                        gl.framebufferRenderbuffer(gl.DRAW_FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthStencil.glRenderbuffer);\r\n                        break;\r\n                    default: assert.unreachable(depthStencil, (p) => {\r\n                        return `Unsupported framebuffer renderbuffer attachment: ${p}`;\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                switch (depthStencil.storageFormat) {\r\n                    case TextureDepthStencilStorageFormat.DEPTH24_STENCIL8:\r\n                    case TextureDepthStencilStorageFormat.DEPTH32F_STENCIL8:\r\n                        gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.TEXTURE_2D, depthStencil.glTexture, 0);\r\n                        break;\r\n                    case TextureDepthStorageFormat.DEPTH_COMPONENT16:\r\n                    case TextureDepthStorageFormat.DEPTH_COMPONENT24:\r\n                    case TextureDepthStorageFormat.DEPTH_COMPONENT32F:\r\n                        gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthStencil.glTexture, 0);\r\n                        break;\r\n                    default: assert.unreachable(depthStencil, (p) => {\r\n                        return `Unsupported framebuffer texture attachment: ${p}`;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        const status = gl.checkFramebufferStatus(gl.DRAW_FRAMEBUFFER);\r\n        gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\r\n        if (status !== gl.FRAMEBUFFER_COMPLETE) {\r\n            gl.deleteFramebuffer(fbo);\r\n            switch (status) {\r\n                case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\r\n                    throw new Error(\"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\");\r\n                case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\r\n                    throw new Error(\"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\");\r\n                case gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:\r\n                    throw new Error(\"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE\");\r\n                case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\r\n                    throw new Error(\"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\");\r\n                case gl.FRAMEBUFFER_UNSUPPORTED:\r\n                    throw new Error(\"FRAMEBUFFER_UNSUPPORTED\");\r\n                default: throw new Error(\"Framebuffer incomplete\");\r\n            }\r\n        }\r\n        this.glFramebuffer = fbo;\r\n        if (fbo) {\r\n            this.framebufferTarget = new Target(state, glColorAttachments, fbo, width, height);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=framebuffer.js.map","import * as assert from \"./util/assert\";\r\nimport { State } from \"./state\";\r\nimport { Target } from \"./target\";\r\nimport { _createCommand, } from \"./command\";\r\nimport { _createVertexBuffer, _createVertexBufferWithTypedArray, } from \"./vertex-buffer\";\r\nimport { _createElementBuffer, _createElementBufferWithArray, _createElementBufferWithTypedArray, } from \"./element-buffer\";\r\nimport { Attributes, _createAttributes, } from \"./attributes\";\r\nimport { TextureColorStorageFormat, TextureFormat, TextureDataType, _createTexture2D, _createTexture2DWithTypedArray, _createTextureCubeMap, _createTextureCubeMapWithTypedArray, } from \"./texture\";\r\nimport { _createRenderbuffer, } from \"./renderbuffer\";\r\nimport { _createFramebuffer } from \"./framebuffer\";\r\n/**\r\n * Available extensions.\r\n */\r\nexport var Extension;\r\n(function (Extension) {\r\n    Extension[\"EXTColorBufferFloat\"] = \"EXT_color_buffer_float\";\r\n    Extension[\"OESTextureFloatLinear\"] = \"OES_texture_float_linear\";\r\n})(Extension || (Extension = {}));\r\nexport class Device {\r\n    constructor(gl, canvas, explicitPixelRatio, explicitViewportWidth, explicitViewportHeight) {\r\n        this.gl = gl;\r\n        this.canvas = canvas;\r\n        this.explicitPixelRatio = explicitPixelRatio;\r\n        this.explicitViewportWidth = explicitViewportWidth;\r\n        this.explicitViewportHeight = explicitViewportHeight;\r\n        this.resizeToFit();\r\n        this.state = new State(gl);\r\n        this.backbufferTarget = new Target(this.state, [gl.BACK], null, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n        // Enable scissor test globally. Practically everywhere you would want\r\n        // it disabled you can pass explicit scissor box instead. The impact on\r\n        // perf is negligent.\r\n        gl.enable(gl.SCISSOR_TEST);\r\n    }\r\n    /**\r\n     * Create a new device from existing `HTMLCanvasElement`. Does not take\r\n     * ownership of canvas.\r\n     */\r\n    static createWithCanvasElement(canvas, options = {}) {\r\n        const { alpha = true, antialias = true, depth = true, stencil = true, preserveDrawingBuffer = false, } = options;\r\n        const gl = canvas.getContext(\"webgl2\", {\r\n            alpha,\r\n            antialias,\r\n            depth,\r\n            stencil,\r\n            preserveDrawingBuffer,\r\n        });\r\n        if (!gl) {\r\n            throw new Error(\"Could not get WebGL2 context\");\r\n        }\r\n        return Device.createWithWebGLContext(gl, options);\r\n    }\r\n    /**\r\n     * Create a new device from existing WebGL context. Does not take ownership\r\n     * of context, but concurrent usage may be the source of bugs. Be sure to\r\n     * know what you are doing.\r\n     *\r\n     * Note that only contexts created from `HTMLCanvasElement` are supported\r\n     * and contexts create from `OffscreenCanvas` will fail.\r\n     *\r\n     * Also see `device.reset()`.\r\n     */\r\n    static createWithWebGLContext(gl, { pixelRatio, viewportWidth, viewportHeight, extensions, debug, } = {}) {\r\n        // We need to check whether the provided canvas isn't offscreen, but\r\n        // only if our current platform supports it. Note that OffscreenCanvas\r\n        // is accessed from globalThis to prevent name reference errors.\r\n        let canvas;\r\n        if (globalThis.OffscreenCanvas && gl.canvas instanceof globalThis.OffscreenCanvas) {\r\n            throw new Error(\"Offscreen canvas is not supported yet\");\r\n        }\r\n        else {\r\n            canvas = gl.canvas;\r\n        }\r\n        if (extensions) {\r\n            extensions.forEach((ext) => {\r\n                // We currently do not have extensions with callable API\r\n                if (!gl.getExtension(ext)) {\r\n                    throw new Error(`Could not get extension ${ext}`);\r\n                }\r\n            });\r\n        }\r\n        if (debug) {\r\n            gl = Object.entries(gl).reduce((accum, [k, v]) => (Object.assign(Object.assign({}, accum), { [k]: v === \"function\" ? createDebugFunc(gl, k) : v })), gl);\r\n        }\r\n        return new Device(gl, canvas, pixelRatio, viewportWidth, viewportHeight);\r\n    }\r\n    /**\r\n     * Return width of the WebGL drawing buffer in physical (device)\r\n     * pixels. This will usually be the same as\r\n     * `device.requestedPhysicalWidth`, but can be smaller if WebGL\r\n     * decides to allocate a smaller drawing buffer than requested,\r\n     * e.g. when the size is not supported by hardware.\r\n     */\r\n    get physicalWidth() {\r\n        return this.gl.drawingBufferWidth;\r\n    }\r\n    /**\r\n     * Return height of the WebGL drawing buffer in physical\r\n     * (device) pixels. This will usually be the same as\r\n     * `device.requestedPhysicalHeight`, but can be smaller if WebGL\r\n     * decides to allocate a smaller drawing buffer than requested,\r\n     * e.g. when the size is not supported by hardware.\r\n     */\r\n    get physicalHeight() {\r\n        return this.gl.drawingBufferHeight;\r\n    }\r\n    /**\r\n     * Return width of the canvas in physical (device) pixels. This\r\n     * will usually be the same as `device.physicalWidth`.\r\n     */\r\n    get requestedPhysicalWidth() {\r\n        return this.canvas.width;\r\n    }\r\n    /**\r\n     * Return height of the canvas in physical (device) pixels. This\r\n     * will usually be the same as `device.physicalHeight`.\r\n     */\r\n    get requestedPhysicalHeight() {\r\n        return this.canvas.height;\r\n    }\r\n    /**\r\n     * Return width of canvas in logical (CSS) pixels (before applying\r\n     * device pixel ratio). This is useful for e.g. computing the\r\n     * position of mouse events.\r\n     */\r\n    get logicalWidth() {\r\n        return this.canvas.clientWidth;\r\n    }\r\n    /**\r\n     * Return height of canvas in logical (CSS) pixels (before\r\n     * applying device pixel ratio). This is useful for e.g. computing\r\n     * the position of mouse events.\r\n     */\r\n    get logicalHeight() {\r\n        return this.canvas.clientHeight;\r\n    }\r\n    /**\r\n     * Return the device pixel ratio for this device.\r\n     */\r\n    get pixelRatio() {\r\n        return this.explicitPixelRatio || window.devicePixelRatio;\r\n    }\r\n    /**\r\n     * Resize the canvas if the device pixel ratio or canvas\r\n     * dimensions changed.\r\n     */\r\n    resizeToFit() {\r\n        const dpr = this.pixelRatio;\r\n        const canvas = this.canvas;\r\n        const width = typeof this.explicitViewportWidth !== \"undefined\"\r\n            ? this.explicitViewportWidth\r\n            : canvas.clientWidth * dpr;\r\n        const height = typeof this.explicitViewportHeight !== \"undefined\"\r\n            ? this.explicitViewportHeight\r\n            : canvas.clientHeight * dpr;\r\n        if (width !== canvas.width) {\r\n            canvas.width = width;\r\n        }\r\n        if (height !== canvas.height) {\r\n            canvas.height = height;\r\n        }\r\n    }\r\n    /**\r\n     * Request a render target from the device to draw into. This gives you the\r\n     * gl.BACK target.\r\n     *\r\n     * Drawing should be done within the callback by\r\n     * calling `target.clear()` or `target.draw()` family of methods.\r\n     *\r\n     * Also see `framebuffer.target()`.\r\n     */\r\n    target(cb) {\r\n        this.backbufferTarget.with(cb);\r\n    }\r\n    /**\r\n     * Create a new command with given vertex and fragment shader.\r\n     *\r\n     * Commands contain WebGL programs, but also WebGL configuration needed\r\n     * for drawing: blend, depth test and stencil test configurations, and\r\n     * uniform callbacks. Uniform callbacks transform recieved props into\r\n     * uniform values when the command is executed, but if constant, they\r\n     * will eagerly upload the uniform values to the shaders and not do\r\n     * at in execution time.\r\n     */\r\n    createCommand(vert, frag, options) {\r\n        return _createCommand(this.state, vert, frag, options);\r\n    }\r\n    /**\r\n     * Create a new vertex buffer with given type and of given size.\r\n     */\r\n    createVertexBuffer(type, size, options) {\r\n        return _createVertexBuffer(this.gl, type, size, options);\r\n    }\r\n    /**\r\n     * Create a new vertex buffer of given type with provided data. Does not\r\n     * take ownership of data.\r\n     */\r\n    createVertexBufferWithTypedArray(type, data, options) {\r\n        return _createVertexBufferWithTypedArray(this.gl, type, data, options);\r\n    }\r\n    /**\r\n     * Create a new element buffer with given type, primitive, and size.\r\n     */\r\n    createElementBuffer(type, primitive, size, options) {\r\n        return _createElementBuffer(this.gl, type, primitive, size, options);\r\n    }\r\n    /**\r\n     * Create a new element buffer from potentially nested array. Infers\r\n     * Primitive from the array's shape:\r\n     *   number[] -> POINTS\r\n     *   [number, number][] -> LINES\r\n     *   [number, number, number][] -> TRIANGLES\r\n     * Does not take ownership of data.\r\n     */\r\n    createElementBufferWithArray(data, options) {\r\n        return _createElementBufferWithArray(this.gl, data, options);\r\n    }\r\n    /**\r\n     * Create a new element buffer of given type with provided data. Does not\r\n     * take ownership of data.\r\n     */\r\n    createElementBufferWithTypedArray(type, primitive, data, options) {\r\n        return _createElementBufferWithTypedArray(this.gl, type, primitive, data, options);\r\n    }\r\n    /**\r\n     * Create new attributes with element and attribute definitions, and an\r\n     * optional count limit.\r\n     *\r\n     * Element definitions can either be a primitive definition, reference an\r\n     * existing element buffer, or have enough information to create an element\r\n     * buffer.\r\n     *\r\n     * Attribute definitions can either reference an existing vertex buffer,\r\n     * or have enough information to create a vertex buffer.\r\n     *\r\n     * Empty attribute definitions are valid. If no attributes nor elements\r\n     * given, there will be no underlying vertex array object created, only the\r\n     * count will be given to gl.drawArrays()\r\n     */\r\n    createAttributes(elements, attributes, options) {\r\n        return _createAttributes(this.state, elements, attributes, options);\r\n    }\r\n    /**\r\n     * Create empty attributes of a given primitive. This actually performs no\r\n     * gl calls, only remembers the count for `gl.drawArrays()`\r\n     */\r\n    createEmptyAttributes(primitive, count) {\r\n        return new Attributes(this.state, primitive, [], count, 0);\r\n    }\r\n    /**\r\n     * Create a new 2D texture with given width, height, and storage format.\r\n     * The storage format determines what kind of data is possible to store.\r\n     */\r\n    createTexture2D(width, height, storageFormat, options) {\r\n        return _createTexture2D(this.gl, width, height, storageFormat, options);\r\n    }\r\n    /**\r\n     * Create a new 2D texture with width and height equal to that of the given\r\n     * image and store the image in the texture.\r\n     * The storage format determines what kind of data is possible to store and\r\n     * is preset as RGBA8.\r\n     */\r\n    createTexture2DWithImage(image, options) {\r\n        return _createTexture2DWithTypedArray(this.gl, image.width, image.height, TextureColorStorageFormat.RGBA8, image.data, TextureFormat.RGBA, TextureDataType.UNSIGNED_BYTE, options);\r\n    }\r\n    /**\r\n     * Create a new 2D texture with given width, height, and storage format and\r\n     * store data of given format and type contained in the provided typed array\r\n     * to the texture.\r\n     * The storage format determines what kind of data is possible to store.\r\n     */\r\n    createTexture2DWithTypedArray(width, height, storageFormat, data, dataFormat, dataType, options) {\r\n        return _createTexture2DWithTypedArray(this.gl, width, height, storageFormat, data, dataFormat, dataType, options);\r\n    }\r\n    /**\r\n     * Create a new cubemap texture where each face has a given width, height,\r\n     * and storage format.\r\n     * The storage format determines what kind of data is possible to store.\r\n     */\r\n    createTextureCubeMap(width, height, storageFormat, options) {\r\n        return _createTextureCubeMap(this.gl, width, height, storageFormat, options);\r\n    }\r\n    /**\r\n     * Create a new cubemap texture where each face has a width and height equal\r\n     * to that of the given images and store the provided images in the\r\n     * cubemap's faces.\r\n     * The storage format determines what kind of data is possible to store and\r\n     * is preset as RGBA8.\r\n     * Each image must have the same dimensions.\r\n     */\r\n    createTextureCubeMapWithImage(imagePositiveX, imageNegativeX, imagePositiveY, imageNegativeY, imagePositiveZ, imageNegativeZ, options) {\r\n        const width = imagePositiveX.width;\r\n        const height = imagePositiveX.height;\r\n        // Assert all images have same sizes\r\n        assert.is(imageNegativeX.width, width, fmtImageDimsMismatch);\r\n        assert.is(imagePositiveY.width, width, fmtImageDimsMismatch);\r\n        assert.is(imageNegativeY.width, width, fmtImageDimsMismatch);\r\n        assert.is(imagePositiveZ.width, width, fmtImageDimsMismatch);\r\n        assert.is(imageNegativeZ.width, width, fmtImageDimsMismatch);\r\n        assert.is(imageNegativeX.height, height, fmtImageDimsMismatch);\r\n        assert.is(imagePositiveY.height, height, fmtImageDimsMismatch);\r\n        assert.is(imageNegativeY.height, height, fmtImageDimsMismatch);\r\n        assert.is(imagePositiveZ.height, height, fmtImageDimsMismatch);\r\n        assert.is(imageNegativeZ.height, height, fmtImageDimsMismatch);\r\n        return _createTextureCubeMapWithTypedArray(this.gl, imagePositiveX.width, imagePositiveY.height, TextureColorStorageFormat.RGBA8, imagePositiveX.data, imageNegativeX.data, imagePositiveY.data, imageNegativeY.data, imagePositiveZ.data, imageNegativeZ.data, TextureFormat.RGBA, TextureDataType.UNSIGNED_BYTE, options);\r\n    }\r\n    /**\r\n     * Create a new cubemap texture where each face has a given width, height,\r\n     * and storage format and store data contained in the provided typed arrays\r\n     * in the cubemap's faces.\r\n     * The storage format determines what kind of data is possible to store.\r\n     * Each typed array must have the same length.\r\n     */\r\n    createTextureCubeMapWithTypedArray(width, height, storageFormat, dataPositiveX, dataNegativeX, dataPositiveY, dataNegativeY, dataPositiveZ, dataNegativeZ, dataFormat, dataType, options) {\r\n        return _createTextureCubeMapWithTypedArray(this.gl, width, height, storageFormat, dataPositiveX, dataNegativeX, dataPositiveY, dataNegativeY, dataPositiveZ, dataNegativeZ, dataFormat, dataType, options);\r\n    }\r\n    /**\r\n     * Create a new renderbuffer with given width, height, and storage format.\r\n     * Pass in `options.samples` to configure multisampling.\r\n     */\r\n    createRenderbuffer(width, height, storageFormat, options) {\r\n        return _createRenderbuffer(this.gl, width, height, storageFormat, options);\r\n    }\r\n    /**\r\n     * Create a framebuffer containg one or more color buffers and a\r\n     * depth or depth-stencil buffer with given width and height.\r\n     *\r\n     * Does not take ownership of provided attachments, only references them.\r\n     * WebGL will synchronize their usage so they can either be written to via\r\n     * the framebuffer, or written to or read via their own methods.\r\n     */\r\n    createFramebuffer(width, height, color, depthStencil) {\r\n        return _createFramebuffer(this.state, width, height, color, depthStencil);\r\n    }\r\n    /**\r\n     * Reset all tracked WebGL state.\r\n     *\r\n     * Instead of always issuing calls to WebGL, we sometimes remember\r\n     * various pieces of it's state ourselves. This works great for\r\n     * preventing state transitions when rendering while keeping the\r\n     * rendering code straightforward, but breaks apart once we have\r\n     * to share the WebGL context with someone else.\r\n     *\r\n     * `device.reset()` is an escape hatch that notifies the device\r\n     * that it should no longer trust the values it has\r\n     * remembered. Use it when using `webglutenfree` with another\r\n     * WebGL wrapper, such as `three.js`, or when needing to use the\r\n     * GL context yourself. Note that calling `device.reset()` with\r\n     * any resources bound is an error, i.e. don't do this:\r\n     *\r\n     * ```typescript\r\n     * dev.target((rt) => {\r\n     *     // Trying to reset the device while rendering is an error!\r\n     *     dev.reset();\r\n     * });\r\n     * ```\r\n     *\r\n     * Also see `Device.createWithWebGLContext()`.\r\n     */\r\n    reset() {\r\n        this.state.reset();\r\n    }\r\n}\r\nfunction createDebugFunc(gl, key) {\r\n    return () => {\r\n        console.debug(`DEBUG ${key} ${Array.from(arguments)}`);\r\n        return gl[key].apply(gl, arguments);\r\n    };\r\n}\r\nfunction fmtImageDimsMismatch() {\r\n    return \"All provided images must have the same dimensions\";\r\n}\r\n//# sourceMappingURL=device.js.map"],"names":["assert.isString","assert.isTrue","assert.unreachable","assert.is","assert.isNumber","assert.isNotNullOrUndefined","assert.isArray","sizeOf","array.is2","array.shape2","assert.isInRangeInclusive","array.ravel2","INT_PATTERN","assert.isGreater","assert.isNotEmpty"],"mappings":"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"}