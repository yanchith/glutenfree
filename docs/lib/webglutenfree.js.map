{"version":3,"file":"webglutenfree.js","sources":["../build/state.js","../build/util/env.js","../build/util/assert.js","../build/target.js","../build/command.js","../build/vertex-buffer.js","../build/util/array.js","../build/element-buffer.js","../build/attributes.js","../build/texture.js","../build/framebuffer.js","../build/device.js"],"sourcesContent":["export class DepthTestDescriptor {\n    constructor(func, mask, rangeStart, rangeEnd) {\n        this.func = func;\n        this.mask = mask;\n        this.rangeStart = rangeStart;\n        this.rangeEnd = rangeEnd;\n    }\n    static equals(left, right) {\n        if (left === right) {\n            return true;\n        }\n        if (!left || !right) {\n            return false;\n        }\n        if (left.func !== right.func) {\n            return false;\n        }\n        if (left.mask !== right.mask) {\n            return false;\n        }\n        if (left.rangeStart !== right.rangeStart) {\n            return false;\n        }\n        if (left.rangeEnd !== right.rangeEnd) {\n            return false;\n        }\n        return true;\n    }\n}\nexport class StencilTestDescriptor {\n    constructor(fFn, bFn, fFnRef, bFnRef, fFnMask, bFnMask, fMask, bMask, fOpFail, bOpFail, fOpZFail, bOpZFail, fOpZPass, bOpZPass) {\n        this.fFn = fFn;\n        this.bFn = bFn;\n        this.fFnRef = fFnRef;\n        this.bFnRef = bFnRef;\n        this.fFnMask = fFnMask;\n        this.bFnMask = bFnMask;\n        this.fMask = fMask;\n        this.bMask = bMask;\n        this.fOpFail = fOpFail;\n        this.bOpFail = bOpFail;\n        this.fOpZFail = fOpZFail;\n        this.bOpZFail = bOpZFail;\n        this.fOpZPass = fOpZPass;\n        this.bOpZPass = bOpZPass;\n    }\n    static equals(left, right) {\n        if (left === right) {\n            return true;\n        }\n        if (!left || !right) {\n            return false;\n        }\n        if (left.fFn !== right.fFn) {\n            return false;\n        }\n        if (left.bFn !== right.bFn) {\n            return false;\n        }\n        if (left.fFnRef !== right.fFnRef) {\n            return false;\n        }\n        if (left.bFnRef !== right.bFnRef) {\n            return false;\n        }\n        if (left.fFnMask !== right.fFnMask) {\n            return false;\n        }\n        if (left.bFnMask !== right.bFnMask) {\n            return false;\n        }\n        if (left.fMask !== right.fMask) {\n            return false;\n        }\n        if (left.bMask !== right.bMask) {\n            return false;\n        }\n        if (left.fOpFail !== right.fOpFail) {\n            return false;\n        }\n        if (left.bOpFail !== right.bOpFail) {\n            return false;\n        }\n        if (left.fOpZFail !== right.fOpZFail) {\n            return false;\n        }\n        if (left.bOpZFail !== right.bOpZFail) {\n            return false;\n        }\n        if (left.fOpZPass !== right.fOpZPass) {\n            return false;\n        }\n        if (left.bOpZPass !== right.bOpZPass) {\n            return false;\n        }\n        return true;\n    }\n}\nexport class BlendDescriptor {\n    constructor(srcRGB, srcAlpha, dstRGB, dstAlpha, eqnRGB, eqnAlpha, color) {\n        this.srcRGB = srcRGB;\n        this.srcAlpha = srcAlpha;\n        this.dstRGB = dstRGB;\n        this.dstAlpha = dstAlpha;\n        this.eqnRGB = eqnRGB;\n        this.eqnAlpha = eqnAlpha;\n        this.color = color;\n    }\n    static equals(left, right) {\n        if (left === right) {\n            return true;\n        }\n        if (!left || !right) {\n            return false;\n        }\n        if (left.srcRGB !== right.srcRGB) {\n            return false;\n        }\n        if (left.srcAlpha !== right.srcAlpha) {\n            return false;\n        }\n        if (left.dstRGB !== right.dstRGB) {\n            return false;\n        }\n        if (left.dstAlpha !== right.dstAlpha) {\n            return false;\n        }\n        if (left.eqnRGB !== right.eqnRGB) {\n            return false;\n        }\n        if (left.eqnAlpha !== right.eqnAlpha) {\n            return false;\n        }\n        if (left.color === right.color) {\n            return true;\n        }\n        if (!left.color || !right.color) {\n            return false;\n        }\n        if (left.color[0] !== right.color[0]) {\n            return false;\n        }\n        if (left.color[1] !== right.color[1]) {\n            return false;\n        }\n        if (left.color[2] !== right.color[2]) {\n            return false;\n        }\n        if (left.color[3] !== right.color[3]) {\n            return false;\n        }\n        return true;\n    }\n}\nfunction arrayEquals(left, right) {\n    if (left.length !== right.length) {\n        return false;\n    }\n    for (let i = 0; i < left.length; ++i) {\n        if (left[i] !== right[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport class State {\n    constructor(gl) {\n        this.target = null;\n        this.command = null;\n        this.glProgram = null;\n        this.glDrawFramebuffer = null;\n        this.depthTest = null;\n        this.stencilTest = null;\n        this.blend = null;\n        this.gl = gl;\n        this.glDrawBuffers = [gl.BACK];\n    }\n    setDepthTest(depthTest) {\n        if (!DepthTestDescriptor.equals(this.depthTest, depthTest)) {\n            this.depthTest = depthTest;\n            this.applyDepthTest();\n        }\n    }\n    setStencilTest(stencilTest) {\n        if (!StencilTestDescriptor.equals(this.stencilTest, stencilTest)) {\n            this.stencilTest = stencilTest;\n            this.applyStencilTest();\n        }\n    }\n    setBlend(blend) {\n        if (!BlendDescriptor.equals(this.blend, blend)) {\n            this.blend = blend;\n            this.applyBlend();\n        }\n    }\n    /**\n     * Bind a `Target` for this `State`. Each `Device` must have at\n     * most one `Target` bound at any time. Nested target binding is not\n     * supported even though it is not prohibited by the shape of the API:\n     *\n     * // This produces a runtime error\n     * fbo.target((fbort) => {\n     *     dev.target((rt) => rt.draw(...));\n     *     fbort.draw(...);\n     * });\n     */\n    bindTarget(target, glDrawFramebuffer, glDrawBuffers) {\n        if (this.target) {\n            throw new Error(\"Cannot have two Targets bound at the same time\");\n        }\n        const gl = this.gl;\n        if (this.glDrawFramebuffer !== glDrawFramebuffer) {\n            this.gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, glDrawFramebuffer);\n            this.glDrawFramebuffer = glDrawFramebuffer;\n        }\n        if (!arrayEquals(this.glDrawBuffers, glDrawBuffers)) {\n            this.gl.drawBuffers(glDrawBuffers);\n            this.glDrawBuffers = glDrawBuffers;\n        }\n        this.target = target;\n    }\n    /**\n     * Unbind currently bound target. Only forgets the target from `State`,\n     * does not unbind the WebGL framebuffer.\n     */\n    unbindTarget() {\n        if (!this.target) {\n            throw new Error(\"Cannot unbind target, none bound\");\n        }\n        this.target = null;\n    }\n    /**\n     * Bind a `Command` for this `State`. Each `Device` must have at\n     * most one `Command` bound at any time. Nested command binding is not\n     * supported even though it is not prohibited by the shape of the API:\n     *\n     * // This produces a runtime error\n     * dev.target((rt) => {\n     *     rt.batch(cmd, (draw) => {\n     *         rt.draw(cmd, attrs, props);\n     *     });\n     * });\n     */\n    bindCommand(command, glProgram) {\n        if (this.command) {\n            throw new Error(\"Cannot have two Commands bound at the same time\");\n        }\n        if (this.glProgram !== glProgram) {\n            this.gl.useProgram(glProgram);\n            this.glProgram = glProgram;\n        }\n        this.command = command;\n    }\n    /**\n     * Unbind currently bound command. Only forgets the command from `State`,\n     * does not unbind the WebGL program.\n     */\n    unbindCommand() {\n        if (!this.command) {\n            throw new Error(\"Cannot unbind command, none bound\");\n        }\n        this.command = null;\n    }\n    assertTargetBound(target, op) {\n        if (this.target !== target) {\n            throw new Error(`Trying to perform ${op}, expected target ${target}, got: ${this.target}`);\n        }\n    }\n    assertCommandBound(command, op) {\n        if (this.command !== command) {\n            throw new Error(`Trying to perform ${op}, expected command ${command}, got: ${this.command}`);\n        }\n    }\n    assertTargetUnbound() {\n        if (this.target) {\n            throw new Error(\"A Target is already bound, cannot bind twice\");\n        }\n    }\n    assertCommandUnbound() {\n        if (this.command) {\n            throw new Error(\"A Command is already bound, cannot bind twice\");\n        }\n    }\n    applyDepthTest() {\n        const { gl, depthTest } = this;\n        if (depthTest) {\n            gl.enable(gl.DEPTH_TEST);\n            gl.depthFunc(depthTest.func);\n            gl.depthMask(depthTest.mask);\n            gl.depthRange(depthTest.rangeStart, depthTest.rangeEnd);\n        }\n        else {\n            gl.disable(gl.DEPTH_TEST);\n        }\n    }\n    applyStencilTest() {\n        const { gl, stencilTest } = this;\n        if (stencilTest) {\n            const { fFn, bFn, fFnRef, bFnRef, fFnMask, bFnMask, fMask, bMask, fOpFail, bOpFail, fOpZFail, bOpZFail, fOpZPass, bOpZPass, } = stencilTest;\n            gl.enable(gl.STENCIL_TEST);\n            gl.stencilFuncSeparate(gl.FRONT, fFn, fFnRef, fFnMask);\n            gl.stencilFuncSeparate(gl.BACK, bFn, bFnRef, bFnMask);\n            gl.stencilMaskSeparate(gl.FRONT, fMask);\n            gl.stencilMaskSeparate(gl.BACK, bMask);\n            gl.stencilOpSeparate(gl.FRONT, fOpFail, fOpZFail, fOpZPass);\n            gl.stencilOpSeparate(gl.BACK, bOpFail, bOpZFail, bOpZPass);\n        }\n        else {\n            gl.disable(gl.STENCIL_TEST);\n        }\n    }\n    applyBlend() {\n        const { gl, blend } = this;\n        if (blend) {\n            gl.enable(gl.BLEND);\n            gl.blendFuncSeparate(blend.srcRGB, blend.dstRGB, blend.srcAlpha, blend.dstAlpha);\n            gl.blendEquationSeparate(blend.eqnRGB, blend.eqnAlpha);\n            if (blend.color) {\n                const [r, g, b, a] = blend.color;\n                gl.blendColor(r, g, b, a);\n            }\n        }\n        else {\n            gl.disable(gl.BLEND);\n        }\n    }\n}\n//# sourceMappingURL=state.js.map","// This file contains facilities for determining whether we are currently in a\n// debug build. Production builds completely dead-code-eliminate its contents\n// and all blocks guarded by `IS_DEBUG_BUILD` throughout the project.\n// For nonproduction builds `IS_DEBUG_BUILD` is not eliminated and always\n// evaluates to `true`, however, consumers can always perform the\n// same dead code elimination further down the road by replacing (or envifying)\n// `process.env.NODE_ENV` with \"production\".\nconst __OPAQUE_TRUE__ = Math.random() > -1;\nconst __OPAQUE_ENV__ = __OPAQUE_TRUE__ ? \"development\" : \"production\";\nconst process = { env: { NODE_ENV: __OPAQUE_ENV__ } };\n/**\n * Are we in a debug build?\n */\nexport const IS_DEBUG_BUILD = process.env.NODE_ENV !== \"production\";\n//# sourceMappingURL=env.js.map","import { IS_DEBUG_BUILD } from \"./env\";\nexport function isTrue(got, fmt) {\n    const valueIsTrue = got === true;\n    if (IS_DEBUG_BUILD) {\n        if (!valueIsTrue) {\n            const msg = fmt\n                ? fmt(got)\n                : `Assertion failed: value ${got} not true`;\n            throw new Error(msg);\n        }\n    }\n    return valueIsTrue;\n}\nexport function isFalse(got, fmt) {\n    const valueIsFalse = got === false;\n    if (IS_DEBUG_BUILD) {\n        if (!valueIsFalse) {\n            const msg = fmt\n                ? fmt(got)\n                : `Assertion failed: value ${got} not false`;\n            throw new Error(msg);\n        }\n    }\n    return valueIsFalse;\n}\nexport function isArray(got, fmt) {\n    const valueIsArray = Array.isArray(got);\n    if (IS_DEBUG_BUILD) {\n        if (!valueIsArray) {\n            const msg = fmt\n                ? fmt(got)\n                : `Assertion failed: value ${got} not an array`;\n            throw new Error(msg);\n        }\n    }\n    return valueIsArray;\n}\nexport function nonNull(got, fmt) {\n    const valueIsNonNull = typeof got !== \"undefined\"\n        && (typeof got !== \"object\" || !!got);\n    if (IS_DEBUG_BUILD) {\n        if (!valueIsNonNull) {\n            const msg = fmt\n                ? fmt(got)\n                : `Assertion failed: value undefined or null`;\n            throw new Error(msg);\n        }\n    }\n    return valueIsNonNull;\n}\nexport function nonEmpty(got, fmt) {\n    const valueIsNonEmpty = !!got.length;\n    if (IS_DEBUG_BUILD) {\n        if (!valueIsNonEmpty) {\n            const msg = fmt\n                ? fmt(got)\n                : `Assertion failed: string or array value empty`;\n            throw new Error(msg);\n        }\n    }\n    return valueIsNonEmpty;\n}\nexport function equal(got, expected, fmt) {\n    const valuesAreEqual = got === expected;\n    if (IS_DEBUG_BUILD) {\n        if (!valuesAreEqual) {\n            const msg = fmt\n                ? fmt(got, expected)\n                : `Assertion failed: value ${got} not equal to ${expected}`;\n            throw new Error(msg);\n        }\n    }\n    return valuesAreEqual;\n}\nexport function oneOf(got, expected, fmt) {\n    const valueIsOneOf = expected.includes(got);\n    if (IS_DEBUG_BUILD) {\n        if (!valueIsOneOf) {\n            const msg = fmt\n                ? fmt(got, expected)\n                : `Assertion failed: value ${got} not in ${expected}`;\n            throw new Error(msg);\n        }\n    }\n    return valueIsOneOf;\n}\nexport function gt(got, low, fmt) {\n    const valueIsGt = got > low;\n    if (IS_DEBUG_BUILD) {\n        if (!valueIsGt) {\n            const msg = fmt\n                ? fmt(got, low)\n                : `Assertion failed: value ${got} not GT than expected ${low}`;\n            throw new Error(msg);\n        }\n    }\n    return valueIsGt;\n}\nexport function gte(got, low, fmt) {\n    const valueIsGte = got >= low;\n    if (IS_DEBUG_BUILD) {\n        if (!valueIsGte) {\n            const msg = fmt\n                ? fmt(got, low)\n                : `Assertion failed: value ${got} not GTE than expected ${low}`;\n            throw new Error(msg);\n        }\n    }\n    return valueIsGte;\n}\nexport function rangeInclusive(got, low, high, fmt) {\n    const valueIsInRangeInclusive = got >= low && got <= high;\n    if (IS_DEBUG_BUILD) {\n        if (!valueIsInRangeInclusive) {\n            const msg = fmt\n                ? fmt(got, low, high)\n                : `Assertion failed: value ${got} not in range [${low},${high}]`;\n            throw new Error(msg);\n        }\n    }\n    return valueIsInRangeInclusive;\n}\nexport function unreachable(got, fmt) {\n    // \"unreachable\" can not be eliminated, as its \"return value\" is\n    // captured by the type system at the callsite for control-flow analysis.\n    const msg = fmt\n        ? fmt(got)\n        : `Assertion failed: this branch should be unreachable`;\n    throw new Error(msg);\n}\n//# sourceMappingURL=assert.js.map","import * as assert from \"./util/assert\";\n/**\n * Target represents a drawable surface. Get hold of targets with\n * `device.target()` or `framebuffer.target()`.\n */\nexport class Target {\n    constructor(state, glDrawBuffers, glFramebuffer, surfaceWidth, surfaceHeight) {\n        this.state = state;\n        this.glDrawBuffers = glDrawBuffers;\n        this.glFramebuffer = glFramebuffer;\n        this.surfaceWidth = surfaceWidth;\n        this.surfaceHeight = surfaceHeight;\n    }\n    /**\n     * Run the callback with the target bound. This is called automatically,\n     * when obtaining a target via `device.target()` or `framebuffer.target()`.\n     *\n     * All writes/drawing to the target MUST be done within the callback.\n     */\n    with(cb) {\n        const { state, glFramebuffer, glDrawBuffers, } = this;\n        // We would overwrite the currently bound DRAW_FRAMEBUFFER unless we\n        // checked\n        state.bindTarget(this, glFramebuffer, glDrawBuffers);\n        cb(this);\n        state.unbindTarget();\n    }\n    /**\n     * Clear selected buffers to provided values.\n     */\n    clear(bits, { r = 0, g = 0, b = 0, a = 1, depth = 1, stencil = 0, scissorX = 0, scissorY = 0, scissorWidth = this.surfaceWidth === void 0\n        ? this.state.gl.drawingBufferWidth\n        : this.surfaceWidth, scissorHeight = this.surfaceHeight === void 0\n        ? this.state.gl.drawingBufferHeight\n        : this.surfaceHeight, } = {}) {\n        const { state, state: { gl } } = this;\n        state.assertTargetBound(this, \"clear\");\n        gl.scissor(scissorX, scissorY, scissorWidth, scissorHeight);\n        if (bits & 16384 /* COLOR */) {\n            gl.clearColor(r, g, b, a);\n        }\n        if (bits & 256 /* DEPTH */) {\n            gl.clearDepth(depth);\n        }\n        if (bits & 1024 /* STENCIL */) {\n            gl.clearStencil(stencil);\n        }\n        gl.clear(bits);\n    }\n    /**\n     * Blit source framebuffer onto this render target. Use buffer bits to\n     * choose buffers to blit.\n     */\n    blit(source, bits, { srcX = 0, srcY = 0, srcWidth = source.width, srcHeight = source.height, dstX = 0, dstY = 0, dstWidth = this.surfaceWidth === void 0\n        ? this.state.gl.drawingBufferWidth\n        : this.surfaceWidth, dstHeight = this.surfaceHeight === void 0\n        ? this.state.gl.drawingBufferHeight\n        : this.surfaceHeight, filter = 9728 /* NEAREST */, scissorX = dstX, scissorY = dstY, scissorWidth = dstWidth, scissorHeight = dstHeight, } = {}) {\n        const { state, state: { gl } } = this;\n        state.assertTargetBound(this, \"blit\");\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, source.glFramebuffer);\n        gl.scissor(scissorX, scissorY, scissorWidth, scissorHeight);\n        gl.blitFramebuffer(srcX, srcY, srcWidth, srcHeight, dstX, dstY, dstWidth, dstHeight, bits, filter);\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n    }\n    /**\n     * Draw to this target with a command, attributes, and command properties.\n     * The properties are passed to the command's uniform or texture callbacks,\n     * if used.\n     *\n     * This is a unified header to stisfy the typechecker.\n     */\n    draw(cmd, attrs, props, { viewportX = 0, viewportY = 0, viewportWidth = this.surfaceWidth === void 0\n        ? this.state.gl.drawingBufferWidth\n        : this.surfaceWidth, viewportHeight = this.surfaceHeight === void 0\n        ? this.state.gl.drawingBufferHeight\n        : this.surfaceHeight, scissorX = viewportX, scissorY = viewportY, scissorWidth = viewportWidth, scissorHeight = viewportHeight, } = {}) {\n        const { state, state: { gl } } = this;\n        const { glProgram, depthTestDescr, stencilTestDescr, blendDescr, textureAccessors, uniformDescrs, } = cmd;\n        state.assertTargetBound(this, \"draw\");\n        state.bindCommand(cmd, glProgram);\n        state.setDepthTest(depthTestDescr);\n        state.setStencilTest(stencilTestDescr);\n        state.setBlend(blendDescr);\n        this.textures(textureAccessors, props, 0);\n        this.uniforms(uniformDescrs, props, 0);\n        // Only bind the VAO if it is not null - we always assume we cleaned\n        // up after ourselves so it SHOULD be unbound prior to this point\n        if (attrs.glVertexArray) {\n            gl.bindVertexArray(attrs.glVertexArray);\n        }\n        gl.viewport(viewportX, viewportY, viewportWidth, viewportHeight);\n        gl.scissor(scissorX, scissorY, scissorWidth, scissorHeight);\n        if (attrs.indexed) {\n            this.drawElements(attrs.primitive, attrs.elementCount, attrs.indexType, 0, // offset\n            attrs.instanceCount);\n        }\n        else {\n            this.drawArrays(attrs.primitive, attrs.count, 0, // offset\n            attrs.instanceCount);\n        }\n        // Clean up after ourselves if we bound something\n        if (attrs.glVertexArray) {\n            gl.bindVertexArray(null);\n        }\n        state.unbindCommand();\n    }\n    /**\n     * Perform multiple draws to this target with the same command, but multiple\n     * attributes and command properties. The properties are passed to the\n     * command's uniform or texture callbacks, if used.\n     *\n     * All drawing should be performed within the callback to prevent\n     * unnecesasry rebinding.\n     */\n    batch(cmd, cb, { viewportX = 0, viewportY = 0, viewportWidth = this.surfaceWidth === void 0\n        ? this.state.gl.drawingBufferWidth\n        : this.surfaceWidth, viewportHeight = this.surfaceHeight === void 0\n        ? this.state.gl.drawingBufferHeight\n        : this.surfaceHeight, scissorX = viewportX, scissorY = viewportY, scissorWidth = viewportWidth, scissorHeight = viewportHeight, } = {}) {\n        const { state, state: { gl } } = this;\n        const { glProgram, depthTestDescr, stencilTestDescr, blendDescr, textureAccessors, uniformDescrs, } = cmd;\n        // The price for gl.useProgram, enabling depth/stencil tests and\n        // blending is paid only once for all draw calls in batch\n        state.assertTargetBound(this, \"batch-draw\");\n        state.bindCommand(cmd, glProgram);\n        state.setDepthTest(depthTestDescr);\n        state.setStencilTest(stencilTestDescr);\n        state.setBlend(blendDescr);\n        let i = 0;\n        cb((attrs, props) => {\n            // Did the user do anything sneaky?\n            state.assertTargetBound(this, \"batch-draw\");\n            state.assertCommandBound(cmd, \"batch-draw\");\n            i++;\n            this.textures(textureAccessors, props, i);\n            this.uniforms(uniformDescrs, props, i);\n            // Only bind the VAO if it is not null - we always assume we\n            // cleaned up after ourselves so it SHOULD be unbound prior to\n            // this point\n            if (attrs.glVertexArray) {\n                gl.bindVertexArray(attrs.glVertexArray);\n            }\n            gl.viewport(viewportX, viewportY, viewportWidth, viewportHeight);\n            gl.scissor(scissorX, scissorY, scissorWidth, scissorHeight);\n            if (attrs.indexed) {\n                this.drawElements(attrs.primitive, attrs.elementCount, attrs.indexType, 0, // offset\n                attrs.instanceCount);\n            }\n            else {\n                this.drawArrays(attrs.primitive, attrs.count, 0, // offset\n                attrs.instanceCount);\n            }\n            // Clean up after ourselves if we bound something. We can't\n            // leave this bound as an optimisation, as we assume everywhere\n            // it is not bound in beginning of our methods.\n            if (attrs.glVertexArray) {\n                gl.bindVertexArray(null);\n            }\n        });\n        state.unbindCommand();\n    }\n    drawArrays(primitive, count, offset, instanceCount) {\n        if (instanceCount) {\n            this.state.gl.drawArraysInstanced(primitive, offset, count, instanceCount);\n        }\n        else {\n            this.state.gl.drawArrays(primitive, offset, count);\n        }\n    }\n    drawElements(primitive, count, type, offset, instCount) {\n        if (instCount) {\n            this.state.gl.drawElementsInstanced(primitive, count, type, offset, instCount);\n        }\n        else {\n            this.state.gl.drawElements(primitive, count, type, offset);\n        }\n    }\n    textures(textureAccessors, props, index) {\n        const gl = this.state.gl;\n        textureAccessors.forEach((accessor, i) => {\n            const tex = access(props, index, accessor);\n            gl.activeTexture(gl.TEXTURE0 + i);\n            gl.bindTexture(gl.TEXTURE_2D, tex.glTexture);\n        });\n    }\n    uniforms(uniformDescrs, props, index) {\n        const gl = this.state.gl;\n        uniformDescrs.forEach(({ identifier: ident, location: loc, definition: def, }) => {\n            switch (def.type) {\n                case \"1f\":\n                    gl.uniform1f(loc, access(props, index, def.value));\n                    break;\n                case \"1fv\":\n                    gl.uniform1fv(loc, access(props, index, def.value));\n                    break;\n                case \"1i\":\n                    gl.uniform1i(loc, access(props, index, def.value));\n                    break;\n                case \"1iv\":\n                    gl.uniform1iv(loc, access(props, index, def.value));\n                    break;\n                case \"1ui\":\n                    gl.uniform1ui(loc, access(props, index, def.value));\n                    break;\n                case \"1uiv\":\n                    gl.uniform1uiv(loc, access(props, index, def.value));\n                    break;\n                case \"2f\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2f(loc, x, y);\n                    break;\n                }\n                case \"2fv\":\n                    gl.uniform2fv(loc, access(props, index, def.value));\n                    break;\n                case \"2i\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2i(loc, x, y);\n                    break;\n                }\n                case \"2iv\":\n                    gl.uniform2iv(loc, access(props, index, def.value));\n                    break;\n                case \"2ui\": {\n                    const [x, y] = access(props, index, def.value);\n                    gl.uniform2ui(loc, x, y);\n                    break;\n                }\n                case \"2uiv\":\n                    gl.uniform2uiv(loc, access(props, index, def.value));\n                    break;\n                case \"3f\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3f(loc, x, y, z);\n                    break;\n                }\n                case \"3fv\":\n                    gl.uniform3fv(loc, access(props, index, def.value));\n                    break;\n                case \"3i\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3i(loc, x, y, z);\n                    break;\n                }\n                case \"3iv\":\n                    gl.uniform3iv(loc, access(props, index, def.value));\n                    break;\n                case \"3ui\": {\n                    const [x, y, z] = access(props, index, def.value);\n                    gl.uniform3ui(loc, x, y, z);\n                    break;\n                }\n                case \"3uiv\":\n                    gl.uniform3uiv(loc, access(props, index, def.value));\n                    break;\n                case \"4f\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4f(loc, x, y, z, w);\n                    break;\n                }\n                case \"4fv\":\n                    gl.uniform4fv(loc, access(props, index, def.value));\n                    break;\n                case \"4i\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4i(loc, x, y, z, w);\n                    break;\n                }\n                case \"4iv\":\n                    gl.uniform4iv(loc, access(props, index, def.value));\n                    break;\n                case \"4ui\": {\n                    const [x, y, z, w] = access(props, index, def.value);\n                    gl.uniform4ui(loc, x, y, z, w);\n                    break;\n                }\n                case \"4uiv\":\n                    gl.uniform4uiv(loc, access(props, index, def.value));\n                    break;\n                case \"matrix2fv\":\n                    gl.uniformMatrix2fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix3fv\":\n                    gl.uniformMatrix3fv(loc, false, access(props, index, def.value));\n                    break;\n                case \"matrix4fv\":\n                    gl.uniformMatrix4fv(loc, false, access(props, index, def.value));\n                    break;\n                default:\n                    assert.unreachable(def, () => `Unknown uniform: ${ident}`);\n                    break;\n            }\n        });\n    }\n}\nfunction access(props, index, value) {\n    return typeof value === \"function\"\n        ? value(props, index)\n        : value;\n}\n//# sourceMappingURL=target.js.map","import * as assert from \"./util/assert\";\nimport { IS_DEBUG_BUILD } from \"./util/env\";\nimport { DepthTestDescriptor, StencilTestDescriptor, BlendDescriptor, } from \"./state\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nconst UNKNOWN_ATTRIB_LOCATION = -1;\nexport function _createCommand(state, vert, frag, { textures = {}, uniforms = {}, depth, stencil, blend, } = {}) {\n    assert.nonNull(vert, fmtParamNonNull(\"vert\"));\n    assert.nonNull(frag, fmtParamNonNull(\"frag\"));\n    const depthDescr = parseDepth(depth);\n    const stencilDescr = parseStencil(stencil);\n    const blendDescr = parseBlend(blend);\n    return new Command(state, vert, frag, textures, uniforms, depthDescr, stencilDescr, blendDescr);\n}\nexport class Command {\n    constructor(state, vsSource, fsSource, textures, uniforms, depthDescr, stencilDescr, blendDescr) {\n        this.state = state;\n        this.vsSource = vsSource;\n        this.fsSource = fsSource;\n        this.textures = textures;\n        this.uniforms = uniforms;\n        this.depthTestDescr = depthDescr || null;\n        this.stencilTestDescr = stencilDescr || null;\n        this.blendDescr = blendDescr || null;\n        this.init();\n    }\n    /**\n     * Reinitialize invalid buffer, eg. after context is lost.\n     */\n    restore() {\n        const { state: { gl }, glProgram } = this;\n        if (!gl.isProgram(glProgram)) {\n            this.init();\n        }\n    }\n    /**\n     * Transforms names found in the attributes object to numbers representing\n     * actual attribute locations for the program in this command.\n     */\n    locate(attributes) {\n        const { state: { gl }, glProgram } = this;\n        return Object.entries(attributes)\n            .reduce((accum, [identifier, definition]) => {\n            if (INT_PATTERN.test(identifier)) {\n                accum[identifier] = definition;\n            }\n            else {\n                const location = gl.getAttribLocation(glProgram, identifier);\n                if (location === UNKNOWN_ATTRIB_LOCATION) {\n                    throw new Error(`No location for attrib: ${identifier}`);\n                }\n                accum[location] = definition;\n            }\n            return accum;\n        }, {});\n    }\n    init() {\n        const { state, state: { gl }, vsSource, fsSource, textures, uniforms, } = this;\n        // We would overwrite the currently bound program unless we checked\n        state.assertCommandUnbound();\n        const vs = createShader(gl, gl.VERTEX_SHADER, vsSource);\n        const fs = createShader(gl, gl.FRAGMENT_SHADER, fsSource);\n        const prog = createProgram(gl, vs, fs);\n        gl.deleteShader(vs);\n        gl.deleteShader(fs);\n        // Validation time! (only for nonproduction envs)\n        if (IS_DEBUG_BUILD) {\n            if (!prog) {\n                // ctx loss or not, we can panic all we want in nonprod env!\n                throw new Error(\"Program was not compiled, possible reason: context loss\");\n            }\n            validateUniformDeclarations(gl, prog, uniforms, textures);\n        }\n        gl.useProgram(prog);\n        // Texture declarations are evaluated in two phases:\n        // 1) Sampler location offsets are sent to the shader eagerly. This is\n        //    ok because even if the textures themselves can change (function\n        //    accessors), their offsets stay the same\n        // 2) Textures provided by the accessor are activated and bound to their\n        //    locations at draw time\n        // Note: Object.entries() provides values in a nondeterministic order,\n        // but we store the descriptors in an array, remembering the order.\n        const textureAccessors = [];\n        Object.entries(textures).forEach(([ident, t], i) => {\n            const loc = gl.getUniformLocation(prog, ident);\n            if (!loc) {\n                throw new Error(`No location for sampler: ${ident}`);\n            }\n            gl.uniform1i(loc, i);\n            textureAccessors.push(t);\n        });\n        // Some uniform declarations can be evaluated right away, so do it at\n        // init-time. Create a descriptor for the rest that is evaluated at\n        // render-time.\n        const uniformDescrs = [];\n        Object.entries(uniforms).forEach(([ident, u]) => {\n            const loc = gl.getUniformLocation(prog, ident);\n            if (!loc) {\n                throw new Error(`No location for uniform: ${ident}`);\n            }\n            if (typeof u.value !== \"function\") {\n                // Eagerly send everything we can process now to GPU\n                switch (u.type) {\n                    case \"1f\":\n                        gl.uniform1f(loc, u.value);\n                        break;\n                    case \"1fv\":\n                        gl.uniform1fv(loc, u.value);\n                        break;\n                    case \"1i\":\n                        gl.uniform1i(loc, u.value);\n                        break;\n                    case \"1iv\":\n                        gl.uniform1iv(loc, u.value);\n                        break;\n                    case \"1ui\":\n                        gl.uniform1ui(loc, u.value);\n                        break;\n                    case \"1uiv\":\n                        gl.uniform1uiv(loc, u.value);\n                        break;\n                    case \"2f\": {\n                        const [x, y] = u.value;\n                        gl.uniform2f(loc, x, y);\n                        break;\n                    }\n                    case \"2fv\":\n                        gl.uniform2fv(loc, u.value);\n                        break;\n                    case \"2i\": {\n                        const [x, y] = u.value;\n                        gl.uniform2i(loc, x, y);\n                        break;\n                    }\n                    case \"2iv\":\n                        gl.uniform2iv(loc, u.value);\n                        break;\n                    case \"2ui\": {\n                        const [x, y] = u.value;\n                        gl.uniform2ui(loc, x, y);\n                        break;\n                    }\n                    case \"2uiv\":\n                        gl.uniform2uiv(loc, u.value);\n                        break;\n                    case \"3f\": {\n                        const [x, y, z] = u.value;\n                        gl.uniform3f(loc, x, y, z);\n                        break;\n                    }\n                    case \"3fv\":\n                        gl.uniform3fv(loc, u.value);\n                        break;\n                    case \"3i\": {\n                        const [x, y, z] = u.value;\n                        gl.uniform3i(loc, x, y, z);\n                        break;\n                    }\n                    case \"3iv\":\n                        gl.uniform3iv(loc, u.value);\n                        break;\n                    case \"3ui\": {\n                        const [x, y, z] = u.value;\n                        gl.uniform3ui(loc, x, y, z);\n                        break;\n                    }\n                    case \"3uiv\":\n                        gl.uniform3uiv(loc, u.value);\n                        break;\n                    case \"4f\": {\n                        const [x, y, z, w] = u.value;\n                        gl.uniform4f(loc, x, y, z, w);\n                        break;\n                    }\n                    case \"4fv\":\n                        gl.uniform4fv(loc, u.value);\n                        break;\n                    case \"4i\": {\n                        const [x, y, z, w] = u.value;\n                        gl.uniform4i(loc, x, y, z, w);\n                        break;\n                    }\n                    case \"4iv\":\n                        gl.uniform4iv(loc, u.value);\n                        break;\n                    case \"4ui\": {\n                        const [x, y, z, w] = u.value;\n                        gl.uniform4ui(loc, x, y, z, w);\n                        break;\n                    }\n                    case \"4uiv\":\n                        gl.uniform4uiv(loc, u.value);\n                        break;\n                    case \"matrix2fv\":\n                        gl.uniformMatrix2fv(loc, false, u.value);\n                        break;\n                    case \"matrix3fv\":\n                        gl.uniformMatrix3fv(loc, false, u.value);\n                        break;\n                    case \"matrix4fv\":\n                        gl.uniformMatrix4fv(loc, false, u.value);\n                        break;\n                    default: assert.unreachable(u);\n                }\n            }\n            else {\n                // Store a descriptor for lazy values for later use\n                uniformDescrs.push(new UniformDescriptor(ident, loc, u));\n            }\n        });\n        gl.useProgram(null);\n        this.glProgram = prog;\n        this.textureAccessors = textureAccessors;\n        this.uniformDescrs = uniformDescrs;\n    }\n}\nexport class UniformDescriptor {\n    constructor(identifier, location, definition) {\n        this.identifier = identifier;\n        this.location = location;\n        this.definition = definition;\n    }\n}\nfunction createProgram(gl, vertex, fragment) {\n    const program = gl.createProgram();\n    if (!program) {\n        throw new Error(\"Could not create WebGL program\");\n    }\n    gl.attachShader(program, vertex);\n    gl.attachShader(program, fragment);\n    gl.linkProgram(program);\n    const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (gl.isContextLost() || linked) {\n        return program;\n    }\n    const msg = gl.getProgramInfoLog(program);\n    gl.deleteProgram(program);\n    throw new Error(`Could not link shader program: ${msg}`);\n}\nfunction createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    if (!shader) {\n        throw new Error(\"Could not create WebGL shader\");\n    }\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (gl.isContextLost() || compiled) {\n        return shader;\n    }\n    const msg = gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    const prettySource = source\n        .split(\"\\n\")\n        .map((l, i) => `${i + 1}: ${l}`)\n        .join(\"\\n\");\n    throw new Error(`Could not compile shader:\\n${msg}\\n${prettySource}`);\n}\n/**\n * Check whether the uniforms declared in shaders and command strictly match.\n * There may be no missing or redundant uniforms on either side and types of\n * provided uniforms must match exactly\n */\nfunction validateUniformDeclarations(gl, prog, uniforms, textures) {\n    const nUniforms = gl.getProgramParameter(prog, gl.ACTIVE_UNIFORMS);\n    const progUniforms = new Map();\n    // Note: gl.getUniformLocation accepts a shorthand for uniform names of\n    // basic type arrays (trailing \"[0]\" can be omitted). Because\n    // gl.getActiveUniforms always gives us the full name, we need to widen\n    // our mathing to accept the shorthands and pair them with the introspected\n    // WebGLActiveInfos\n    // https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getUniformLocation\n    const shorthands = new Map();\n    for (let i = 0; i < nUniforms; ++i) {\n        const info = gl.getActiveUniform(prog, i);\n        progUniforms.set(info.name, info);\n        if (info.name.endsWith(\"[0]\")) {\n            const shorthand = info.name.substring(0, info.name.length - 3);\n            shorthands.set(shorthand, info.name);\n        }\n    }\n    // The \"list\" of uniforms left to check from the program's perspective\n    const toCheck = new Set(progUniforms.keys());\n    Object.entries(uniforms).map(([name, tyObj]) => {\n        const type = tyObj.type;\n        // TODO: should we assert array uniforms if we discover it in their names?\n        const shorthand = shorthands.has(name) && shorthands.get(name);\n        const progUniform = progUniforms.has(name)\n            ? progUniforms.get(name)\n            : shorthand && progUniforms.has(shorthand)\n                ? progUniforms.get(shorthands.get(name))\n                : null;\n        if (progUniform) {\n            validateUniformDeclaration(gl, progUniform, type);\n        }\n        else {\n            throw new Error(`Redundant uniform [name = ${name}, type = ${type}]`);\n        }\n        if (shorthand) {\n            toCheck.delete(shorthand);\n        }\n        else {\n            toCheck.delete(name);\n        }\n    });\n    Object.keys(textures).map((name) => {\n        if (progUniforms.has(name)) {\n            const progUniform = progUniforms.get(name);\n            validateUniformDeclaration(gl, progUniform, \"1i\");\n        }\n        else {\n            throw new Error(`Redundant texture [name = ${name}]`);\n        }\n        toCheck.delete(name);\n    });\n    if (toCheck.size) {\n        const names = [...toCheck].join(\", \");\n        throw new Error(`Missing uniforms: ${names}`);\n    }\n}\nfunction validateUniformDeclaration(gl, info, type) {\n    switch (type) {\n        case \"1f\":\n            assert.equal(info.type, gl.FLOAT, fmtTyMismatch(info.name));\n            assert.equal(info.size, 1);\n            break;\n        case \"1fv\":\n            assert.equal(info.type, gl.FLOAT, fmtTyMismatch(info.name));\n            break;\n        case \"1i\":\n            assert.oneOf(info.type, [\n                gl.INT,\n                gl.SAMPLER_2D,\n            ], fmtTyMismatch(info.name));\n            assert.equal(info.size, 1);\n            break;\n        case \"1iv\":\n            assert.equal(info.type, gl.INT, fmtTyMismatch(info.name));\n            break;\n        case \"1ui\":\n            assert.equal(info.type, gl.UNSIGNED_INT, fmtTyMismatch(info.name));\n            assert.equal(info.size, 1);\n            break;\n        case \"1uiv\":\n            assert.equal(info.type, gl.UNSIGNED_INT, fmtTyMismatch(info.name));\n            break;\n        case \"2f\":\n            assert.equal(info.type, gl.FLOAT_VEC2, fmtTyMismatch(info.name));\n            assert.equal(info.size, 1);\n            break;\n        case \"2fv\":\n            assert.equal(info.type, gl.FLOAT_VEC2, fmtTyMismatch(info.name));\n            break;\n        case \"2i\":\n            assert.equal(info.type, gl.INT_VEC2, fmtTyMismatch(info.name));\n            assert.equal(info.size, 1);\n            break;\n        case \"2iv\":\n            assert.equal(info.type, gl.INT_VEC2, fmtTyMismatch(info.name));\n            break;\n        case \"2ui\":\n            assert.equal(info.type, gl.UNSIGNED_INT_VEC2, fmtTyMismatch(info.name));\n            assert.equal(info.size, 1);\n            break;\n        case \"2uiv\":\n            assert.equal(info.type, gl.UNSIGNED_INT_VEC2, fmtTyMismatch(info.name));\n            break;\n        case \"3f\":\n            assert.equal(info.type, gl.FLOAT_VEC3, fmtTyMismatch(info.name));\n            assert.equal(info.size, 1);\n            break;\n        case \"3fv\":\n            assert.equal(info.type, gl.FLOAT_VEC3, fmtTyMismatch(info.name));\n            break;\n        case \"3i\":\n            assert.equal(info.type, gl.INT_VEC3, fmtTyMismatch(info.name));\n            assert.equal(info.size, 1);\n            break;\n        case \"3iv\":\n            assert.equal(info.type, gl.INT_VEC3, fmtTyMismatch(info.name));\n            break;\n        case \"3ui\":\n            assert.equal(info.type, gl.UNSIGNED_INT_VEC3, fmtTyMismatch(info.name));\n            assert.equal(info.size, 1);\n            break;\n        case \"3uiv\":\n            assert.equal(info.type, gl.UNSIGNED_INT_VEC3, fmtTyMismatch(info.name));\n            break;\n        case \"4f\":\n            assert.equal(info.type, gl.FLOAT_VEC4, fmtTyMismatch(info.name));\n            assert.equal(info.size, 1);\n            break;\n        case \"4fv\":\n            assert.equal(info.type, gl.FLOAT_VEC4, fmtTyMismatch(info.name));\n            break;\n        case \"4i\":\n            assert.equal(info.type, gl.INT_VEC4, fmtTyMismatch(info.name));\n            assert.equal(info.size, 1);\n            break;\n        case \"4iv\":\n            assert.equal(info.type, gl.INT_VEC4, fmtTyMismatch(info.name));\n            break;\n        case \"4ui\":\n            assert.equal(info.type, gl.UNSIGNED_INT_VEC4, fmtTyMismatch(info.name));\n            assert.equal(info.size, 1);\n            break;\n        case \"4uiv\":\n            assert.equal(info.type, gl.UNSIGNED_INT_VEC4, fmtTyMismatch(info.name));\n            break;\n        case \"matrix2fv\":\n            assert.equal(info.type, gl.FLOAT_MAT2, fmtTyMismatch(info.name));\n            assert.equal(info.size, 1);\n            break;\n        case \"matrix3fv\":\n            assert.equal(info.type, gl.FLOAT_MAT3, fmtTyMismatch(info.name));\n            assert.equal(info.size, 1);\n            break;\n        case \"matrix4fv\":\n            assert.equal(info.type, gl.FLOAT_MAT4, fmtTyMismatch(info.name));\n            assert.equal(info.size, 1);\n            break;\n        default: assert.unreachable(type);\n    }\n}\nfunction parseDepth(depth) {\n    if (!depth) {\n        return undefined;\n    }\n    // TODO: DCE did not kick in here without help\n    if (IS_DEBUG_BUILD) {\n        assert.nonNull(depth.func, fmtParamNonNull(\"depth.func\"));\n    }\n    return new DepthTestDescriptor(depth.func || 513 /* LESS */, typeof depth.mask === \"boolean\" ? depth.mask : true, depth.range ? depth.range[0] : 0, depth.range ? depth.range[1] : 1);\n}\nfunction parseStencil(stencil) {\n    if (!stencil) {\n        return undefined;\n    }\n    // TODO: DCE did not kick in here without help\n    if (IS_DEBUG_BUILD) {\n        assert.nonNull(stencil.func, fmtParamNonNull(\"stencil.func\"));\n    }\n    // TODO: complete stencil validation\n    return new StencilTestDescriptor(typeof stencil.func.func === \"object\"\n        ? stencil.func.func.front\n        : stencil.func.func, typeof stencil.func.func === \"object\"\n        ? stencil.func.func.back\n        : stencil.func.func, typeof stencil.func.ref !== \"undefined\"\n        ? typeof stencil.func.ref === \"object\"\n            ? stencil.func.ref.front\n            : stencil.func.ref\n        : 1, typeof stencil.func.ref !== \"undefined\"\n        ? typeof stencil.func.ref === \"object\"\n            ? stencil.func.ref.back\n            : stencil.func.ref\n        : 1, typeof stencil.func.mask !== \"undefined\"\n        ? typeof stencil.func.mask === \"object\"\n            ? stencil.func.mask.front\n            : stencil.func.mask\n        : 0xFF, typeof stencil.func.mask !== \"undefined\"\n        ? typeof stencil.func.mask === \"object\"\n            ? stencil.func.mask.back\n            : stencil.func.mask\n        : 0xFF, typeof stencil.mask !== \"undefined\"\n        ? typeof stencil.mask === \"object\"\n            ? stencil.mask.front\n            : stencil.mask\n        : 0xFF, typeof stencil.mask !== \"undefined\"\n        ? typeof stencil.mask === \"object\"\n            ? stencil.mask.back\n            : stencil.mask\n        : 0xFF, stencil.op\n        ? typeof stencil.op.fail === \"object\"\n            ? stencil.op.fail.front\n            : stencil.op.fail\n        : 7680 /* KEEP */, stencil.op\n        ? typeof stencil.op.fail === \"object\"\n            ? stencil.op.fail.back\n            : stencil.op.fail\n        : 7680 /* KEEP */, stencil.op\n        ? typeof stencil.op.zfail === \"object\"\n            ? stencil.op.zfail.front\n            : stencil.op.zfail\n        : 7680 /* KEEP */, stencil.op\n        ? typeof stencil.op.zfail === \"object\"\n            ? stencil.op.zfail.back\n            : stencil.op.zfail\n        : 7680 /* KEEP */, stencil.op\n        ? typeof stencil.op.zpass === \"object\"\n            ? stencil.op.zpass.front\n            : stencil.op.zpass\n        : 7680 /* KEEP */, stencil.op\n        ? typeof stencil.op.zpass === \"object\"\n            ? stencil.op.zpass.back\n            : stencil.op.zpass\n        : 7680 /* KEEP */);\n}\nfunction parseBlend(blend) {\n    if (!blend) {\n        return undefined;\n    }\n    // TODO: DCE did not kick in here without help\n    if (IS_DEBUG_BUILD) {\n        assert.nonNull(blend.func, fmtParamNonNull(\"blend.func\"));\n        assert.nonNull(blend.func.src, fmtParamNonNull(\"blend.func.src\"));\n        assert.nonNull(blend.func.dst, fmtParamNonNull(\"blend.func.dst\"));\n        if (typeof blend.func.src === \"object\") {\n            assert.nonNull(blend.func.src.rgb, fmtParamNonNull(\"blend.func.src.rgb\"));\n            assert.nonNull(blend.func.src.alpha, fmtParamNonNull(\"blend.func.src.alpha\"));\n        }\n        if (typeof blend.func.dst === \"object\") {\n            assert.nonNull(blend.func.dst.rgb, fmtParamNonNull(\"blend.func.dst.rgb\"));\n            assert.nonNull(blend.func.dst.alpha, fmtParamNonNull(\"blend.func.dst.alpha\"));\n        }\n    }\n    return new BlendDescriptor(typeof blend.func.src === \"object\"\n        ? blend.func.src.rgb\n        : blend.func.src, typeof blend.func.src === \"object\"\n        ? blend.func.src.alpha\n        : blend.func.src, typeof blend.func.dst === \"object\"\n        ? blend.func.dst.rgb\n        : blend.func.dst, typeof blend.func.dst === \"object\"\n        ? blend.func.dst.alpha\n        : blend.func.dst, blend.equation\n        ? typeof blend.equation === \"object\"\n            ? blend.equation.rgb\n            : blend.equation\n        : 32774 /* FUNC_ADD */, blend.equation\n        ? typeof blend.equation === \"object\"\n            ? blend.equation.alpha\n            : blend.equation\n        : 32774 /* FUNC_ADD */, blend.color);\n}\nfunction fmtParamNonNull(name) {\n    return () => `Missing parameter ${name}`;\n}\nfunction fmtTyMismatch(name) {\n    return () => `Type mismatch for uniform field ${name}`;\n}\n//# sourceMappingURL=command.js.map","import * as assert from \"./util/assert\";\nexport function _createVertexBuffer(gl, type, size, { usage = 35048 /* DYNAMIC_DRAW */ } = {}) {\n    return new VertexBuffer(gl, type, size, size * sizeOf(type), usage);\n}\nexport function _createVertexBufferWithTypedArray(gl, type, data, { usage = 35044 /* STATIC_DRAW */ } = {}) {\n    return new VertexBuffer(gl, type, data.length, data.byteLength, usage).store(data);\n}\n/**\n * Vertex buffers contain GPU accessible data. Accessing them is usually done\n * via setting up an attribute that reads the buffer.\n */\nexport class VertexBuffer {\n    constructor(gl, type, length, byteLength, usage) {\n        this.gl = gl;\n        this.type = type;\n        this.length = length;\n        this.byteLength = byteLength;\n        this.usage = usage;\n        this.glBuffer = null;\n        this.init();\n    }\n    /**\n     * Reinitialize invalid buffer, eg. after context is lost.\n     */\n    restore() {\n        const { gl, glBuffer } = this;\n        if (!gl.isBuffer(glBuffer)) {\n            this.init();\n        }\n    }\n    /**\n     * Upload new data to buffer. Does not take ownership of data.\n     */\n    store(data, { offset = 0 } = {}) {\n        const { gl, glBuffer } = this;\n        // WebGL bug causes Uint8ClampedArray to be read incorrectly\n        // https://github.com/KhronosGroup/WebGL/issues/1533\n        const buffer = data instanceof Uint8ClampedArray\n            // Both buffers are u8 -> do not copy, just change lens\n            ? new Uint8Array(data.buffer)\n            // Other buffer types are fine\n            : data;\n        const byteOffset = buffer.BYTES_PER_ELEMENT * offset;\n        gl.bindBuffer(gl.ARRAY_BUFFER, glBuffer);\n        gl.bufferSubData(gl.ARRAY_BUFFER, byteOffset, buffer);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        return this;\n    }\n    init() {\n        const { usage, byteLength, gl } = this;\n        const buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, byteLength, usage);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        this.glBuffer = buffer;\n    }\n}\nexport function sizeOf(type) {\n    switch (type) {\n        case 5120 /* BYTE */:\n        case 5121 /* UNSIGNED_BYTE */:\n            return 1;\n        case 5122 /* SHORT */:\n        case 5123 /* UNSIGNED_SHORT */:\n            return 2;\n        case 5124 /* INT */:\n        case 5125 /* UNSIGNED_INT */:\n        case 5126 /* FLOAT */:\n            return 4;\n        default: return assert.unreachable(type);\n    }\n}\n//# sourceMappingURL=vertex-buffer.js.map","import * as assert from \"./assert\";\nimport { IS_DEBUG_BUILD } from \"./env\";\n/**\n * Checks whether array has at least two dimensions.\n * Asserts array is not jagged. Only checks first two dimensions.\n * Returns false if array is degenerate (either dimension is 0), as 0d array\n * is not 2d array.\n */\nexport function is2(array) {\n    if (!array.length) {\n        return false;\n    }\n    const length2 = Array.isArray(array[0]) ? array[0].length : -1;\n    if (IS_DEBUG_BUILD) {\n        array.forEach((sub) => {\n            if (length2 !== -1) {\n                if (assert.isArray(sub)) {\n                    assert.equal(sub.length, length2);\n                }\n            }\n            else {\n                assert.isFalse(Array.isArray(sub));\n            }\n        });\n    }\n    // if length2 === 0, array is degenerate\n    // if length2 === -1, array is 1d\n    return length2 > 0;\n}\n/**\n * Returns first two dimensions of array. Assumes nonjagged array and does no\n * checks to prove so. Accepts degenerate arrays.\n */\nexport function shape2(array) {\n    const outer = array.length;\n    const inner = outer ? array[0].length : 0;\n    return [outer, inner];\n}\n/**\n * Take an unraveled 2d array and a shape. Returns new flat array with all\n * elements from the original unraveled array. Assumes unraveled array is not\n * jagged and shape matches the unraveled dimensions and makes no checks to\n * prove so. Accepts degenerate arrays if shape matches them.\n */\nexport function ravel2(unraveled, shape) {\n    const [outer, inner] = shape;\n    const raveled = new Array(inner * outer);\n    unraveled.forEach((arr, i) => {\n        arr.forEach((elem, j) => {\n            raveled[inner * i + j] = elem;\n        });\n    });\n    return raveled;\n}\n//# sourceMappingURL=array.js.map","import * as assert from \"./util/assert\";\nimport * as array from \"./util/array\";\nexport function _createElementBuffer(gl, type, primitive, size, { usage = 35048 /* DYNAMIC_DRAW */ } = {}) {\n    return new ElementBuffer(gl, type, primitive, size, size * sizeOf(type), usage);\n}\nexport function _createElementBufferWithArray(gl, data, options) {\n    if (array.is2(data)) {\n        const shape = array.shape2(data);\n        assert.rangeInclusive(shape[1], 2, 3, (p) => {\n            return `Elements must be 2-tuples or 3-tuples, got ${p}-tuple`;\n        });\n        const ravel = array.ravel2(data, shape);\n        const primitive = shape[1] === 3\n            ? 4 /* TRIANGLE_LIST */\n            : 1 /* LINE_LIST */;\n        return _createElementBufferWithTypedArray(gl, 5125 /* UNSIGNED_INT */, primitive, new Uint32Array(ravel), options);\n    }\n    return _createElementBufferWithTypedArray(gl, 5125 /* UNSIGNED_INT */, 0 /* POINT_LIST */, new Uint32Array(data), options);\n}\nexport function _createElementBufferWithTypedArray(gl, type, primitive, data, { usage = 35044 /* STATIC_DRAW */ } = {}) {\n    return new ElementBuffer(gl, type, primitive, data.length, data.length * sizeOf(type), usage).store(data);\n}\n/**\n * Element buffers contain indices for accessing vertex buffer data.\n */\nexport class ElementBuffer {\n    constructor(gl, type, primitive, length, byteLength, usage) {\n        this.gl = gl;\n        this.type = type;\n        this.primitive = primitive;\n        this.length = length;\n        this.byteLength = byteLength;\n        this.usage = usage;\n        this.glBuffer = null;\n        this.init();\n    }\n    /**\n     * Reinitialize invalid buffer, eg. after context is lost.\n     */\n    restore() {\n        const { gl, glBuffer } = this;\n        if (!gl.isBuffer(glBuffer)) {\n            this.init();\n        }\n    }\n    /**\n     * Upload new data to buffer. Does not take ownership of data.\n     */\n    store(data, { offset = 0 } = {}) {\n        const { gl, glBuffer } = this;\n        // WebGL bug causes Uint8ClampedArray to be read incorrectly\n        // https://github.com/KhronosGroup/WebGL/issues/1533\n        const buffer = data instanceof Uint8ClampedArray\n            // Both buffers are u8 -> do not copy, just change lens\n            ? new Uint8Array(data.buffer)\n            // Other buffer types are fine\n            : data;\n        const byteOffset = buffer.BYTES_PER_ELEMENT * offset;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, glBuffer);\n        gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, byteOffset, buffer);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        return this;\n    }\n    init() {\n        const { usage, byteLength, gl } = this;\n        const buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, byteLength, usage);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        this.glBuffer = buffer;\n    }\n}\nexport function sizeOf(type) {\n    switch (type) {\n        case 5121 /* UNSIGNED_BYTE */:\n            return 1;\n        case 5123 /* UNSIGNED_SHORT */:\n            return 2;\n        case 5125 /* UNSIGNED_INT */:\n            return 4;\n        default: return assert.unreachable(type);\n    }\n}\n//# sourceMappingURL=element-buffer.js.map","import * as assert from \"./util/assert\";\nimport * as array from \"./util/array\";\nimport { _createVertexBufferWithTypedArray, } from \"./vertex-buffer\";\nimport { ElementBuffer, _createElementBufferWithArray, } from \"./element-buffer\";\nconst INT_PATTERN = /^0|[1-9]\\d*$/;\nexport function _createAttributes(state, elements, attributes, { countLimit } = {}) {\n    if (typeof countLimit === \"number\") {\n        assert.gt(countLimit, 0, (p) => {\n            return `Count limit must be greater than 0, got: ${p}`;\n        });\n    }\n    const attrs = Object.entries(attributes)\n        .map(([locationStr, definition]) => {\n        if (!INT_PATTERN.test(locationStr)) {\n            throw new Error(\"Location not a number. Use Command#locate\");\n        }\n        const location = parseInt(locationStr, 10);\n        if (Array.isArray(definition)) {\n            if (array.is2(definition)) {\n                const s = array.shape2(definition);\n                const r = array.ravel2(definition, s);\n                return new AttributeDescriptor(location, \"pointer\" /* POINTER */, _createVertexBufferWithTypedArray(state.gl, 5126 /* FLOAT */, new Float32Array(r)), s[0], s[1], false, 0);\n            }\n            return new AttributeDescriptor(location, \"pointer\" /* POINTER */, _createVertexBufferWithTypedArray(state.gl, 5126 /* FLOAT */, new Float32Array(definition)), definition.length, 1, false, 0);\n        }\n        return new AttributeDescriptor(location, definition.type, definition.buffer, definition.count, definition.size, definition.type === \"pointer\" /* POINTER */\n            ? (definition.normalized || false)\n            : false, definition.divisor || 0);\n    });\n    let primitive;\n    let elementBuffer;\n    if (typeof elements === \"number\") {\n        primitive = elements;\n    }\n    else {\n        elementBuffer = elements instanceof ElementBuffer\n            ? elements\n            : _createElementBufferWithArray(state.gl, elements);\n        primitive = elementBuffer.primitive;\n    }\n    const inferredCount = elementBuffer\n        ? elementBuffer.length\n        : attrs.length\n            ? attrs\n                .map((attr) => attr.count)\n                .reduce((min, curr) => Math.min(min, curr))\n            : 0;\n    const count = typeof countLimit === \"number\"\n        ? Math.min(countLimit, inferredCount)\n        : inferredCount;\n    const instAttrs = attrs.filter((attr) => !!attr.divisor);\n    const instanceCount = instAttrs.length\n        ? instAttrs\n            .map((attr) => attr.count * attr.divisor)\n            .reduce((min, curr) => Math.min(min, curr))\n        : 0;\n    return new Attributes(state, primitive, attrs, count, instanceCount, elementBuffer);\n}\n/**\n * Attributes store vertex buffers, an element buffer, and attributes with the\n * vertex format for provided vertex buffers.\n */\nexport class Attributes {\n    constructor(state, primitive, attributes, count, instanceCount, elements) {\n        this.state = state;\n        this.primitive = primitive;\n        this.elementBuffer = elements;\n        this.attributes = attributes;\n        this.count = count;\n        this.elementCount = elements ? elements.length : 0;\n        this.instanceCount = instanceCount;\n        this.glVertexArray = null;\n        this.init();\n    }\n    get indexed() {\n        return !!this.elementBuffer;\n    }\n    get indexType() {\n        return this.elementBuffer && this.elementBuffer.type;\n    }\n    /**\n     * Reinitialize invalid vertex array, eg. after context is lost. Also tries\n     * to reinitialize vertex buffer and element buffer dependencies.\n     */\n    restore() {\n        const { state: { gl }, glVertexArray, attributes, elementBuffer } = this;\n        if (elementBuffer) {\n            elementBuffer.restore();\n        }\n        attributes.forEach((attr) => attr.buffer.restore());\n        // If we have no attributes nor elements, there is no need to restore\n        // any GPU state\n        if (this.hasAttribs() && !gl.isVertexArray(glVertexArray)) {\n            this.init();\n        }\n    }\n    init() {\n        // Do not create the gl vao if there are no buffers to bind\n        if (!this.hasAttribs()) {\n            return;\n        }\n        const { state: { gl }, attributes, elementBuffer } = this;\n        const vao = gl.createVertexArray();\n        gl.bindVertexArray(vao);\n        attributes.forEach(({ location, type, buffer: { glBuffer, type: glBufferType }, size, normalized = false, divisor, }) => {\n            // Enable sending attribute arrays for location\n            gl.enableVertexAttribArray(location);\n            // Send buffer\n            gl.bindBuffer(gl.ARRAY_BUFFER, glBuffer);\n            switch (type) {\n                case \"pointer\" /* POINTER */:\n                    gl.vertexAttribPointer(location, size, glBufferType, normalized, 0, 0);\n                    break;\n                case \"ipointer\" /* IPOINTER */:\n                    gl.vertexAttribIPointer(location, size, glBufferType, 0, 0);\n                    break;\n                default: assert.unreachable(type);\n            }\n            if (divisor) {\n                gl.vertexAttribDivisor(location, divisor);\n            }\n        });\n        if (elementBuffer) {\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer.glBuffer);\n        }\n        gl.bindVertexArray(null);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        if (elementBuffer) {\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        }\n        this.glVertexArray = vao;\n    }\n    hasAttribs() {\n        // IF we have either attributes or elements, this geometry can not\n        // longer be considered empty.\n        return !!this.elementBuffer || !!this.attributes.length;\n    }\n}\nclass AttributeDescriptor {\n    constructor(location, type, buffer, count, size, normalized, divisor) {\n        this.location = location;\n        this.type = type;\n        this.buffer = buffer;\n        this.count = count;\n        this.size = size;\n        this.normalized = normalized;\n        this.divisor = divisor;\n    }\n}\n//# sourceMappingURL=attributes.js.map","export function _createTexture(gl, width, height, storageFormat, { min = 9728 /* NEAREST */, mag = 9728 /* NEAREST */, wrapS = 33071 /* CLAMP_TO_EDGE */, wrapT = 33071 /* CLAMP_TO_EDGE */, } = {}) {\n    return new Texture(gl, width, height, storageFormat, wrapS, wrapT, min, mag);\n}\nexport function _createTextureWithTypedArray(gl, width, height, storageFormat, data, dataFormat, dataType, options = {}) {\n    const { min = 9728 /* NEAREST */, mag = 9728 /* NEAREST */, wrapS = 33071 /* CLAMP_TO_EDGE */, wrapT = 33071 /* CLAMP_TO_EDGE */, } = options;\n    return new Texture(gl, width, height, storageFormat, wrapS, wrapT, min, mag).store(data, dataFormat, dataType, options);\n}\n/**\n * Textures are images of 2D data, where each texel can contain multiple\n * information channels of a certain type.\n */\nexport class Texture {\n    constructor(gl, width, height, storageFormat, wrapS, wrapT, minFilter, magFilter) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.storageFormat = storageFormat;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.glTexture = null;\n        this.init();\n    }\n    /**\n     * Reinitialize invalid texture, eg. after context is lost.\n     */\n    restore() {\n        const { gl, glTexture } = this;\n        if (!gl.isTexture(glTexture)) {\n            this.init();\n        }\n    }\n    /**\n     * Upload new data to texture. Does not take ownership of data.\n     */\n    store(data, format, type, { xOffset = 0, yOffset = 0, width = this.width, height = this.height, mipmap = false, } = {}) {\n        const { gl, glTexture } = this;\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        // This pixel row alignment is theoretically smaller than needed\n        // TODO: find greatest correct unpack alignment for pixel rows\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, data.BYTES_PER_ELEMENT);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, // level\n        xOffset, yOffset, width, height, format, type, \n        // WebGL bug causes Uint8ClampedArray to be read incorrectly\n        // https://github.com/KhronosGroup/WebGL/issues/1533\n        data instanceof Uint8ClampedArray\n            // Both buffers are u8 -> do not copy, just change lens\n            ? new Uint8Array(data.buffer)\n            // Other buffer types are fine\n            : data);\n        if (mipmap) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        return this;\n    }\n    /**\n     * Generate mipmap levels for the current data.\n     */\n    mipmap() {\n        const { gl, glTexture } = this;\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.generateMipmap(gl.TEXTURE_2D);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n    init() {\n        const { gl, width, height, storageFormat, wrapS, wrapT, minFilter, magFilter, } = this;\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, storageFormat, width, height);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        this.glTexture = texture;\n    }\n}\n//# sourceMappingURL=texture.js.map","import * as assert from \"./util/assert\";\nimport { IS_DEBUG_BUILD } from \"./util/env\";\nimport { Target } from \"./target\";\nexport function _createFramebuffer(state, width, height, color, depthStencil) {\n    const colors = Array.isArray(color) ? color : [color];\n    if (IS_DEBUG_BUILD) {\n        assert.nonEmpty(colors, () => {\n            return \"Framebuffer color attachments must not be empty\";\n        });\n        colors.forEach((buffer) => {\n            assert.equal(width, buffer.width, (got, expected) => {\n                return `Expected attachment width ${expected}, got ${got}`;\n            });\n            assert.equal(height, buffer.height, (got, expected) => {\n                return `Expected attachment height ${expected}, got ${got}`;\n            });\n        });\n        if (depthStencil) {\n            assert.equal(width, depthStencil.width, (got, expected) => {\n                return `Expected attachment width ${expected}, got ${got}`;\n            });\n            assert.equal(height, depthStencil.height, (got, expected) => {\n                return `Expected attachment height ${expected}, got ${got}`;\n            });\n        }\n    }\n    return new Framebuffer(state, width, height, colors, depthStencil);\n}\n/**\n * Framebuffers store the list of attachments to write to during a draw\n * operation. They can be a draw target via `framebuffer.target()`\n */\nexport class Framebuffer {\n    constructor(state, width, height, colors, depthStencil) {\n        this.state = state;\n        this.width = width;\n        this.height = height;\n        this.colors = colors;\n        this.depthStencil = depthStencil;\n        this.glColorAttachments = colors\n            .map((_, i) => state.gl.COLOR_ATTACHMENT0 + i);\n        this.glFramebuffer = null;\n        this.framebufferTarget = null;\n        this.init();\n    }\n    /**\n     * Reinitialize invalid framebuffer, eg. after context is lost.\n     */\n    restore() {\n        const { state: { gl }, glFramebuffer, colors, depthStencil, } = this;\n        colors.forEach((buffer) => buffer.restore());\n        if (depthStencil) {\n            depthStencil.restore();\n        }\n        if (!gl.isFramebuffer(glFramebuffer)) {\n            this.init();\n        }\n    }\n    /**\n     * Request a render target from this framebuffer to draw into. The target\n     * will contain all attached color buffers.\n     *\n     * Drawing should be done within the callback by\n     * calling `ratget.clear()` or `target.draw()` family of methods.\n     *\n     * Also see `device.target()`.\n     */\n    target(cb) {\n        if (this.framebufferTarget) {\n            this.framebufferTarget.with(cb);\n        }\n    }\n    init() {\n        const { width, height, state, state: { gl }, glColorAttachments, colors, depthStencil, } = this;\n        // This would overwrite a the currently bound `Target`s FBO\n        state.assertTargetUnbound();\n        const fbo = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, fbo);\n        colors.forEach((buffer, i) => {\n            gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, buffer.glTexture, 0);\n        });\n        if (depthStencil) {\n            switch (depthStencil.storageFormat) {\n                case 35056 /* DEPTH24_STENCIL8 */:\n                case 36013 /* DEPTH32F_STENCIL8 */:\n                    gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.TEXTURE_2D, depthStencil.glTexture, 0);\n                    break;\n                case 33189 /* DEPTH_COMPONENT16 */:\n                case 33190 /* DEPTH_COMPONENT24 */:\n                case 36012 /* DEPTH_COMPONENT32F */:\n                    gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthStencil.glTexture, 0);\n                    break;\n                default: assert.unreachable(depthStencil, (p) => {\n                    return `Unsupported attachment: ${p}`;\n                });\n            }\n        }\n        const status = gl.checkFramebufferStatus(gl.DRAW_FRAMEBUFFER);\n        gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n        if (status !== gl.FRAMEBUFFER_COMPLETE) {\n            gl.deleteFramebuffer(fbo);\n            switch (status) {\n                case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n                    throw new Error(\"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\");\n                case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n                    throw new Error(\"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\");\n                case gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:\n                    throw new Error(\"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE\");\n                case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n                    throw new Error(\"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\");\n                case gl.FRAMEBUFFER_UNSUPPORTED:\n                    throw new Error(\"FRAMEBUFFER_UNSUPPORTED\");\n                default: throw new Error(\"Framebuffer incomplete\");\n            }\n        }\n        this.glFramebuffer = fbo;\n        if (fbo) {\n            this.framebufferTarget = new Target(state, glColorAttachments, fbo, width, height);\n        }\n    }\n}\n//# sourceMappingURL=framebuffer.js.map","import { State } from \"./state\";\nimport { Target } from \"./target\";\nimport { _createCommand, } from \"./command\";\nimport { _createVertexBuffer, _createVertexBufferWithTypedArray, } from \"./vertex-buffer\";\nimport { _createElementBuffer, _createElementBufferWithArray, _createElementBufferWithTypedArray, } from \"./element-buffer\";\nimport { Attributes, _createAttributes, } from \"./attributes\";\nimport { _createTexture, _createTextureWithTypedArray, } from \"./texture\";\nimport { _createFramebuffer } from \"./framebuffer\";\nexport class Device {\n    /**\n     * Create a new canvas and device (containing a gl context). Mount it on\n     * `element` parameter (default is `document.body`).\n     */\n    static create(options = {}) {\n        const { element = document.body } = options;\n        if (element instanceof HTMLCanvasElement) {\n            return Device.createWithCanvas(element, options);\n        }\n        const canvas = document.createElement(\"canvas\");\n        element.appendChild(canvas);\n        return Device.createWithCanvas(canvas, options);\n    }\n    /**\n     * Create a new device from existing canvas. Does not take ownership of\n     * canvas.\n     */\n    static createWithCanvas(canvas, options = {}) {\n        const { alpha = true, antialias = true, depth = true, stencil = true, preserveDrawingBuffer = false, } = options;\n        const gl = canvas.getContext(\"webgl2\", {\n            alpha,\n            antialias,\n            depth,\n            stencil,\n            preserveDrawingBuffer,\n        });\n        if (!gl) {\n            throw new Error(\"Could not get webgl2 context\");\n        }\n        return Device.createWithContext(gl, options);\n    }\n    /**\n     * Create a new device from existing gl context. Does not take ownership of\n     * context, but concurrent usage of it voids the warranty. Only use\n     * concurrently when absolutely necessary.\n     */\n    static createWithContext(gl, { pixelRatio, viewportWidth, viewportHeight, extensions, debug, } = {}) {\n        if (extensions) {\n            extensions.forEach((ext) => {\n                // We currently do not have extensions with callable API\n                if (!gl.getExtension(ext)) {\n                    throw new Error(`Could not get extension ${ext}`);\n                }\n            });\n        }\n        if (debug) {\n            const wrapper = {};\n            for (const key in gl) {\n                if (typeof gl[key] === \"function\") {\n                    wrapper[key] = createDebugFunc(gl, key);\n                }\n                else {\n                    wrapper[key] = gl[key];\n                }\n            }\n            gl = wrapper;\n        }\n        return new Device(gl, pixelRatio, viewportWidth, viewportHeight);\n    }\n    constructor(gl, explicitPixelRatio, explicitViewportWidth, explicitViewportHeight) {\n        this._gl = gl;\n        this._canvas = gl.canvas;\n        this.explicitPixelRatio = explicitPixelRatio;\n        this.explicitViewportWidth = explicitViewportWidth;\n        this.explicitViewportHeight = explicitViewportHeight;\n        this.update();\n        this.state = new State(gl);\n        this.backbufferTarget = new Target(this.state, [gl.BACK], null, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        // Enable scissor test globally. Practically everywhere you would want\n        // it disbled you can pass explicit scissor box instead. The impact on\n        // perf is negligent\n        gl.enable(gl.SCISSOR_TEST);\n    }\n    /**\n     * Return width of the gl drawing buffer.\n     */\n    get bufferWidth() {\n        return this._gl.drawingBufferWidth;\n    }\n    /**\n     * Return height of the gl drawing buffer.\n     */\n    get bufferHeight() {\n        return this._gl.drawingBufferHeight;\n    }\n    /**\n     * Return width of the canvas. This will usually be the same as:\n     *   device.bufferWidth\n     */\n    get canvasWidth() {\n        return this._canvas.width;\n    }\n    /**\n     * Return height of the canvas. This will usually be the same as:\n     *   device.bufferHeight\n     */\n    get canvasHeight() {\n        return this._canvas.height;\n    }\n    /**\n     * Return width of canvas in CSS pixels (before applying device pixel ratio)\n     */\n    get canvasCSSWidth() {\n        return this._canvas.clientWidth;\n    }\n    /**\n     * Return height of canvas in CSS pixels (before applying device pixel ratio)\n     */\n    get canvasCSSHeight() {\n        return this._canvas.clientHeight;\n    }\n    /**\n     * Return the device pixel ratio for this device\n     */\n    get pixelRatio() {\n        return this.explicitPixelRatio || window.devicePixelRatio;\n    }\n    /**\n     * Notify the device to check whether updates are needed. This resizes the\n     * canvas, if the device pixel ratio or css canvas width/height changed.\n     */\n    update() {\n        const dpr = this.pixelRatio;\n        const canvas = this._canvas;\n        const width = typeof this.explicitViewportWidth !== \"undefined\"\n            ? this.explicitViewportWidth\n            : canvas.clientWidth * dpr;\n        const height = typeof this.explicitViewportHeight !== \"undefined\"\n            ? this.explicitViewportHeight\n            : canvas.clientHeight * dpr;\n        if (width !== canvas.width) {\n            canvas.width = width;\n        }\n        if (height !== canvas.height) {\n            canvas.height = height;\n        }\n    }\n    /**\n     * Request a render target from the device to draw into. This gives you the\n     * gl.BACK target.\n     *\n     * Drawing should be done within the callback by\n     * calling `target.clear()` or `target.draw()` family of methods.\n     *\n     * Also see `framebuffer.target()`.\n     */\n    target(cb) {\n        this.backbufferTarget.with(cb);\n    }\n    /**\n     * Create a new command with given vertex and fragment shader.\n     *\n     * Commands contain WebGL programs, but also WebGL configuration needed\n     * for drawing: blend, depth test and stencil test configurations, and\n     * uniform callbacks. Uniform callbacks transform recieved props into\n     * uniform values when the command is executed, but if constant, they\n     * will eagerly upload the uniform values to the shaders and not do\n     * at in execution time.\n     */\n    createCommand(vert, frag, options) {\n        return _createCommand(this.state, vert, frag, options);\n    }\n    /**\n     * Create a new vertex buffer with given type and of given size.\n     */\n    createVertexBuffer(type, size, options) {\n        return _createVertexBuffer(this._gl, type, size, options);\n    }\n    /**\n     * Create a new vertex buffer of given type with provided data. Does not\n     * take ownership of data.\n     */\n    createVertexBufferWithTypedArray(type, data, options) {\n        return _createVertexBufferWithTypedArray(this._gl, type, data, options);\n    }\n    /**\n     * Create a new element buffer with given type, primitive, and size.\n     */\n    createElementBuffer(type, primitive, size, options) {\n        return _createElementBuffer(this._gl, type, primitive, size, options);\n    }\n    /**\n     * Create a new element buffer from potentially nested array. Infers\n     * Primitive from the array's shape:\n     *   number[] -> POINTS\n     *   [number, number][] -> LINES\n     *   [number, number, number][] -> TRIANGLES\n     * Does not take ownership of data.\n     */\n    createElementBufferWithArray(data, options) {\n        return _createElementBufferWithArray(this._gl, data, options);\n    }\n    /**\n     * Create a new element buffer of given type with provided data. Does not\n     * take ownership of data.\n     */\n    createElementBufferWithTypedArray(type, primitive, data, options) {\n        return _createElementBufferWithTypedArray(this._gl, type, primitive, data, options);\n    }\n    /**\n     * Create new attributes with element and attribute definitions, and an\n     * optional count limit.\n     *\n     * Element definitions can either be a primitive definition, reference an\n     * existing element buffer, or have enough information to create an element\n     * buffer.\n     *\n     * Attribute definitions can either reference an existing vertex buffer,\n     * or have enough information to create a vertex buffer.\n     *\n     * Empty attribute definitions are valid. If no attributes nor elements\n     * given, there will be no underlying vertex array object created, only the\n     * count will be given to gl.drawArrays()\n     */\n    createAttributes(elements, attributes, options) {\n        return _createAttributes(this.state, elements, attributes, options);\n    }\n    /**\n     * Create empty attributes of a given primitive. This actually performs no\n     * gl calls, only remembers the count for `gl.drawArrays()`\n     */\n    createEmptyAttributes(primitive, count) {\n        return new Attributes(this.state, primitive, [], count, 0);\n    }\n    /**\n     * Create a new texture with given width, height, and internal format.\n     * The internal format determines, what kind of data is possible to store.\n     */\n    createTexture(width, height, storageFormat, options) {\n        return _createTexture(this._gl, width, height, storageFormat, options);\n    }\n    /**\n     * Create a new texture with width and height equal to the given image, and\n     * store the image in the texture.\n     */\n    createTextureWithImage(image, options) {\n        return _createTextureWithTypedArray(this._gl, image.width, image.height, 32856 /* RGBA8 */, image.data, 6408 /* RGBA */, 5121 /* UNSIGNED_BYTE */, options);\n    }\n    /**\n     * Create a new texture with given width, height, and internal format.\n     * The internal format determines, what kind of data is possible to store.\n     * Store data of given format and type contained in a typed array to the\n     * texture.\n     */\n    createTextureWithTypedArray(width, height, internalFormat, data, dataFormat, dataType, options) {\n        return _createTextureWithTypedArray(this._gl, width, height, internalFormat, data, dataFormat, dataType, options);\n    }\n    /**\n     * Create a framebuffer containg one or more color buffers and a\n     * depth or depth-stencil buffer with given width and height.\n     *\n     * Does not take ownership of provided attachments, only references them.\n     * WebGL will synchronize their usage so they can either be written to via\n     * the framebuffer, or written to or read via their own methods.\n     */\n    createFramebuffer(width, height, color, depthStencil) {\n        return _createFramebuffer(this.state, width, height, color, depthStencil);\n    }\n}\nfunction createDebugFunc(gl, key) {\n    return function debugWrapper() {\n        console.debug(`DEBUG ${key} ${Array.from(arguments)}`);\n        return gl[key].apply(gl, arguments);\n    };\n}\n//# sourceMappingURL=device.js.map"],"names":["assert.unreachable","assert.nonNull","assert.equal","assert.oneOf","assert.isArray","assert.isFalse","sizeOf","array.is2","array.shape2","assert.rangeInclusive","array.ravel2","INT_PATTERN","assert.gt","assert.nonEmpty"],"mappings":"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"}